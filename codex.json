[
    {
        "file_path": "./codex.lua",
        "classes": [
            {
                "name": "vec2",
                "name_in_source": "vec2",
                "methods": [
                    {
                        "name": "dist",
                        "short_desc": "Calculates the distance between two points",
                        "desc": "",
                        "params": [
                            {
                                "name": "a",
                                "desc": "The first point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The second point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 749,
                        "stop_char": 776
                    },
                    {
                        "name": "dist2",
                        "short_desc": "Calculates the squared distance between two points",
                        "desc": "",
                        "params": [
                            {
                                "name": "a",
                                "desc": "The first point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The second point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 918,
                        "stop_char": 946
                    },
                    {
                        "name": "dot",
                        "short_desc": "Calculates the dot product of two vectors",
                        "desc": "",
                        "params": [
                            {
                                "name": "a",
                                "desc": "The first vector to dot with",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The second vector to dot with",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 1105,
                        "stop_char": 1131
                    },
                    {
                        "name": "lerp",
                        "short_desc": "Calculates the linear interpolation between two points",
                        "desc": "https://web.archive.org/web/20220115105703/https://keithmaggio.wordpress.com/2011/02/15/math-magician-lerp-slerp-and-nlerp/",
                        "params": [
                            {
                                "name": "a",
                                "desc": "The first point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The second point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "delta",
                                "desc": "A value between 0 and 1 indicating how much to interpolate towards the second point",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 1658,
                        "stop_char": 1692
                    },
                    {
                        "name": "angle_to",
                        "short_desc": "TODO: Write documentation about this method",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 1782,
                        "stop_char": 1815
                    },
                    {
                        "name": "clone",
                        "short_desc": "Creates a new instance containing the same data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 1885,
                        "stop_char": 1909
                    },
                    {
                        "name": "cross",
                        "short_desc": "Crosses the current vector with another vector",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "The vector to cross with",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2025,
                        "stop_char": 2055
                    },
                    {
                        "name": "len",
                        "short_desc": "Calculates the vector's length",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2110,
                        "stop_char": 2132
                    },
                    {
                        "name": "len2",
                        "short_desc": "Calculates the vector's squared length",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2195,
                        "stop_char": 2218
                    },
                    {
                        "name": "mirror_on",
                        "short_desc": "TODO: Write documentation about this method",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2306,
                        "stop_char": 2340
                    },
                    {
                        "name": "normalize",
                        "short_desc": "Normalizes the vector so that its length is 1 and returns a new copy",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2431,
                        "stop_char": 2459
                    },
                    {
                        "name": "normalize_inplace",
                        "short_desc": "Normalizes the vector in-place so that its length is 1",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2536,
                        "stop_char": 2572
                    },
                    {
                        "name": "perpendicular",
                        "short_desc": "Returns the vector perpendicular to the current",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2642,
                        "stop_char": 2674
                    },
                    {
                        "name": "project_on",
                        "short_desc": "Projects the current vector into another vector",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "The vector on which we are projecting the current vector",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2823,
                        "stop_char": 2858
                    },
                    {
                        "name": "rotate",
                        "short_desc": "Rotates the vector in a certain angle",
                        "desc": "",
                        "params": [
                            {
                                "name": "phi",
                                "desc": "Amount to be rotated, in radians",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 2972,
                        "stop_char": 3000
                    },
                    {
                        "name": "rotate_inplace",
                        "short_desc": "Rotates the vector in-place in a certain angle",
                        "desc": "",
                        "params": [
                            {
                                "name": "phi",
                                "desc": "Amount to be rotated, in radians",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 3123,
                        "stop_char": 3159
                    },
                    {
                        "name": "trim",
                        "short_desc": "Truncates (scales down) the vector if its length is larger than maxLen",
                        "desc": "https://web.archive.org/web/20130512171728/http://blog.signalsondisplay.com/?p=336",
                        "params": [
                            {
                                "name": "maxLen",
                                "desc": "The maximum length of the vector",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 3396,
                        "stop_char": 3425
                    },
                    {
                        "name": "trim_inplace",
                        "short_desc": "Truncates (scales down) the vector in-place if its length is larger than maxLen",
                        "desc": "https://web.archive.org/web/20130512171728/http://blog.signalsondisplay.com/?p=336",
                        "params": [
                            {
                                "name": "maxLen",
                                "desc": "The maximum length of the vector",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec2"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 3671,
                        "stop_char": 3708
                    },
                    {
                        "name": "unpack",
                        "short_desc": "Unpacks the vector into its components",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "or",
                                    "types": [
                                        {
                                            "id": "number"
                                        },
                                        {
                                            "id": "number"
                                        }
                                    ]
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 3779,
                        "stop_char": 3804
                    }
                ],
                "short_desc": "A vec2 represents a 2-dimensional vector and includes methods to manipulate it",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "vec3",
                "name_in_source": "vec3",
                "methods": [
                    {
                        "name": "dist",
                        "short_desc": "Calculates the distance between two points",
                        "desc": "",
                        "params": [
                            {
                                "name": "a",
                                "desc": "The first point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The second point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 4960,
                        "stop_char": 4987
                    },
                    {
                        "name": "dist2",
                        "short_desc": "Calculates the squared distance between two points",
                        "desc": "",
                        "params": [
                            {
                                "name": "a",
                                "desc": "The first point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The second point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 5129,
                        "stop_char": 5157
                    },
                    {
                        "name": "dot",
                        "short_desc": "Calculates the dot product of two vectors",
                        "desc": "",
                        "params": [
                            {
                                "name": "a",
                                "desc": "The first vector to dot with",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The second vector to dot with",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 5316,
                        "stop_char": 5342
                    },
                    {
                        "name": "isvector",
                        "short_desc": "Returns true when a valid vec3 is provided",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "The value to test against",
                                "type": {
                                    "id": "any"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "boolean"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 5457,
                        "stop_char": 5490
                    },
                    {
                        "name": "lerp",
                        "short_desc": "Calculates the linear interpolation between two points",
                        "desc": "https://web.archive.org/web/20220115105703/https://keithmaggio.wordpress.com/2011/02/15/math-magician-lerp-slerp-and-nlerp/",
                        "params": [
                            {
                                "name": "a",
                                "desc": "The first point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The second point",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "delta",
                                "desc": "A value between 0 and 1 indicating how much to interpolate towards the second point",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 5869,
                        "stop_char": 5903
                    },
                    {
                        "name": "angle_between",
                        "short_desc": "Calculates the angle between two different vectors",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "The second vector we are getting the angle between",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6051,
                        "stop_char": 6089
                    },
                    {
                        "name": "angle_to",
                        "short_desc": "TODO: Write documentation about this method, but only seems to work on 2D vectors (why is this here?)",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6237,
                        "stop_char": 6270
                    },
                    {
                        "name": "clone",
                        "short_desc": "Creates a new instance containing the same data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6340,
                        "stop_char": 6364
                    },
                    {
                        "name": "cross",
                        "short_desc": "Crosses the current vector with another vector",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "The vector to cross with",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6480,
                        "stop_char": 6510
                    },
                    {
                        "name": "len",
                        "short_desc": "Calculates the vector's length",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6565,
                        "stop_char": 6587
                    },
                    {
                        "name": "len2",
                        "short_desc": "Calculates the vector's squared length",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6650,
                        "stop_char": 6673
                    },
                    {
                        "name": "mirror_on",
                        "short_desc": "TODO: Write documentation about this method",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6761,
                        "stop_char": 6795
                    },
                    {
                        "name": "normalize",
                        "short_desc": "Normalizes the vector so that its length is 1 and returns a new copy",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6886,
                        "stop_char": 6914
                    },
                    {
                        "name": "normalize_inplace",
                        "short_desc": "Normalizes the vector in-place so that its length is 1",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 6991,
                        "stop_char": 7027
                    },
                    {
                        "name": "orientation_to_direction",
                        "short_desc": "TODO: Write documentation about this method",
                        "desc": "",
                        "params": [
                            {
                                "name": "orientation",
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 7120,
                        "stop_char": 7174
                    },
                    {
                        "name": "perpendicular",
                        "short_desc": "Returns the vector perpendicular to the current",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 7244,
                        "stop_char": 7276
                    },
                    {
                        "name": "project_from",
                        "short_desc": "TODO: Write documentation about this method",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 7364,
                        "stop_char": 7401
                    },
                    {
                        "name": "project_on",
                        "short_desc": "Projects the current vector into another vector",
                        "desc": "",
                        "params": [
                            {
                                "name": "vector",
                                "desc": "The vector on which we are projecting the current vector",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 7550,
                        "stop_char": 7585
                    },
                    {
                        "name": "project_on_plane",
                        "short_desc": "Projects the current vector into a plane",
                        "desc": "",
                        "params": [
                            {
                                "name": "plane_normal",
                                "desc": "The normal of the plane on which we are projecting the current vector",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 7746,
                        "stop_char": 7793
                    },
                    {
                        "name": "rotate",
                        "short_desc": "Rotates the vector by an axis",
                        "desc": "",
                        "params": [
                            {
                                "name": "phi",
                                "desc": "Amount to be rotated, in radians",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "axis",
                                "desc": "Axis by which the vector will be rotated",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 7960,
                        "stop_char": 7994
                    },
                    {
                        "name": "trim",
                        "short_desc": "Truncates (scales down) the vector if its length is larger than maxLen",
                        "desc": "https://web.archive.org/web/20130512171728/http://blog.signalsondisplay.com/?p=336",
                        "params": [
                            {
                                "name": "maxLen",
                                "desc": "The maximum length of the vector",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 8231,
                        "stop_char": 8260
                    },
                    {
                        "name": "trim_inplace",
                        "short_desc": "Truncates (scales down) the vector in-place if its length is larger than maxLen",
                        "desc": "https://web.archive.org/web/20130512171728/http://blog.signalsondisplay.com/?p=336",
                        "params": [
                            {
                                "name": "maxLen",
                                "desc": "The maximum length of the vector",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "vec3"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 8506,
                        "stop_char": 8543
                    },
                    {
                        "name": "unpack",
                        "short_desc": "Unpacks the vector into its components",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "or",
                                    "types": [
                                        {
                                            "id": "or",
                                            "types": [
                                                {
                                                    "id": "number"
                                                },
                                                {
                                                    "id": "number"
                                                }
                                            ]
                                        },
                                        {
                                            "id": "number"
                                        }
                                    ]
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": false,
                        "visibility": "public",
                        "start_char": 8622,
                        "stop_char": 8647
                    }
                ],
                "short_desc": "A vec3 represents a 3-dimensional vector and includes methods to manipulate it",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "DUAtlasCelestialBody",
                "name_in_source": "AtlasCelestialBody",
                "methods": [],
                "short_desc": "Represents a celestial body (planet, moon, moonlet, asteroid, etc) found in the Dual Universe atlas",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "DUMultiLanguageString",
                "name_in_source": "DUMultiLanguageString",
                "methods": [],
                "short_desc": "Describes a localized string in multiple languages",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Adjustor",
                "name_in_source": "Adjustor",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 13702,
                        "stop_char": 13729
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 13901,
                        "stop_char": 13928
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 14037,
                        "stop_char": 14073
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 14143,
                        "stop_char": 14179
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 14266,
                        "stop_char": 14296
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 14371,
                        "stop_char": 14409
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 14500,
                        "stop_char": 14532
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 14600,
                        "stop_char": 14630
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 14717,
                        "stop_char": 14748
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 14838,
                        "stop_char": 14876
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 15024,
                        "stop_char": 15054
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 15209,
                        "stop_char": 15241
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 15330,
                        "stop_char": 15363
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 15445,
                        "stop_char": 15473
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 15626,
                        "stop_char": 15661
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 15771,
                        "stop_char": 15806
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 15900,
                        "stop_char": 15938
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 16088,
                        "stop_char": 16135
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 16259,
                        "stop_char": 16300
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 16450,
                        "stop_char": 16484
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 16602,
                        "stop_char": 16643
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 16822,
                        "stop_char": 16865
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 17032,
                        "stop_char": 17060
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 17233,
                        "stop_char": 17264
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 17441,
                        "stop_char": 17474
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 17621,
                        "stop_char": 17654
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 17807,
                        "stop_char": 17843
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 18000,
                        "stop_char": 18038
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 18679,
                        "stop_char": 18724
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 19364,
                        "stop_char": 19402
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 20043,
                        "stop_char": 20082
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 20332,
                        "stop_char": 20375
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 20466,
                        "stop_char": 20496
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 20643,
                        "stop_char": 20685
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 20798,
                        "stop_char": 20835
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the adjustor is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The adjustor state, 1 if active",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 21155,
                        "stop_char": 21186
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 21263,
                        "stop_char": 21294
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the exhaust thrust of the adjustor",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The adjustor thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 21494,
                        "stop_char": 21532
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current exhaust thrust of the adjustor",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current exhaust thrust of the adjustor in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 21661,
                        "stop_char": 21693
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "Returns the maximal exhaust thrust the adjustor can deliver",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum exhaust thrust of the adjustor in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 21831,
                        "stop_char": 21866
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 21955,
                        "stop_char": 21994
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the adjustor exhaust thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The adjustor exhaust thrust direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 22170,
                        "stop_char": 22206
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the adjustor torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 22347,
                        "stop_char": 22383
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the adjustor exhaust thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The adjustor thrust direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 22531,
                        "stop_char": 22572
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 22661,
                        "stop_char": 22694
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the adjustor torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 22815,
                        "stop_char": 22856
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 22945,
                        "stop_char": 22978
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 23033,
                        "stop_char": 23067
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 23132,
                        "stop_char": 23176
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 23223,
                        "stop_char": 23264
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 23314,
                        "stop_char": 23358
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 23405,
                        "stop_char": 23446
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 23486,
                        "stop_char": 23520
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 23570,
                        "stop_char": 23599
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Airbrake",
                "name_in_source": "Airbrake",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 23810,
                        "stop_char": 23837
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24009,
                        "stop_char": 24036
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24145,
                        "stop_char": 24181
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24251,
                        "stop_char": 24287
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24374,
                        "stop_char": 24404
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24479,
                        "stop_char": 24517
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24608,
                        "stop_char": 24640
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24708,
                        "stop_char": 24738
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24825,
                        "stop_char": 24856
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 24946,
                        "stop_char": 24984
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 25132,
                        "stop_char": 25162
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 25317,
                        "stop_char": 25349
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 25438,
                        "stop_char": 25471
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 25553,
                        "stop_char": 25581
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 25734,
                        "stop_char": 25769
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 25879,
                        "stop_char": 25914
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 26008,
                        "stop_char": 26046
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 26196,
                        "stop_char": 26243
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 26367,
                        "stop_char": 26408
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 26558,
                        "stop_char": 26592
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 26710,
                        "stop_char": 26751
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 26930,
                        "stop_char": 26973
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 27140,
                        "stop_char": 27168
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 27341,
                        "stop_char": 27372
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 27549,
                        "stop_char": 27582
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 27729,
                        "stop_char": 27762
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 27915,
                        "stop_char": 27951
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 28108,
                        "stop_char": 28146
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 28787,
                        "stop_char": 28832
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 29472,
                        "stop_char": 29510
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 30151,
                        "stop_char": 30190
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 30440,
                        "stop_char": 30483
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 30574,
                        "stop_char": 30604
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 30751,
                        "stop_char": 30793
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 30906,
                        "stop_char": 30943
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the brake is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 31247,
                        "stop_char": 31278
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 31361,
                        "stop_char": 31392
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the brake. Note that brakes can generate a force only in the movement opposite direction",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The brake thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 31654,
                        "stop_char": 31692
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the brake",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 31757,
                        "stop_char": 31789
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 31932,
                        "stop_char": 31967
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 32062,
                        "stop_char": 32101
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the brake can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 32480,
                        "stop_char": 32522
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 32620,
                        "stop_char": 32655
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the brake can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the brake",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 32961,
                        "stop_char": 33003
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 33112,
                        "stop_char": 33157
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the brake thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 33247,
                        "stop_char": 33283
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the brake thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 33363,
                        "stop_char": 33404
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 33499,
                        "stop_char": 33532
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 33590,
                        "stop_char": 33624
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 33692,
                        "stop_char": 33736
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 33801,
                        "stop_char": 33842
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 33910,
                        "stop_char": 33954
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 34019,
                        "stop_char": 34060
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 34118,
                        "stop_char": 34152
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 34205,
                        "stop_char": 34234
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 34291,
                        "stop_char": 34324
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Airfoil",
                "name_in_source": "Airfoil",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 34532,
                        "stop_char": 34558
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 34729,
                        "stop_char": 34755
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 34864,
                        "stop_char": 34899
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 34969,
                        "stop_char": 35004
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 35091,
                        "stop_char": 35120
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 35195,
                        "stop_char": 35232
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 35323,
                        "stop_char": 35354
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 35422,
                        "stop_char": 35451
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 35538,
                        "stop_char": 35568
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 35658,
                        "stop_char": 35695
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 35843,
                        "stop_char": 35872
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 36027,
                        "stop_char": 36058
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 36147,
                        "stop_char": 36179
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 36261,
                        "stop_char": 36288
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 36441,
                        "stop_char": 36475
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 36585,
                        "stop_char": 36619
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 36713,
                        "stop_char": 36750
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 36900,
                        "stop_char": 36946
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 37070,
                        "stop_char": 37110
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 37260,
                        "stop_char": 37293
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 37411,
                        "stop_char": 37451
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 37630,
                        "stop_char": 37672
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 37839,
                        "stop_char": 37866
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 38039,
                        "stop_char": 38069
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 38246,
                        "stop_char": 38278
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 38425,
                        "stop_char": 38457
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 38610,
                        "stop_char": 38645
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 38802,
                        "stop_char": 38839
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 39480,
                        "stop_char": 39524
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 40164,
                        "stop_char": 40201
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 40842,
                        "stop_char": 40880
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 41130,
                        "stop_char": 41172
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 41263,
                        "stop_char": 41292
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 41439,
                        "stop_char": 41480
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 41593,
                        "stop_char": 41629
                    },
                    {
                        "name": "getLift",
                        "short_desc": "Returns the current lift of the airfoil",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current lift of the airfoil in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 41736,
                        "stop_char": 41765
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 41840,
                        "stop_char": 41871
                    },
                    {
                        "name": "getMaxLift",
                        "short_desc": "Gives the maximum lift that the airfoil can generate, under optimal conditions.",
                        "desc": "Note that the actual maximum lift will most of the time be less than this value",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum lift of the airfoil in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 42102,
                        "stop_char": 42134
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 42219,
                        "stop_char": 42257
                    },
                    {
                        "name": "getDrag",
                        "short_desc": "Returns the current drag of the airfoil",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current drag of the airfoil in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 42364,
                        "stop_char": 42393
                    },
                    {
                        "name": "getDragRatio",
                        "short_desc": "The ratio between lift and drag, depending of the aerodynamic profile of the airfoil",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The ratio between lift and drag",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 42534,
                        "stop_char": 42568
                    },
                    {
                        "name": "getCurrentMinLift",
                        "short_desc": "Returns the minimal lift the airfoil can deliver at the moment (can be higher than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current minimal airfoil lift in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 42826,
                        "stop_char": 42865
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 42953,
                        "stop_char": 42987
                    },
                    {
                        "name": "getCurrentMaxLift",
                        "short_desc": "Returns the maximal lift the aifoil can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual lift will be\nanything below this maximum lift, which defines the current max capability of the airfoil",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current maximal airfoil lift in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 43338,
                        "stop_char": 43377
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 43465,
                        "stop_char": 43499
                    },
                    {
                        "name": "getMaxLiftEfficiency",
                        "short_desc": "Returns the ratio between the current maximum lift and the optimal maximum lift",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be lower for certain airfoils",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 43651,
                        "stop_char": 43693
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 43794,
                        "stop_char": 43838
                    },
                    {
                        "name": "getLiftAxis",
                        "short_desc": "Returns the airfoil lift direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The airfoil lift direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 43992,
                        "stop_char": 44025
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the airfoil torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The airfoil torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 44173,
                        "stop_char": 44208
                    },
                    {
                        "name": "getWorldLiftAxis",
                        "short_desc": "Returns the airfoil lift direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The airfoil lift direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 44342,
                        "stop_char": 44380
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 44465,
                        "stop_char": 44497
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the adjustor torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The airfoil torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 44626,
                        "stop_char": 44666
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 44753,
                        "stop_char": 44785
                    },
                    {
                        "name": "isStalled",
                        "short_desc": "Checks if the airfoil is stalled",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the airfoil is stalled",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 44871,
                        "stop_char": 44902
                    },
                    {
                        "name": "getStallAngle",
                        "short_desc": "Returns the airfoil stall angle",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The stall angle of the airfoil in degrees",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 45000,
                        "stop_char": 45035
                    },
                    {
                        "name": "getMinAngle",
                        "short_desc": "Returns the minimum angle to produce the maximum lift of the airfoil",
                        "desc": "Note that the airfoil will produce lift at a lower angle but not optimally",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The minimum angle of the airfoil in degrees",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 45251,
                        "stop_char": 45284
                    },
                    {
                        "name": "getMaxAngle",
                        "short_desc": "Returns the maximum angle to produce the maximum lift of the airfoil",
                        "desc": "Note that the airfoil will produce lift at a higher angle but not optimally",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum angle of the airfoil in degrees",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 45501,
                        "stop_char": 45534
                    },
                    {
                        "name": "activate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 45585,
                        "stop_char": 45615
                    },
                    {
                        "name": "deactivate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 45668,
                        "stop_char": 45700
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 45751,
                        "stop_char": 45781
                    },
                    {
                        "name": "toggle",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 45830,
                        "stop_char": 45858
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 45916,
                        "stop_char": 45947
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 46001,
                        "stop_char": 46034
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 46098,
                        "stop_char": 46141
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 46202,
                        "stop_char": 46242
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 46306,
                        "stop_char": 46349
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 46410,
                        "stop_char": 46450
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 46504,
                        "stop_char": 46537
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 46586,
                        "stop_char": 46614
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "AntiGravityGenerator",
                "name_in_source": "AntiGravityGenerator",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 46861,
                        "stop_char": 46900
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 47084,
                        "stop_char": 47123
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 47232,
                        "stop_char": 47280
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 47350,
                        "stop_char": 47398
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 47485,
                        "stop_char": 47527
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 47602,
                        "stop_char": 47652
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 47743,
                        "stop_char": 47787
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 47855,
                        "stop_char": 47897
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 47984,
                        "stop_char": 48027
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 48117,
                        "stop_char": 48167
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 48315,
                        "stop_char": 48357
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 48512,
                        "stop_char": 48556
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 48645,
                        "stop_char": 48690
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 48772,
                        "stop_char": 48812
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 48965,
                        "stop_char": 49012
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 49122,
                        "stop_char": 49169
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 49263,
                        "stop_char": 49313
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 49463,
                        "stop_char": 49522
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 49646,
                        "stop_char": 49699
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 49849,
                        "stop_char": 49895
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 50013,
                        "stop_char": 50066
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 50245,
                        "stop_char": 50300
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 50467,
                        "stop_char": 50507
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 50680,
                        "stop_char": 50723
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 50900,
                        "stop_char": 50945
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 51092,
                        "stop_char": 51137
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 51290,
                        "stop_char": 51338
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 51495,
                        "stop_char": 51545
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 52186,
                        "stop_char": 52243
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 52883,
                        "stop_char": 52933
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 53574,
                        "stop_char": 53625
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Returns the state of activation of the anti-gravity generator",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the anti-gravity generator is started, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 53944,
                        "stop_char": 53987
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 54096,
                        "stop_char": 54139
                    },
                    {
                        "name": "getFieldStrength",
                        "short_desc": "Returns the strength of the anti-gravitational field",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The power of the anti-gravitational field in Es",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 54345,
                        "stop_char": 54396
                    },
                    {
                        "name": "getCompensationRate",
                        "short_desc": "Returns the current rate of compensation of the gravitational field",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current rate in percentage",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 54519,
                        "stop_char": 54573
                    },
                    {
                        "name": "getFieldPower",
                        "short_desc": "Returns the current power of the gravitational field",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current power in percentage",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 54682,
                        "stop_char": 54730
                    },
                    {
                        "name": "getPulsorCount",
                        "short_desc": "Returns the number of pulsors linked to the anti-gravity generator",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of pulsors linked",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 54851,
                        "stop_char": 54900
                    },
                    {
                        "name": "setTargetAltitude",
                        "short_desc": "Set the target altitude for the anti-gravity field. Cannot be called from onFlush",
                        "desc": "",
                        "params": [
                            {
                                "name": "altitude",
                                "desc": "The target altitude in meters. It will be reached with a slow acceleration (not instantaneous)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 55109,
                        "stop_char": 55169
                    },
                    {
                        "name": "setBaseAltitude",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 55310,
                        "stop_char": 55360
                    },
                    {
                        "name": "getTargetAltitude",
                        "short_desc": "Returns the target altitude defined for the anti-gravitational field",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The target altitude in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 55483,
                        "stop_char": 55535
                    },
                    {
                        "name": "getBaseAltitude",
                        "short_desc": "Returns the current base altitude of the anti-gravitational field",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current base altitude in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 55661,
                        "stop_char": 55711
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "AtmosphericEngine",
                "name_in_source": "AtmosphericEngine",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 55949,
                        "stop_char": 55985
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 56166,
                        "stop_char": 56202
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 56311,
                        "stop_char": 56356
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 56426,
                        "stop_char": 56471
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 56558,
                        "stop_char": 56597
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 56672,
                        "stop_char": 56719
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 56810,
                        "stop_char": 56851
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 56919,
                        "stop_char": 56958
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 57045,
                        "stop_char": 57085
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 57175,
                        "stop_char": 57222
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 57370,
                        "stop_char": 57409
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 57564,
                        "stop_char": 57605
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 57694,
                        "stop_char": 57736
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 57818,
                        "stop_char": 57855
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 58008,
                        "stop_char": 58052
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 58162,
                        "stop_char": 58206
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 58300,
                        "stop_char": 58347
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 58497,
                        "stop_char": 58553
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 58677,
                        "stop_char": 58727
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 58877,
                        "stop_char": 58920
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 59038,
                        "stop_char": 59088
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 59267,
                        "stop_char": 59319
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 59486,
                        "stop_char": 59523
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 59696,
                        "stop_char": 59736
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 59913,
                        "stop_char": 59955
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 60102,
                        "stop_char": 60144
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 60297,
                        "stop_char": 60342
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 60499,
                        "stop_char": 60546
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 61187,
                        "stop_char": 61241
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 61881,
                        "stop_char": 61928
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 62569,
                        "stop_char": 62617
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 62867,
                        "stop_char": 62919
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 63010,
                        "stop_char": 63049
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 63196,
                        "stop_char": 63247
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 63360,
                        "stop_char": 63406
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the engine is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the engine is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 63754,
                        "stop_char": 63794
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 63879,
                        "stop_char": 63919
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The engine thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 64114,
                        "stop_char": 64161
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The thrust of the engine is currently delivering in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 64286,
                        "stop_char": 64327
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 64472,
                        "stop_char": 64516
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 64613,
                        "stop_char": 64661
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the engine can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current minimal engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 65085,
                        "stop_char": 65136
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 65236,
                        "stop_char": 65280
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the engine can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the engine",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current maximum engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 65632,
                        "stop_char": 65683
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be lower for certain engines",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 65838,
                        "stop_char": 65892
                    },
                    {
                        "name": "isTorqueEnabled",
                        "short_desc": "Checks if the torque generation is enabled on the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the torque is enabled on the engine",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 66015,
                        "stop_char": 66062
                    },
                    {
                        "name": "enableTorque",
                        "short_desc": "Sets the torque generation state on the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": "",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 66140,
                        "stop_char": 66189
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the engine thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 66345,
                        "stop_char": 66390
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the engine torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 66529,
                        "stop_char": 66574
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the engine exhaust thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 66718,
                        "stop_char": 66768
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 66865,
                        "stop_char": 66907
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the engine torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 67026,
                        "stop_char": 67076
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 67173,
                        "stop_char": 67215
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "Checks if the engine out of fuel",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when there is no fuel left, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 67315,
                        "stop_char": 67358
                    },
                    {
                        "name": "getFuelId",
                        "short_desc": "Returns the item ID of the fuel currently used by the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the fuel currently used",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 67483,
                        "stop_char": 67524
                    },
                    {
                        "name": "getFuelTankId",
                        "short_desc": "Returns the local ID of the fueltank linked to the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local ID of the fueltank",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 67636,
                        "stop_char": 67681
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "Checks if the engine linked to a functional Fuel Tank (not broken or colliding)?",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the linked tank is functional, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 67837,
                        "stop_char": 67890
                    },
                    {
                        "name": "hasBrokenFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 67997,
                        "stop_char": 68046
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "Returns the engine fuel consumption rate per newton of thrust delivered per second",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current rate of fuel consumption in m\u0412\u0456/(N.s)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 68203,
                        "stop_char": 68253
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "Returns the ratio between the current fuel rate and the theoretical nominal fuel rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be higher for certain engines at certain speeds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 68429,
                        "stop_char": 68482
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "Returns the current fuel consumption rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The rate of fuel consumption in m3/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 68585,
                        "stop_char": 68635
                    },
                    {
                        "name": "getWarmupTime",
                        "short_desc": "Returns the T50; the time needed for the engine to reach 50% of its maximal thrust (all engines",
                        "desc": "do not instantly reach the thrust that is set for them, but they can take time to \"warm up\" to\nthe final value)",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time to half thrust in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 68910,
                        "stop_char": 68955
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 69043,
                        "stop_char": 69081
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 69145,
                        "stop_char": 69188
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "BaseShieldGenerator",
                "name_in_source": "BaseShieldGenerator",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 69432,
                        "stop_char": 69470
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 69653,
                        "stop_char": 69691
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 69800,
                        "stop_char": 69847
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 69917,
                        "stop_char": 69964
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 70051,
                        "stop_char": 70092
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 70167,
                        "stop_char": 70216
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 70307,
                        "stop_char": 70350
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 70418,
                        "stop_char": 70459
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 70546,
                        "stop_char": 70588
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 70678,
                        "stop_char": 70727
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 70875,
                        "stop_char": 70916
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 71071,
                        "stop_char": 71114
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 71203,
                        "stop_char": 71247
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 71329,
                        "stop_char": 71368
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 71521,
                        "stop_char": 71567
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 71677,
                        "stop_char": 71723
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 71817,
                        "stop_char": 71866
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 72016,
                        "stop_char": 72074
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 72198,
                        "stop_char": 72250
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 72400,
                        "stop_char": 72445
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 72563,
                        "stop_char": 72615
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 72794,
                        "stop_char": 72848
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 73015,
                        "stop_char": 73054
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 73227,
                        "stop_char": 73269
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 73446,
                        "stop_char": 73490
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 73637,
                        "stop_char": 73681
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 73834,
                        "stop_char": 73881
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 74038,
                        "stop_char": 74087
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 74728,
                        "stop_char": 74784
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 75424,
                        "stop_char": 75473
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 76114,
                        "stop_char": 76164
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Returns the activation state of the shield",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The state of the shield; 1 when the shield is active, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 76515,
                        "stop_char": 76557
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 76664,
                        "stop_char": 76706
                    },
                    {
                        "name": "getShieldHitpoints",
                        "short_desc": "Returns the current hitpoints of the shield",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current hitpoints of the shield",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 76810,
                        "stop_char": 76862
                    },
                    {
                        "name": "getMaxShieldHitpoints",
                        "short_desc": "Returns the maximal hitpoints of the shield",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximal hitpoints of the shield",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 76966,
                        "stop_char": 77021
                    },
                    {
                        "name": "getResistances",
                        "short_desc": "Returns distribution of resistance pool over resistance types",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Resistance to damage type {antimatter, electromagnetic, kinetic, thermic}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 77180,
                        "stop_char": 77228
                    },
                    {
                        "name": "setResistances",
                        "short_desc": "Distribute the resistance pool according to damage type",
                        "desc": "",
                        "params": [
                            {
                                "name": "antimatter",
                                "desc": "Antimatter damage resistance",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "electromagnetic",
                                "desc": "Electromagnetic damage resistance",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "kinetic",
                                "desc": "Kinetic damage resistance",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "thermic",
                                "desc": "Thermic damage resistance",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if resistance was distributed, 0 if an error occurred",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 77591,
                        "stop_char": 77684
                    },
                    {
                        "name": "getResistancesCooldown",
                        "short_desc": "Returns time after which adjusting resistances is possible again",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Remaining seconds of the resistance cooldown",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 77818,
                        "stop_char": 77874
                    },
                    {
                        "name": "getResistancesMaxCooldown",
                        "short_desc": "Returns maximal cooldown between adjusting resistances",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Maximal seconds of the resistance cooldown",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 77996,
                        "stop_char": 78055
                    },
                    {
                        "name": "getResistancesPool",
                        "short_desc": "Returns total resistance pool that may be distributed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Total pool of resistances",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 78159,
                        "stop_char": 78211
                    },
                    {
                        "name": "getResistancesRemaining",
                        "short_desc": "Returns the remaining amount of the resistance pool that can be distributed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Remaining resistance pool",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 78337,
                        "stop_char": 78394
                    },
                    {
                        "name": "getStressRatio",
                        "short_desc": "Returns ratio per damage type of recent weapon impacts after applying resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Stress ratio due to damage type {antimatter, electromagnetic, kinetic, thermic}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 78578,
                        "stop_char": 78626
                    },
                    {
                        "name": "getStressRatioRaw",
                        "short_desc": "Returns ratio per damage type of recent weapon impacts without resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Stress ratio due to damage type {antimatter, electromagnetic, kinetic, thermic}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 78803,
                        "stop_char": 78854
                    },
                    {
                        "name": "getStressHitpoints",
                        "short_desc": "Returns stress, that is the total hitpoints of recent weapon impacts after applying resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Total stress hitpoints due to recent weapon impacts",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 79025,
                        "stop_char": 79077
                    },
                    {
                        "name": "getStressHitpointsRaw",
                        "short_desc": "Returns stress, that is the total hitpoints of recent weapon impacts without resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Total stress hitpoints due to recent weapon impacts",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 79241,
                        "stop_char": 79296
                    },
                    {
                        "name": "inLockdown",
                        "short_desc": "Returns whether the base shield is currently in lockdown",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The base shield lockdown state; 1 when the shield is in lockdown, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 79456,
                        "stop_char": 79500
                    },
                    {
                        "name": "getLockdownRemaining",
                        "short_desc": "Returns the remaining time of the base shield lockdown",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Remaining lockdown time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 79614,
                        "stop_char": 79668
                    },
                    {
                        "name": "getLockdownExitTime",
                        "short_desc": "Returns the hour since midnight of the preferred lockdown exit",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Preferred lockdown exit hour UTC",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 79789,
                        "stop_char": 79842
                    },
                    {
                        "name": "setLockdownExitTime",
                        "short_desc": "Set hour since midnight for the preferred lockdown exit",
                        "desc": "",
                        "params": [
                            {
                                "name": "hour",
                                "desc": "Preferred lockdown exit hour UTC (0-23)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if lockdown exit was set, 0 if an error occurred",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 80037,
                        "stop_char": 80094
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "BrakeEngine",
                "name_in_source": "BrakeEngine",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 81564,
                        "stop_char": 81594
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 81769,
                        "stop_char": 81799
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 81908,
                        "stop_char": 81947
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 82017,
                        "stop_char": 82056
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 82143,
                        "stop_char": 82176
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 82251,
                        "stop_char": 82292
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 82383,
                        "stop_char": 82418
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 82486,
                        "stop_char": 82519
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 82606,
                        "stop_char": 82640
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 82730,
                        "stop_char": 82771
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 82919,
                        "stop_char": 82952
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 83107,
                        "stop_char": 83142
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 83231,
                        "stop_char": 83267
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 83349,
                        "stop_char": 83380
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 83533,
                        "stop_char": 83571
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 83681,
                        "stop_char": 83719
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 83813,
                        "stop_char": 83854
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 84004,
                        "stop_char": 84054
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 84178,
                        "stop_char": 84222
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 84372,
                        "stop_char": 84409
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 84527,
                        "stop_char": 84571
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 84750,
                        "stop_char": 84796
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 84963,
                        "stop_char": 84994
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 85167,
                        "stop_char": 85201
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 85378,
                        "stop_char": 85414
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 85561,
                        "stop_char": 85597
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 85750,
                        "stop_char": 85789
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 85946,
                        "stop_char": 85987
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 86628,
                        "stop_char": 86676
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 87316,
                        "stop_char": 87357
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 87998,
                        "stop_char": 88040
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 88290,
                        "stop_char": 88336
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 88427,
                        "stop_char": 88460
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 88607,
                        "stop_char": 88652
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 88765,
                        "stop_char": 88805
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the brake is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 89115,
                        "stop_char": 89149
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 89232,
                        "stop_char": 89266
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the brake. Note that brakes can generate a force only in the movement opposite direction",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The brake thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 89531,
                        "stop_char": 89572
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the brake",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 89637,
                        "stop_char": 89672
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 89815,
                        "stop_char": 89853
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 89948,
                        "stop_char": 89990
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the brake can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 90369,
                        "stop_char": 90414
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 90512,
                        "stop_char": 90550
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the brake can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the brake",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 90856,
                        "stop_char": 90901
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91010,
                        "stop_char": 91058
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the brake thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91148,
                        "stop_char": 91187
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the brake thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91267,
                        "stop_char": 91311
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91406,
                        "stop_char": 91442
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91500,
                        "stop_char": 91537
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91605,
                        "stop_char": 91652
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91717,
                        "stop_char": 91761
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91829,
                        "stop_char": 91876
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 91941,
                        "stop_char": 91985
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 92043,
                        "stop_char": 92080
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 92133,
                        "stop_char": 92165
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 92222,
                        "stop_char": 92258
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Construct",
                "name_in_source": "Construct",
                "methods": [
                    {
                        "name": "getName",
                        "short_desc": "Returns the name of the construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 92358,
                        "stop_char": 92389
                    },
                    {
                        "name": "getId",
                        "short_desc": "Returns the construct unique ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 92447,
                        "stop_char": 92476
                    },
                    {
                        "name": "getOwner",
                        "short_desc": "Returns the owner entity",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The owner entity table with fields {[int] id, [bool] isOrganization} describing the owner. Use system.getPlayerName(id) and system.getOrganization(id) to retrieve info about it",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 92701,
                        "stop_char": 92733
                    },
                    {
                        "name": "getCreator",
                        "short_desc": "Returns the creator entity",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The owner entity table with fields {[int] id, [bool] isOrganization} describing the owner. Use system.getPlayerName(id) and system.getOrganization(id) to retrieve info about it",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 92962,
                        "stop_char": 92996
                    },
                    {
                        "name": "isWarping",
                        "short_desc": "Checks if the construct is currently warping",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 93067,
                        "stop_char": 93100
                    },
                    {
                        "name": "getWarpState",
                        "short_desc": "Returns the current warp state",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current warp state index (Idle = 1, Engage = 2, Align = 3, Spool = 4, Accelerate = 5, Cruise = 6, Decelerate = 7, Stopping = 8, Disengage = 9)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 93303,
                        "stop_char": 93339
                    },
                    {
                        "name": "isInPvPZone",
                        "short_desc": "Checks if the construct is in PvP zone",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 93404,
                        "stop_char": 93439
                    },
                    {
                        "name": "getDistanceToSafeZone",
                        "short_desc": "Returns the distance between the construct and the nearest safe zone",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The distance to the nearest safe zone border in meters. Positive value if the construct is outside of any safe zone",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 93648,
                        "stop_char": 93693
                    },
                    {
                        "name": "getPvPTimer",
                        "short_desc": "Returns the current construct PvP timer state",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The remaining time of the PvP timer, or 0.0 if elapsed",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 93818,
                        "stop_char": 93853
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 93912,
                        "stop_char": 93943
                    },
                    {
                        "name": "getInertialMass",
                        "short_desc": "Returns the inertial mass of the construct, calculated as 1/3 of the trace of the inertial tensor",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 94066,
                        "stop_char": 94105
                    },
                    {
                        "name": "getInertialTensor",
                        "short_desc": "Returns the inertial tensor of the construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 94174,
                        "stop_char": 94215
                    },
                    {
                        "name": "getCenterOfMass",
                        "short_desc": "Returns the position of the center of mass of the construct, in local construct coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 94331,
                        "stop_char": 94370
                    },
                    {
                        "name": "getWorldCenterOfMass",
                        "short_desc": "Returns the position of the center of mass of the construct, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 94476,
                        "stop_char": 94520
                    },
                    {
                        "name": "getCrossSection",
                        "short_desc": "Returns the construct's cross sectional surface in the current direction of movement",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct's surface exposed in the current direction of movement in meters square",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 94715,
                        "stop_char": 94754
                    },
                    {
                        "name": "getSize",
                        "short_desc": "Returns the size of the building zone of the construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 94833,
                        "stop_char": 94864
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the size of the bounding box of the construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 94942,
                        "stop_char": 94984
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the construct in local construct coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 95107,
                        "stop_char": 95151
                    },
                    {
                        "name": "getMaxSpeed",
                        "short_desc": "Returns the max speed along current moving direction",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max speed along current moving direction in m/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 95280,
                        "stop_char": 95315
                    },
                    {
                        "name": "getMaxAngularSpeed",
                        "short_desc": "Returns the max angular speed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max angular speed in rad/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 95400,
                        "stop_char": 95442
                    },
                    {
                        "name": "getMaxSpeedPerAxis",
                        "short_desc": "Returns the max speed per axis",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max speed along axes {x, -x, y, -y, z, -z} in m/s",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 95550,
                        "stop_char": 95592
                    },
                    {
                        "name": "getMaxThrustAlongAxis",
                        "short_desc": "Returns the construct max kinematics parameters in both atmo and space range, in newtons. Kinematics",
                        "desc": "parameters designate here the maximal positive and negative base force the construct is capable of producing along the chosen\nAxisvector, as defined by the Core Unit or the gyro unit, if active. In practice, this gives you an estimate of the maximum\nthrust your ship is capable of producing in space or in atmosphere, as well as the max reverse thrust. These are theoretical\nestimates and correspond with the addition of the maxThrustBase along the corresponding axis. It might not reflect the\naccurate current max thrust capacity of your ship, which depends on various local conditions (atmospheric density,\norientation, obstruction, engine damage, etc)\nThis is typically used in conjunction with the Control Unit throttle to setup the desired forward acceleration",
                        "params": [
                            {
                                "name": "taglist",
                                "desc": "Comma (for union) or space (for intersection) separated list of tags. You can set tags directly on the engines in the right-click menu",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "CRefAxis",
                                "desc": "Axis along which to compute the max force (in construct reference)",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The kinematics parameters in Newtons in the order: atmoRange.FMaxPlus, atmoRange.FMaxMinus, spaceRange.FMaxPlus, spaceRange.FMaxMinus",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 96896,
                        "stop_char": 96958
                    },
                    {
                        "name": "getCurrentBrake",
                        "short_desc": "Returns the current braking force generated by construct brakes",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current braking force in Newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 97083,
                        "stop_char": 97122
                    },
                    {
                        "name": "getMaxBrake",
                        "short_desc": "Returns the maximum braking force that can currently be generated by the construct brakes",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum braking force in Newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 97273,
                        "stop_char": 97308
                    },
                    {
                        "name": "getWorldPosition",
                        "short_desc": "Returns the world position of the construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The xyz world coordinates of the construct center position in meters",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 97444,
                        "stop_char": 97484
                    },
                    {
                        "name": "getVelocity",
                        "short_desc": "The construct's linear velocity, relative to its parent, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Relative linear velocity vector, in construct local coordinates in m/s",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 97666,
                        "stop_char": 97701
                    },
                    {
                        "name": "getWorldVelocity",
                        "short_desc": "The construct's linear velocity, relative to its parent, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Relative linear velocity vector, in world coordinates in m/s",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 97863,
                        "stop_char": 97903
                    },
                    {
                        "name": "getAbsoluteVelocity",
                        "short_desc": "The construct's absolute linear velocity, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Absolute linear velocity vector, in construct local coordinates in m/s",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 98070,
                        "stop_char": 98113
                    },
                    {
                        "name": "getWorldAbsoluteVelocity",
                        "short_desc": "The construct's absolute linear velocity, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Absolute linear velocity vector, in world coordinates in m/s",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 98260,
                        "stop_char": 98308
                    },
                    {
                        "name": "getAcceleration",
                        "short_desc": "The construct's linear acceleration, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Linear acceleration vector, in construct local coordinates in m/s2",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 98466,
                        "stop_char": 98505
                    },
                    {
                        "name": "getWorldAcceleration",
                        "short_desc": "The construct's linear acceleration, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Linear acceleration vector, in world coordinates in m/s2",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 98643,
                        "stop_char": 98687
                    },
                    {
                        "name": "getAngularVelocity",
                        "short_desc": "The construct's angular velocity, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Angular velocity vector, in construct local coordinates in rad/s",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 98840,
                        "stop_char": 98882
                    },
                    {
                        "name": "getWorldAngularVelocity",
                        "short_desc": "The construct's angular velocity, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Angular velocity vector, in world coordinates in rad/s",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 99015,
                        "stop_char": 99062
                    },
                    {
                        "name": "getAngularAcceleration",
                        "short_desc": "The construct's angular acceleration, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Angular acceleration vector, in construct local coordinates in rad/s2",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 99224,
                        "stop_char": 99270
                    },
                    {
                        "name": "getWorldAngularAcceleration",
                        "short_desc": "The construct's angular acceleration, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Angular acceleration vector, in world coordinates in rad/s2",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 99412,
                        "stop_char": 99463
                    },
                    {
                        "name": "getWorldAirFrictionAcceleration",
                        "short_desc": "Returns the acceleration generated by air resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The xyz world acceleration generated by air resistance",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 99594,
                        "stop_char": 99649
                    },
                    {
                        "name": "getWorldAirFrictionAngularAcceleration",
                        "short_desc": "Returns the acceleration torque generated by air resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The xyz world acceleration torque generated by air resistance",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 99794,
                        "stop_char": 99856
                    },
                    {
                        "name": "getFrictionBurnSpeed",
                        "short_desc": "Returns the speed at which your construct will suffer damage due to friction with the air",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct speed to get damages due to friction in m/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 100028,
                        "stop_char": 100072
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward vector of the construct coordinates system",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The forward vector of the construct coordinates system. It's a static value equal to (0,1,0)",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 100251,
                        "stop_char": 100285
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right vector of the construct coordinates system",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The right vector of the construct coordinates system. It's a static value equal to (1,0,0)",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 100460,
                        "stop_char": 100492
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the construct coordinates system",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The up vector of the construct coordinates system.. It's a static value equal to (0,0,1)",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 100672,
                        "stop_char": 100701
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the construct, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The forward direction vector of the construct, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 100868,
                        "stop_char": 100907
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the construct, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The right direction vector of the construct, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 101070,
                        "stop_char": 101107
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the construct, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The up direction vector of the construct, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 101264,
                        "stop_char": 101298
                    },
                    {
                        "name": "getOrientationUnitId",
                        "short_desc": "Returns the local id of the current active orientation unit (core unit or gyro unit)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "local id of the current active orientation unit (core unit or gyro unit)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 101481,
                        "stop_char": 101525
                    },
                    {
                        "name": "getOrientationForward",
                        "short_desc": "Returns the forward direction vector of the active orientation unit, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the active orientation unit, in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 101736,
                        "stop_char": 101781
                    },
                    {
                        "name": "getOrientationRight",
                        "short_desc": "Returns the right direction vector of the active orientation unit, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the active orientation unit, in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 101988,
                        "stop_char": 102031
                    },
                    {
                        "name": "getOrientationUp",
                        "short_desc": "Returns the up direction vector of the active orientation unit, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the active orientation unit, in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 102232,
                        "stop_char": 102272
                    },
                    {
                        "name": "getWorldOrientationForward",
                        "short_desc": "Returns the forward direction vector of the active orientation unit, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the active orientation unit, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 102463,
                        "stop_char": 102513
                    },
                    {
                        "name": "getWorldOrientationRight",
                        "short_desc": "Returns the right direction vector of the active orientation unit, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the active orientation unit, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 102700,
                        "stop_char": 102748
                    },
                    {
                        "name": "getWorldOrientationUp",
                        "short_desc": "Returns the up direction vector of the active orientation unit, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the active orientation unit, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 102929,
                        "stop_char": 102974
                    },
                    {
                        "name": "getParent",
                        "short_desc": "Returns the id of the parent construct of our active construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 103063,
                        "stop_char": 103096
                    },
                    {
                        "name": "getClosestParent",
                        "short_desc": "Returns the id of the nearest constructs, on which the construct can dock",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 103196,
                        "stop_char": 103236
                    },
                    {
                        "name": "getCloseParents",
                        "short_desc": "Returns the list of ids of nearby constructs, on which the construct can dock",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 103338,
                        "stop_char": 103377
                    },
                    {
                        "name": "getParentPosition",
                        "short_desc": "Returns the position of the construct's parent when docked in local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the construct's parent in local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 103540,
                        "stop_char": 103581
                    },
                    {
                        "name": "getParentWorldPosition",
                        "short_desc": "Returns the position of the construct's parent when docked in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the construct's parent in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 103744,
                        "stop_char": 103790
                    },
                    {
                        "name": "getParentForward",
                        "short_desc": "Returns the construct's parent forward direction vector, in local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct's parent forward direction vector, in local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 103961,
                        "stop_char": 104001
                    },
                    {
                        "name": "getParentRight",
                        "short_desc": "Returns the construct's parent right direction vector, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct's parent right direction vector, in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 104188,
                        "stop_char": 104226
                    },
                    {
                        "name": "getParentUp",
                        "short_desc": "Returns the construct's parent up direction vector, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct's parent up direction vector, in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 104407,
                        "stop_char": 104442
                    },
                    {
                        "name": "getParentWorldForward",
                        "short_desc": "Returns the construct's parent forward direction vector, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct's parent forward direction vector, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 104613,
                        "stop_char": 104658
                    },
                    {
                        "name": "getParentWorldRight",
                        "short_desc": "Returns the construct's parent right direction vector, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct's parent right direction vector, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 104825,
                        "stop_char": 104868
                    },
                    {
                        "name": "getParentWorldUp",
                        "short_desc": "Returns the construct's parent up direction vector, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct's parent up direction vector, in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 105029,
                        "stop_char": 105069
                    },
                    {
                        "name": "getPlayersOnBoard",
                        "short_desc": "Returns the list of player IDs on board the construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 105147,
                        "stop_char": 105188
                    },
                    {
                        "name": "getPlayersOnBoardInVRStation",
                        "short_desc": "Returns the list of player ids on board the construct inside a VR Station",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 105286,
                        "stop_char": 105338
                    },
                    {
                        "name": "isPlayerBoarded",
                        "short_desc": "Checks if the given player is on board in the construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The player id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 105455,
                        "stop_char": 105496
                    },
                    {
                        "name": "isPlayerBoardedInVRStation",
                        "short_desc": "Returns 1 if the given player is boarded to the construct inside a VR Station",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The player id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 105635,
                        "stop_char": 105687
                    },
                    {
                        "name": "getBoardedPlayerMass",
                        "short_desc": "Returns the mass of the given player or surrogate if it is on board the construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The player id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 105829,
                        "stop_char": 105875
                    },
                    {
                        "name": "getBoardedInVRStationAvatarMass",
                        "short_desc": "Returns the mass of the given player if in VR station on board the construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The player id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 106012,
                        "stop_char": 106069
                    },
                    {
                        "name": "getDockedConstructs",
                        "short_desc": "Returns the list of IDs of constructs docked to the construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 106155,
                        "stop_char": 106198
                    },
                    {
                        "name": "isConstructDocked",
                        "short_desc": "Checks if the given construct is docked to the construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The construct id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 106319,
                        "stop_char": 106362
                    },
                    {
                        "name": "getDockedConstructMass",
                        "short_desc": "Returns the mass of the given construct if it is docked to the construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The construct id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 106498,
                        "stop_char": 106546
                    },
                    {
                        "name": "setDockingMode",
                        "short_desc": "Sets the docking mode",
                        "desc": "",
                        "params": [
                            {
                                "name": "mode",
                                "desc": "The docking mode (Manual = 1, Automatic = 2, Semi-automatic = 3)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 106682,
                        "stop_char": 106724
                    },
                    {
                        "name": "getDockingMode",
                        "short_desc": "Returns the current docking mode",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The docking mode (Manual = 1, Automatic = 2, Semi-automatic = 3)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 106847,
                        "stop_char": 106885
                    },
                    {
                        "name": "dock",
                        "short_desc": "Sends a request to dock to the given construct. Limited to piloting controllers",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The parent construct id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 107036,
                        "stop_char": 107066
                    },
                    {
                        "name": "undock",
                        "short_desc": "Sends a request to undock the construct. Limited to piloting controllers",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 107165,
                        "stop_char": 107195
                    },
                    {
                        "name": "forceDeboard",
                        "short_desc": "Sends a request to deboard a player or surrogate with the given id",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The player id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 107323,
                        "stop_char": 107361
                    },
                    {
                        "name": "forceUndock",
                        "short_desc": "Sends a request to undock a construct with the given id",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The construct id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 107481,
                        "stop_char": 107518
                    },
                    {
                        "name": "forceInterruptVRSession",
                        "short_desc": "Sends a request to interrupt the surrogate session of a player with the given id",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The player id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 107660,
                        "stop_char": 107709
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Container",
                "name_in_source": "Container",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 108854,
                        "stop_char": 108882
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 109055,
                        "stop_char": 109083
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 109192,
                        "stop_char": 109229
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 109299,
                        "stop_char": 109336
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 109423,
                        "stop_char": 109454
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 109529,
                        "stop_char": 109568
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 109659,
                        "stop_char": 109692
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 109760,
                        "stop_char": 109791
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 109878,
                        "stop_char": 109910
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 110000,
                        "stop_char": 110039
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 110187,
                        "stop_char": 110218
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 110373,
                        "stop_char": 110406
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 110495,
                        "stop_char": 110529
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 110611,
                        "stop_char": 110640
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 110793,
                        "stop_char": 110829
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 110939,
                        "stop_char": 110975
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 111069,
                        "stop_char": 111108
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 111258,
                        "stop_char": 111306
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 111430,
                        "stop_char": 111472
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 111622,
                        "stop_char": 111657
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 111775,
                        "stop_char": 111817
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 111996,
                        "stop_char": 112040
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 112207,
                        "stop_char": 112236
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 112409,
                        "stop_char": 112441
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 112618,
                        "stop_char": 112652
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 112799,
                        "stop_char": 112833
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 112986,
                        "stop_char": 113023
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 113180,
                        "stop_char": 113219
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 113860,
                        "stop_char": 113906
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 114546,
                        "stop_char": 114585
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 115226,
                        "stop_char": 115266
                    },
                    {
                        "name": "getSelfMass",
                        "short_desc": "Returns the mass of the container element(as if it were empty).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the container in kilograms",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 115393,
                        "stop_char": 115428
                    },
                    {
                        "name": "getItemsMass",
                        "short_desc": "Returns the container content mass(the sum of the mass of all items it contains).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The total mass of the contents of the container, excluding the container's own mass, in kilograms",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 115632,
                        "stop_char": 115668
                    },
                    {
                        "name": "getItemsVolume",
                        "short_desc": "Returns the container content volume(the sum of the volume of all items it contains).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The total volume of the contents of the container in liters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 115838,
                        "stop_char": 115876
                    },
                    {
                        "name": "getMaxVolume",
                        "short_desc": "Returns the maximum volume of the container.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum volume of the container in liters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 115991,
                        "stop_char": 116027
                    },
                    {
                        "name": "getContent",
                        "short_desc": "Returns a table describing the contents of the container, as a pair itemId and quantity per slot.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The content of the container as a table with fields {[int] id, [float] quantity} per slot",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 116238,
                        "stop_char": 116272
                    },
                    {
                        "name": "getItemsList",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 116365,
                        "stop_char": 116401
                    },
                    {
                        "name": "updateContent",
                        "short_desc": "Send a request to get an update of the content of the container, limited to one call allowed per 30 seconds.",
                        "desc": "The onContentUpdate event is emitted by the container when the content is updated.",
                        "params": [],
                        "returns": [
                            {
                                "desc": "If the request is not yet possible, returns the remaining time to wait for.",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 116697,
                        "stop_char": 116734
                    },
                    {
                        "name": "acquireStorage",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 116832,
                        "stop_char": 116870
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "ControlUnit",
                "name_in_source": "ControlUnit",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 117318,
                        "stop_char": 117348
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 117523,
                        "stop_char": 117553
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 117662,
                        "stop_char": 117701
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 117771,
                        "stop_char": 117810
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 117897,
                        "stop_char": 117930
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 118005,
                        "stop_char": 118046
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 118137,
                        "stop_char": 118172
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 118240,
                        "stop_char": 118273
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 118360,
                        "stop_char": 118394
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 118484,
                        "stop_char": 118525
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 118673,
                        "stop_char": 118706
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 118861,
                        "stop_char": 118896
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 118985,
                        "stop_char": 119021
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 119103,
                        "stop_char": 119134
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 119287,
                        "stop_char": 119325
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 119435,
                        "stop_char": 119473
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 119567,
                        "stop_char": 119608
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 119758,
                        "stop_char": 119808
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 119932,
                        "stop_char": 119976
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 120126,
                        "stop_char": 120163
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 120281,
                        "stop_char": 120325
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 120504,
                        "stop_char": 120550
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 120717,
                        "stop_char": 120748
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 120921,
                        "stop_char": 120955
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 121132,
                        "stop_char": 121168
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 121315,
                        "stop_char": 121351
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 121504,
                        "stop_char": 121543
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 121700,
                        "stop_char": 121741
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 122382,
                        "stop_char": 122430
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 123070,
                        "stop_char": 123111
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 123752,
                        "stop_char": 123794
                    },
                    {
                        "name": "getMasterPlayerId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 124197,
                        "stop_char": 124240
                    },
                    {
                        "name": "getMasterPlayerOrgIds",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 124340,
                        "stop_char": 124387
                    },
                    {
                        "name": "getMasterPlayerPosition",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 124491,
                        "stop_char": 124540
                    },
                    {
                        "name": "getMasterPlayerWorldPosition",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 124654,
                        "stop_char": 124708
                    },
                    {
                        "name": "getMasterPlayerForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 124810,
                        "stop_char": 124858
                    },
                    {
                        "name": "getMasterPlayerUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 124950,
                        "stop_char": 124993
                    },
                    {
                        "name": "getMasterPlayerRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 125091,
                        "stop_char": 125137
                    },
                    {
                        "name": "getMasterPlayerWorldForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 125249,
                        "stop_char": 125302
                    },
                    {
                        "name": "getMasterPlayerWorldUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 125404,
                        "stop_char": 125452
                    },
                    {
                        "name": "getMasterPlayerWorldRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 125560,
                        "stop_char": 125611
                    },
                    {
                        "name": "isMasterPlayerSeated",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 125709,
                        "stop_char": 125755
                    },
                    {
                        "name": "getMasterPlayerSeatId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 125855,
                        "stop_char": 125902
                    },
                    {
                        "name": "getMasterPlayerParent",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 126002,
                        "stop_char": 126049
                    },
                    {
                        "name": "getMasterPlayerMass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 126145,
                        "stop_char": 126190
                    },
                    {
                        "name": "setTimer",
                        "short_desc": "Set up a timer with a given tag in a given period. This will start to trigger the 'onTimer' event with",
                        "desc": "the corresponding tag as an argument, to help you identify what is ticking, and when.",
                        "params": [
                            {
                                "name": "tag",
                                "desc": "The tag of the timer, as a string, which will be used in the 'onTimer' event to identify this particular timer",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "period",
                                "desc": "The period of the timer, in seconds. The time resolution is limited by the framerate here, so you cannot set arbitrarily fast timers",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 126678,
                        "stop_char": 126723
                    },
                    {
                        "name": "stopTimer",
                        "short_desc": "Stop the timer with the given tag",
                        "desc": "",
                        "params": [
                            {
                                "name": "tag",
                                "desc": "The tag of the timer to stop, as a string",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 126826,
                        "stop_char": 126864
                    },
                    {
                        "name": "getAtmosphereDensity",
                        "short_desc": "Returns the ambient atmospheric density",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The atmospheric density(between 0 and 1)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 126969,
                        "stop_char": 127015
                    },
                    {
                        "name": "getClosestPlanetInfluence",
                        "short_desc": "Returns the influence rate of the nearest planet",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The planet influence rate(between 0 and 1)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 127131,
                        "stop_char": 127182
                    },
                    {
                        "name": "hasDRM",
                        "short_desc": "Checks if the control unit is protected by DRM",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the control unit is protected by DRM",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 127296,
                        "stop_char": 127328
                    },
                    {
                        "name": "isRemoteControlled",
                        "short_desc": "Check if the construct is remote controlled",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the construct is remote controlled",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 127437,
                        "stop_char": 127481
                    },
                    {
                        "name": "setEngineCommand",
                        "short_desc": "Automatically assign the engines within the taglist",
                        "desc": "to result in the given acceleration and angular acceleration provided. Can only be called within the system.onFlush event\nIf engines designated by the tags are not capable of producing the desired command, setEngineCommand will try to do its best\nto approximate it\nThis function must be used on a piloting controller in onFlush event\nOther included engines not in any priority will be used last",
                        "params": [
                            {
                                "name": "taglist",
                                "desc": "Comma (for union) or space (for intersection) separated list of tags. You can set tags directly on the engines in the right-click menu",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "acceleration",
                                "desc": "The desired acceleration expressed in world coordinates in m/s2",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "angularAcceleration",
                                "desc": "The desired angular acceleration expressed in world coordinates in rad/s2",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "keepForceCollinearity",
                                "desc": "Forces the resulting acceleration vector to be collinear to the acceleration parameter",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "keepTorqueCollinearity",
                                "desc": "Forces the resulting angular acceleration vector to be collinear to the angular acceleration parameter",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "priority1SubTags",
                                "desc": "Comma (for union) or space (for intersection) separated list of tags of included engines to use as priority 1",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "priority2SubTags",
                                "desc": "Comma (for union) or space (for intersection) separated list of tags of included engines to use as priority 2",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "priority3SubTags",
                                "desc": "Comma (for union) or space (for intersection) separated list of tags of included engines to use as priority 3",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "toleranceRatioToStopCommand",
                                "desc": "When going through with priorities, if we reach a command that is achieved within this tolerance, we will stop there",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 129182,
                        "stop_char": 129396
                    },
                    {
                        "name": "setEngineThrust",
                        "short_desc": "Sets the thrust values for all engines in the tag list",
                        "desc": "This function must be used on a piloting controller",
                        "params": [
                            {
                                "name": "taglist",
                                "desc": "Comma separated list of tags. You can set tags directly on the engines in the right-click menu",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "thrust",
                                "desc": "The desired thrust in newtons (note that for boosters, any non zero value here will set them to 100%)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 129759,
                        "stop_char": 129815
                    },
                    {
                        "name": "getEngineThrust",
                        "short_desc": "Returns the total thrust values of all engines in the tag list",
                        "desc": "This function must be used on a piloting controller",
                        "params": [
                            {
                                "name": "taglist",
                                "desc": "Comma separated list of tags. You can set tags directly on the engines in the right-click menu",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "total thrust in newtons",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 130101,
                        "stop_char": 130149
                    },
                    {
                        "name": "setAxisCommandValue",
                        "short_desc": "Set the value of throttle in the cockpit, which will be displayed in the cockpit widget when flying",
                        "desc": "This function must be used on a piloting controller",
                        "params": [
                            {
                                "name": "axis",
                                "desc": "Longitudinal = 0, lateral = 1, vertical = 2",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "commandValue",
                                "desc": "In 'by throttle', the value of the throttle position: -1 = full reverse, 1 = full forward. Or In 'By Target Speed', the value of the target speed in km/h",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 130562,
                        "stop_char": 130625
                    },
                    {
                        "name": "getAxisCommandValue",
                        "short_desc": "Get the value of throttle in the cockpit",
                        "desc": "This function must be used on a piloting controller",
                        "params": [
                            {
                                "name": "axis",
                                "desc": "Longitudinal = 0, lateral = 1, vertical = 2",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "In travel mode, return the value of the throttle position: -1 = full reverse, 1 = full forward or in cruise mode, return the value of the target speed",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 130964,
                        "stop_char": 131013
                    },
                    {
                        "name": "setupAxisCommandProperties",
                        "short_desc": "Set the properties of an axis command",
                        "desc": "This function must be used on a piloting controller\nThese properties will be used to display the command in UI",
                        "params": [
                            {
                                "name": "axis",
                                "desc": "Longitudinal = 0, lateral = 1, vertical = 2",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "commandType",
                                "desc": "By throttle = 0, by target speed = 1, hidden = 2",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "targetSpeedRanges",
                                "desc": "This is to specify the cruise control target speed ranges (for now, only for the longitudinal axis) in m/s",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 131463,
                        "stop_char": 131551
                    },
                    {
                        "name": "getControlMode",
                        "short_desc": "Returns the current control mode. The mode is set by clicking the UI button or using the associated keybinding",
                        "desc": "This function must be used on a piloting controller",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current control mode (for now, only 2 are available, 0 and 1)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 131809,
                        "stop_char": 131849
                    },
                    {
                        "name": "getControlMasterModeId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 131960,
                        "stop_char": 132008
                    },
                    {
                        "name": "isMouseControlActivated",
                        "short_desc": "Check if a mouse control scheme is selected",
                        "desc": "This function must be used on a piloting controller",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if a mouse control scheme is selected",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 132329,
                        "stop_char": 132378
                    },
                    {
                        "name": "isMouseDirectControlActivated",
                        "short_desc": "Check if the mouse control direct scheme is selected",
                        "desc": "This function must be used on a piloting controller",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if a mouse control direct scheme is selected",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 132559,
                        "stop_char": 132614
                    },
                    {
                        "name": "isMouseVirtualJoystickActivated",
                        "short_desc": "Check if the mouse control virtual joystick scheme is selected",
                        "desc": "This function must be used on a piloting controller",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if a mouse control virtual joystick scheme is selected",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 132815,
                        "stop_char": 132872
                    },
                    {
                        "name": "activateGroundEngineAltitudeStabilization",
                        "short_desc": "The ground engines will stabilize to this altitude within their limits",
                        "desc": "The stabilization will be done by adjusting thrust to never go over the target altitude\nThis includes VerticalBooster and HoverEngine\nThis function must be used on a piloting controller",
                        "params": [
                            {
                                "name": "targetAltitude",
                                "desc": "The stabilization target altitude in m",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 133218,
                        "stop_char": 133299
                    },
                    {
                        "name": "getSurfaceEngineAltitudeStabilization",
                        "short_desc": "Return the ground engines' stabilization altitude",
                        "desc": "This function must be used on a piloting controller",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Stab altitude in m or 0 if none is set",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 133468,
                        "stop_char": 133531
                    },
                    {
                        "name": "computeGroundEngineAltitudeStabilizationCapabilities",
                        "short_desc": "Returns ground engine stabilization altitude capabilities (lower and upper ranges)",
                        "desc": "This function must be used on a piloting controller",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Stabilization altitude capabilities for the least powerful engine and the most powerful engine",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 134020,
                        "stop_char": 134098
                    },
                    {
                        "name": "getThrottle",
                        "short_desc": "Return the current throttle value",
                        "desc": "This function must be used on a piloting controller",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Throttle value between -100 and 100",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 134248,
                        "stop_char": 134285
                    },
                    {
                        "name": "setWidgetControlModeLabel",
                        "short_desc": "Set the label of a control mode buttons shown in the control unit widget",
                        "desc": "This function must be used on a piloting controller",
                        "params": [
                            {
                                "name": "modeId",
                                "desc": "The control mode: 0=Travel Mode, 1=Cruise Control by default",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "label",
                                "desc": "The display name of the control mode, displayed on the widget button",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 134598,
                        "stop_char": 134662
                    },
                    {
                        "name": "setupControlMasterModeProperties",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 134794,
                        "stop_char": 134852
                    },
                    {
                        "name": "isAnyLandingGearDeployed",
                        "short_desc": "Checks if any landing gear is deployed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "0 or 1 1 if any landing gear is deployed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 134957,
                        "stop_char": 135007
                    },
                    {
                        "name": "isAnyLandingGearExtended",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 135130,
                        "stop_char": 135180
                    },
                    {
                        "name": "extendLandingGears",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 135384,
                        "stop_char": 135428
                    },
                    {
                        "name": "isAnyHeadlightSwitchedOn",
                        "short_desc": "Check construct lights status",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if any Headlight is switched on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 135594,
                        "stop_char": 135644
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "CoreUnit",
                "name_in_source": "CoreUnit",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 136281,
                        "stop_char": 136308
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 136480,
                        "stop_char": 136507
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 136616,
                        "stop_char": 136652
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 136722,
                        "stop_char": 136758
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 136845,
                        "stop_char": 136875
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 136950,
                        "stop_char": 136988
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 137079,
                        "stop_char": 137111
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 137179,
                        "stop_char": 137209
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 137296,
                        "stop_char": 137327
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 137417,
                        "stop_char": 137455
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 137603,
                        "stop_char": 137633
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 137788,
                        "stop_char": 137820
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 137909,
                        "stop_char": 137942
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 138024,
                        "stop_char": 138052
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 138205,
                        "stop_char": 138240
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 138350,
                        "stop_char": 138385
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 138479,
                        "stop_char": 138517
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 138667,
                        "stop_char": 138714
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 138838,
                        "stop_char": 138879
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 139029,
                        "stop_char": 139063
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 139181,
                        "stop_char": 139222
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 139401,
                        "stop_char": 139444
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 139611,
                        "stop_char": 139639
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 139812,
                        "stop_char": 139843
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 140020,
                        "stop_char": 140053
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 140200,
                        "stop_char": 140233
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 140386,
                        "stop_char": 140422
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 140579,
                        "stop_char": 140617
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 141258,
                        "stop_char": 141303
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 141943,
                        "stop_char": 141981
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 142622,
                        "stop_char": 142661
                    },
                    {
                        "name": "getConstructId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 142750,
                        "stop_char": 142787
                    },
                    {
                        "name": "getConstructName",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 142880,
                        "stop_char": 142919
                    },
                    {
                        "name": "getConstructWorldPos",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 143025,
                        "stop_char": 143068
                    },
                    {
                        "name": "getWorldAirFrictionAcceleration",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 143200,
                        "stop_char": 143254
                    },
                    {
                        "name": "getWorldAirFrictionAngularAcceleration",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 143400,
                        "stop_char": 143461
                    },
                    {
                        "name": "getSchematicInfo",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 143572,
                        "stop_char": 143611
                    },
                    {
                        "name": "getAngularVelocity",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 143717,
                        "stop_char": 143758
                    },
                    {
                        "name": "getWorldAngularVelocity",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 143874,
                        "stop_char": 143920
                    },
                    {
                        "name": "getAngularAcceleration",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 144034,
                        "stop_char": 144079
                    },
                    {
                        "name": "getWorldAngularAcceleration",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 144203,
                        "stop_char": 144253
                    },
                    {
                        "name": "getVelocity",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 144345,
                        "stop_char": 144379
                    },
                    {
                        "name": "getWorldVelocity",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 144481,
                        "stop_char": 144520
                    },
                    {
                        "name": "getAbsoluteVelocity",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 144628,
                        "stop_char": 144670
                    },
                    {
                        "name": "getWorldAbsoluteVelocity",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 144788,
                        "stop_char": 144835
                    },
                    {
                        "name": "getWorldAcceleration",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 144945,
                        "stop_char": 144988
                    },
                    {
                        "name": "getAcceleration",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 145088,
                        "stop_char": 145126
                    },
                    {
                        "name": "getOrientationUnitId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 145236,
                        "stop_char": 145279
                    },
                    {
                        "name": "getConstructOrientationUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 145390,
                        "stop_char": 145438
                    },
                    {
                        "name": "getConstructOrientationRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 145555,
                        "stop_char": 145606
                    },
                    {
                        "name": "getConstructOrientationForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 145727,
                        "stop_char": 145780
                    },
                    {
                        "name": "getConstructWorldOrientationUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 145901,
                        "stop_char": 145954
                    },
                    {
                        "name": "getConstructWorldOrientationRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 146081,
                        "stop_char": 146137
                    },
                    {
                        "name": "getConstructWorldOrientationForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 146268,
                        "stop_char": 146326
                    },
                    {
                        "name": "getConstructWorldUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 146425,
                        "stop_char": 146467
                    },
                    {
                        "name": "getConstructWorldRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 146572,
                        "stop_char": 146617
                    },
                    {
                        "name": "getConstructWorldForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 146726,
                        "stop_char": 146773
                    },
                    {
                        "name": "getPvPTimer",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 146865,
                        "stop_char": 146899
                    },
                    {
                        "name": "getPlayersOnBoard",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 147003,
                        "stop_char": 147043
                    },
                    {
                        "name": "getPlayersOnBoardInVRStation",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 147169,
                        "stop_char": 147220
                    },
                    {
                        "name": "getDockedConstructs",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 147328,
                        "stop_char": 147370
                    },
                    {
                        "name": "isPlayerBoarded",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 147475,
                        "stop_char": 147513
                    },
                    {
                        "name": "isPlayerBoardedInVRStation",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 147640,
                        "stop_char": 147689
                    },
                    {
                        "name": "isConstructDocked",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 147798,
                        "stop_char": 147838
                    },
                    {
                        "name": "forceDeboard",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 147937,
                        "stop_char": 147972
                    },
                    {
                        "name": "forceInterruptVRSession",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 148093,
                        "stop_char": 148139
                    },
                    {
                        "name": "forceUndock",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 148236,
                        "stop_char": 148270
                    },
                    {
                        "name": "getBoardedPlayerMass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 148385,
                        "stop_char": 148428
                    },
                    {
                        "name": "getBoardedInVRStationAvatarMass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 148537,
                        "stop_char": 148591
                    },
                    {
                        "name": "getDockedConstructMass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 148710,
                        "stop_char": 148755
                    },
                    {
                        "name": "getParent",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 148843,
                        "stop_char": 148875
                    },
                    {
                        "name": "getCloseParents",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 148975,
                        "stop_char": 149013
                    },
                    {
                        "name": "getClosestParent",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 149115,
                        "stop_char": 149154
                    },
                    {
                        "name": "dock",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 149237,
                        "stop_char": 149264
                    },
                    {
                        "name": "undock",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 149346,
                        "stop_char": 149375
                    },
                    {
                        "name": "setDockingMode",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 149481,
                        "stop_char": 149518
                    },
                    {
                        "name": "getDockingMode",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 149616,
                        "stop_char": 149653
                    },
                    {
                        "name": "getParentPosition",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 149757,
                        "stop_char": 149797
                    },
                    {
                        "name": "getParentWorldPosition",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 149911,
                        "stop_char": 149956
                    },
                    {
                        "name": "getParentForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 150058,
                        "stop_char": 150097
                    },
                    {
                        "name": "getParentUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 150189,
                        "stop_char": 150223
                    },
                    {
                        "name": "getParentRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 150321,
                        "stop_char": 150358
                    },
                    {
                        "name": "getParentWorldForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 150470,
                        "stop_char": 150514
                    },
                    {
                        "name": "getParentWorldUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 150616,
                        "stop_char": 150655
                    },
                    {
                        "name": "getParentWorldRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 150763,
                        "stop_char": 150805
                    },
                    {
                        "name": "getMaxSpeed",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 150897,
                        "stop_char": 150931
                    },
                    {
                        "name": "getMaxAngularSpeed",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 151037,
                        "stop_char": 151078
                    },
                    {
                        "name": "getMaxSpeedPerAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 151184,
                        "stop_char": 151225
                    },
                    {
                        "name": "getConstructMass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 151318,
                        "stop_char": 151357
                    },
                    {
                        "name": "getConstructIMass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 151459,
                        "stop_char": 151499
                    },
                    {
                        "name": "getConstructCrossSection",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 151608,
                        "stop_char": 151655
                    },
                    {
                        "name": "getMaxKinematicsParametersAlongAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 151815,
                        "stop_char": 151873
                    },
                    {
                        "name": "getElementIdList",
                        "short_desc": "Returns the list of all the local IDs of the Elements of this construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The list of local IDs of the elements of the construct.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 152024,
                        "stop_char": 152063
                    },
                    {
                        "name": "getElementNameById",
                        "short_desc": "Returns the name of the Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 152225,
                        "stop_char": 152273
                    },
                    {
                        "name": "getElementClassById",
                        "short_desc": "Returns the class of the Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The class of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 152437,
                        "stop_char": 152486
                    },
                    {
                        "name": "getElementDisplayNameById",
                        "short_desc": "Returns the display name of the Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The display name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 152664,
                        "stop_char": 152719
                    },
                    {
                        "name": "getElementTypeById",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 152845,
                        "stop_char": 152886
                    },
                    {
                        "name": "getElementItemIdById",
                        "short_desc": "Returns the item ID of the Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The item ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 153055,
                        "stop_char": 153105
                    },
                    {
                        "name": "getElementHitPointsById",
                        "short_desc": "Returns the current hitpoints of the Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The current hitpoints of the Element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 153293,
                        "stop_char": 153346
                    },
                    {
                        "name": "getElementMaxHitPointsById",
                        "short_desc": "Returns the maximum hitpoints of the Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 153498,
                        "stop_char": 153554
                    },
                    {
                        "name": "getElementMassById",
                        "short_desc": "Returns the mass of the Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The maximum hitpoints of the Element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 153729,
                        "stop_char": 153777
                    },
                    {
                        "name": "getElementPositionById",
                        "short_desc": "Returns the position of the Element, identified by its local ID, in construct local coordinates.",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The position of the Element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 154011,
                        "stop_char": 154063
                    },
                    {
                        "name": "getElementUpById",
                        "short_desc": "Returns the up direction vector of the Element, identified by its local ID, in construct local coordinates",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The up direction vector of the Element identified by its local ID, in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 154345,
                        "stop_char": 154391
                    },
                    {
                        "name": "getElementRightById",
                        "short_desc": "Returns the right direction vector of the Element, identified by its local ID, in construct local coordinates",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The right direction vector of the Element identified by its local ID, in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 154679,
                        "stop_char": 154728
                    },
                    {
                        "name": "getElementForwardById",
                        "short_desc": "Returns the forward direction vector of the Element, identified by its local ID, in construct local coordinates",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The forward direction vector of the Element identified by its local ID, in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 155020,
                        "stop_char": 155071
                    },
                    {
                        "name": "getElementIndustryInfoById",
                        "short_desc": "Returns the status of the Industry Unit Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "If the Element is an Industry Unit, a table with fields {[int] state, [bool] stopRequested, [int] schematicId (deprecated = 0), [int] schematicsRemaining, [int] unitsProduced, [int] remainingTime, [int] batchesRequested, [int] batchesRemaining, [float] maintainProductAmount, [int] currentProductAmount, [table] currentProducts:{{[int] id, [double] quantity},...}}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 155589,
                        "stop_char": 155645
                    },
                    {
                        "name": "getElementIndustryStatusById",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 155782,
                        "stop_char": 155833
                    },
                    {
                        "name": "getElementTagsById",
                        "short_desc": "Returns the list of tags associated to the Element, identified by its local ID",
                        "desc": "",
                        "params": [
                            {
                                "name": "localId",
                                "desc": "The local ID of the Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The tags as a JSON list",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 156014,
                        "stop_char": 156062
                    },
                    {
                        "name": "getAltitude",
                        "short_desc": "Returns the altitude above sea level, with respect to the closest planet (0 in space)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The altitude above sea level in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 156211,
                        "stop_char": 156245
                    },
                    {
                        "name": "getGravityIntensity",
                        "short_desc": "Returns the local gravity intensity",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The gravitation acceleration where the construct is located in m/s\u0412\u0406",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 156374,
                        "stop_char": 156416
                    },
                    {
                        "name": "g",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 156505,
                        "stop_char": 156529
                    },
                    {
                        "name": "getWorldGravity",
                        "short_desc": "Returns the local gravity vector in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local gravity field vector in world coordinates in m/s2",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 156666,
                        "stop_char": 156704
                    },
                    {
                        "name": "getWorldVertical",
                        "short_desc": "Returns the gravity unit vector, in world coordinates ({0,0,0} in space)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local gravity unit vector in world coordinates in meters",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 156861,
                        "stop_char": 156900
                    },
                    {
                        "name": "getCurrentPlanetId",
                        "short_desc": "Returns the id of the current close stellar body",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The id of the current close stellar body",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 157015,
                        "stop_char": 157056
                    },
                    {
                        "name": "getCoreStress",
                        "short_desc": "Returns the core's current stress, destroyed when reaching max stress",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The stress the core absorbed",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 157179,
                        "stop_char": 157215
                    },
                    {
                        "name": "getMaxCoreStress",
                        "short_desc": "Returns the maximal stress the core can bear before it gets destroyed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximal stress before destruction",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 157347,
                        "stop_char": 157386
                    },
                    {
                        "name": "getCoreStressRatio",
                        "short_desc": "Returns the core's current stress to max stress ratio",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The stress ratio, between 0 for no stress and 1 for destruction",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 157528,
                        "stop_char": 157569
                    },
                    {
                        "name": "spawnNumberSticker",
                        "short_desc": "Spawns a number sticker in the 3D world, with coordinates relative to the construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "nb",
                                "desc": "The number to display 0 to 9",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "The x-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "The y-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "z",
                                "desc": "The z-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "orientation",
                                "desc": "Orientation of the number. Possible values are \"front\", \"side\"",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "An index that can be used later to delete or move the item, -1 if error or maxnumber reached",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 158138,
                        "stop_char": 158203
                    },
                    {
                        "name": "spawnArrowSticker",
                        "short_desc": "Spawns an arrow sticker in the 3D world, with coordinates relative to the construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "x",
                                "desc": "The x-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "the y-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "z",
                                "desc": "The z-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "orientation",
                                "desc": "Orientation of the arrow. Possible values are \"up\", \"down\", \"north\", \"south\", \"east\", \"west\"",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "An index that can be used later to delete or move the item, -1 if error or max number reached",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 158753,
                        "stop_char": 158813
                    },
                    {
                        "name": "deleteSticker",
                        "short_desc": "Delete the referenced sticker",
                        "desc": "",
                        "params": [
                            {
                                "name": "index",
                                "desc": "Index of the sticker to delete",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 in case of success, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 158957,
                        "stop_char": 158998
                    },
                    {
                        "name": "moveSticker",
                        "short_desc": "Move the referenced sticker",
                        "desc": "",
                        "params": [
                            {
                                "name": "index",
                                "desc": "Index of the sticker to move",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "The x-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "The y-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "z",
                                "desc": "The z-coordinate in the construct in meters. 0 = center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 in case of success, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 159363,
                        "stop_char": 159411
                    },
                    {
                        "name": "rotateSticker",
                        "short_desc": "Rotate the referenced sticker.",
                        "desc": "",
                        "params": [
                            {
                                "name": "index",
                                "desc": "Index of the sticker to rotate",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "angle_x",
                                "desc": "Rotation along the x-axis in degrees",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "angle_y",
                                "desc": "Rotation along the y-axis in degrees",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "angle_z",
                                "desc": "Rotation along the z-axis in degrees",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 in case of success, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 159742,
                        "stop_char": 159810
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Counter",
                "name_in_source": "Counter",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 160526,
                        "stop_char": 160552
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 160723,
                        "stop_char": 160749
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 160858,
                        "stop_char": 160893
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 160963,
                        "stop_char": 160998
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 161085,
                        "stop_char": 161114
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 161189,
                        "stop_char": 161226
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 161317,
                        "stop_char": 161348
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 161416,
                        "stop_char": 161445
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 161532,
                        "stop_char": 161562
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 161652,
                        "stop_char": 161689
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 161837,
                        "stop_char": 161866
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 162021,
                        "stop_char": 162052
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 162141,
                        "stop_char": 162173
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 162255,
                        "stop_char": 162282
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 162435,
                        "stop_char": 162469
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 162579,
                        "stop_char": 162613
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 162707,
                        "stop_char": 162744
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 162894,
                        "stop_char": 162940
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 163064,
                        "stop_char": 163104
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 163254,
                        "stop_char": 163287
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 163405,
                        "stop_char": 163445
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 163624,
                        "stop_char": 163666
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 163833,
                        "stop_char": 163860
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 164033,
                        "stop_char": 164063
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 164240,
                        "stop_char": 164272
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 164419,
                        "stop_char": 164451
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 164604,
                        "stop_char": 164639
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 164796,
                        "stop_char": 164833
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 165474,
                        "stop_char": 165518
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 166158,
                        "stop_char": 166195
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 166836,
                        "stop_char": 166874
                    },
                    {
                        "name": "getIndex",
                        "short_desc": "Returns the index of the current active output plug",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The index of the active plug",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 166980,
                        "stop_char": 167010
                    },
                    {
                        "name": "getCounterState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 167100,
                        "stop_char": 167137
                    },
                    {
                        "name": "getMaxIndex",
                        "short_desc": "Returns the maximum index of the counter",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum index",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 167221,
                        "stop_char": 167254
                    },
                    {
                        "name": "next",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 167400,
                        "stop_char": 167426
                    },
                    {
                        "name": "setIndex",
                        "short_desc": "Sets the counter index",
                        "desc": "",
                        "params": [
                            {
                                "name": "index",
                                "desc": "The index of the plug to activate",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 167513,
                        "stop_char": 167548
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Databank",
                "name_in_source": "Databank",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 167759,
                        "stop_char": 167786
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 167958,
                        "stop_char": 167985
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 168094,
                        "stop_char": 168130
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 168200,
                        "stop_char": 168236
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 168323,
                        "stop_char": 168353
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 168428,
                        "stop_char": 168466
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 168557,
                        "stop_char": 168589
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 168657,
                        "stop_char": 168687
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 168774,
                        "stop_char": 168805
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 168895,
                        "stop_char": 168933
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 169081,
                        "stop_char": 169111
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 169266,
                        "stop_char": 169298
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 169387,
                        "stop_char": 169420
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 169502,
                        "stop_char": 169530
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 169683,
                        "stop_char": 169718
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 169828,
                        "stop_char": 169863
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 169957,
                        "stop_char": 169995
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 170145,
                        "stop_char": 170192
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 170316,
                        "stop_char": 170357
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 170507,
                        "stop_char": 170541
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 170659,
                        "stop_char": 170700
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 170879,
                        "stop_char": 170922
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 171089,
                        "stop_char": 171117
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 171290,
                        "stop_char": 171321
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 171498,
                        "stop_char": 171531
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 171678,
                        "stop_char": 171711
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 171864,
                        "stop_char": 171900
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 172057,
                        "stop_char": 172095
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 172736,
                        "stop_char": 172781
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 173421,
                        "stop_char": 173459
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 174100,
                        "stop_char": 174139
                    },
                    {
                        "name": "getNbKeys",
                        "short_desc": "Returns the number of keys that are stored inside the Databank",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of keys",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 174299,
                        "stop_char": 174331
                    },
                    {
                        "name": "getKeyList",
                        "short_desc": "Returns all the keys in the Databank",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The key list, as a list of string",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 174425,
                        "stop_char": 174458
                    },
                    {
                        "name": "getKeys",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 174536,
                        "stop_char": 174566
                    },
                    {
                        "name": "hasKey",
                        "short_desc": "Returns 1 if the key is present in the Databank, 0 otherwise",
                        "desc": "",
                        "params": [
                            {
                                "name": "key",
                                "desc": "The key used to store a value",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if the key exists and 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 174739,
                        "stop_char": 174771
                    },
                    {
                        "name": "clearValue",
                        "short_desc": "Remove the given key if the key is present in the Databank",
                        "desc": "",
                        "params": [
                            {
                                "name": "key",
                                "desc": "The key used to store a value",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if the key has been successfully removed, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 174962,
                        "stop_char": 174998
                    },
                    {
                        "name": "setStringValue",
                        "short_desc": "Stores a string value at the given key",
                        "desc": "",
                        "params": [
                            {
                                "name": "key",
                                "desc": "The key used to store the value",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "val",
                                "desc": "The value, as a string",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 175140,
                        "stop_char": 175185
                    },
                    {
                        "name": "getStringValue",
                        "short_desc": "Returns value stored in the given key as a string",
                        "desc": "",
                        "params": [
                            {
                                "name": "key",
                                "desc": "The key used to retrieve the value",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The value as a string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 175337,
                        "stop_char": 175377
                    },
                    {
                        "name": "setIntValue",
                        "short_desc": "Stores an integer value at the given key",
                        "desc": "",
                        "params": [
                            {
                                "name": "key",
                                "desc": "The key used to store the value",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "val",
                                "desc": "The value, as an integer",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 175524,
                        "stop_char": 175566
                    },
                    {
                        "name": "getIntValue",
                        "short_desc": "Returns value stored in the given key as an integer",
                        "desc": "",
                        "params": [
                            {
                                "name": "key",
                                "desc": "The key used to retrieve the value",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The value as an integer",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 175723,
                        "stop_char": 175760
                    },
                    {
                        "name": "setFloatValue",
                        "short_desc": "Stores a floating number value at the given key",
                        "desc": "",
                        "params": [
                            {
                                "name": "key",
                                "desc": "The key used to store the value",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "val",
                                "desc": "The value, as a floating number",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 175920,
                        "stop_char": 175964
                    },
                    {
                        "name": "getFloatValue",
                        "short_desc": "Returns value stored in the given key as a floating number",
                        "desc": "",
                        "params": [
                            {
                                "name": "key",
                                "desc": "The key used to retrieve the value",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The value as a floating number",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 176134,
                        "stop_char": 176173
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "DetectionZone",
                "name_in_source": "DetectionZone",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 176399,
                        "stop_char": 176431
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 176608,
                        "stop_char": 176640
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 176749,
                        "stop_char": 176790
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 176860,
                        "stop_char": 176901
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 176988,
                        "stop_char": 177023
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 177098,
                        "stop_char": 177141
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 177232,
                        "stop_char": 177269
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 177337,
                        "stop_char": 177372
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 177459,
                        "stop_char": 177495
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 177585,
                        "stop_char": 177628
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 177776,
                        "stop_char": 177811
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 177966,
                        "stop_char": 178003
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 178092,
                        "stop_char": 178130
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 178212,
                        "stop_char": 178245
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 178398,
                        "stop_char": 178438
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 178548,
                        "stop_char": 178588
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 178682,
                        "stop_char": 178725
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 178875,
                        "stop_char": 178927
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 179051,
                        "stop_char": 179097
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 179247,
                        "stop_char": 179286
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 179404,
                        "stop_char": 179450
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 179629,
                        "stop_char": 179677
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 179844,
                        "stop_char": 179877
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 180050,
                        "stop_char": 180086
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 180263,
                        "stop_char": 180301
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 180448,
                        "stop_char": 180486
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 180639,
                        "stop_char": 180680
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 180837,
                        "stop_char": 180880
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 181521,
                        "stop_char": 181571
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 182211,
                        "stop_char": 182254
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 182895,
                        "stop_char": 182939
                    },
                    {
                        "name": "getRadius",
                        "short_desc": "Returns the detection zone radius",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The detection zone radius in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 183033,
                        "stop_char": 183070
                    },
                    {
                        "name": "getPlayers",
                        "short_desc": "Returns the list of ids of the players in the detection zone",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The list of player ids",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 183177,
                        "stop_char": 183215
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Door",
                "name_in_source": "Door",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 183910,
                        "stop_char": 183933
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 184101,
                        "stop_char": 184124
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 184233,
                        "stop_char": 184265
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 184335,
                        "stop_char": 184367
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 184454,
                        "stop_char": 184480
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 184555,
                        "stop_char": 184589
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 184680,
                        "stop_char": 184708
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 184776,
                        "stop_char": 184802
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 184889,
                        "stop_char": 184916
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 185006,
                        "stop_char": 185040
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 185188,
                        "stop_char": 185214
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 185369,
                        "stop_char": 185397
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 185486,
                        "stop_char": 185515
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 185597,
                        "stop_char": 185621
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 185774,
                        "stop_char": 185805
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 185915,
                        "stop_char": 185946
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 186040,
                        "stop_char": 186074
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 186224,
                        "stop_char": 186267
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 186391,
                        "stop_char": 186428
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 186578,
                        "stop_char": 186608
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 186726,
                        "stop_char": 186763
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 186942,
                        "stop_char": 186981
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 187148,
                        "stop_char": 187172
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 187345,
                        "stop_char": 187372
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 187549,
                        "stop_char": 187578
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 187725,
                        "stop_char": 187754
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 187907,
                        "stop_char": 187939
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 188096,
                        "stop_char": 188130
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 188771,
                        "stop_char": 188812
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 189452,
                        "stop_char": 189486
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 190127,
                        "stop_char": 190162
                    },
                    {
                        "name": "activate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 190278,
                        "stop_char": 190305
                    },
                    {
                        "name": "deactivate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 190426,
                        "stop_char": 190455
                    },
                    {
                        "name": "isOpen",
                        "short_desc": "Return the opening status of the door",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the door is open",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 190540,
                        "stop_char": 190565
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 190640,
                        "stop_char": 190667
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Element",
                "name_in_source": "Element",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 190922,
                        "stop_char": 190948
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 191119,
                        "stop_char": 191145
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 191254,
                        "stop_char": 191289
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 191359,
                        "stop_char": 191394
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 191481,
                        "stop_char": 191510
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 191585,
                        "stop_char": 191622
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 191713,
                        "stop_char": 191744
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 191812,
                        "stop_char": 191841
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 191928,
                        "stop_char": 191958
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 192048,
                        "stop_char": 192085
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 192233,
                        "stop_char": 192262
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 192417,
                        "stop_char": 192448
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 192537,
                        "stop_char": 192569
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 192651,
                        "stop_char": 192678
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 192831,
                        "stop_char": 192865
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 192975,
                        "stop_char": 193009
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 193103,
                        "stop_char": 193140
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 193290,
                        "stop_char": 193336
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 193460,
                        "stop_char": 193500
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 193650,
                        "stop_char": 193683
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 193801,
                        "stop_char": 193841
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 194020,
                        "stop_char": 194062
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 194229,
                        "stop_char": 194256
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 194429,
                        "stop_char": 194459
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 194636,
                        "stop_char": 194668
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 194815,
                        "stop_char": 194847
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 195000,
                        "stop_char": 195035
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 195192,
                        "stop_char": 195229
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 195870,
                        "stop_char": 195914
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 196554,
                        "stop_char": 196591
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 197232,
                        "stop_char": 197270
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Emitter",
                "name_in_source": "Emitter",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 197478,
                        "stop_char": 197504
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 197675,
                        "stop_char": 197701
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 197810,
                        "stop_char": 197845
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 197915,
                        "stop_char": 197950
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 198037,
                        "stop_char": 198066
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 198141,
                        "stop_char": 198178
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 198269,
                        "stop_char": 198300
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 198368,
                        "stop_char": 198397
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 198484,
                        "stop_char": 198514
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 198604,
                        "stop_char": 198641
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 198789,
                        "stop_char": 198818
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 198973,
                        "stop_char": 199004
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 199093,
                        "stop_char": 199125
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 199207,
                        "stop_char": 199234
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 199387,
                        "stop_char": 199421
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 199531,
                        "stop_char": 199565
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 199659,
                        "stop_char": 199696
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 199846,
                        "stop_char": 199892
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 200016,
                        "stop_char": 200056
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 200206,
                        "stop_char": 200239
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 200357,
                        "stop_char": 200397
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 200576,
                        "stop_char": 200618
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 200785,
                        "stop_char": 200812
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 200985,
                        "stop_char": 201015
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 201192,
                        "stop_char": 201224
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 201371,
                        "stop_char": 201403
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 201556,
                        "stop_char": 201591
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 201748,
                        "stop_char": 201785
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 202426,
                        "stop_char": 202470
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 203110,
                        "stop_char": 203147
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 203788,
                        "stop_char": 203826
                    },
                    {
                        "name": "send",
                        "short_desc": "Send a message on the given channel, limited to one transmission per frame and per channel",
                        "desc": "",
                        "params": [
                            {
                                "name": "channel",
                                "desc": "The channel name, limited to 64 characters. The message will not be sent if it exceeds this",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "message",
                                "desc": "The message to be transmitted, truncated to 512 characters in case of overflow",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 204144,
                        "stop_char": 204186
                    },
                    {
                        "name": "getRange",
                        "short_desc": "Returns the emitter range",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The range in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 204256,
                        "stop_char": 204286
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Engine",
                "name_in_source": "Engine",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 204683,
                        "stop_char": 204708
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 204878,
                        "stop_char": 204903
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205012,
                        "stop_char": 205046
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205116,
                        "stop_char": 205150
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205237,
                        "stop_char": 205265
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205340,
                        "stop_char": 205376
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205467,
                        "stop_char": 205497
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205565,
                        "stop_char": 205593
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205680,
                        "stop_char": 205709
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205799,
                        "stop_char": 205835
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 205983,
                        "stop_char": 206011
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 206166,
                        "stop_char": 206196
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 206285,
                        "stop_char": 206316
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 206398,
                        "stop_char": 206424
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 206577,
                        "stop_char": 206610
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 206720,
                        "stop_char": 206753
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 206847,
                        "stop_char": 206883
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 207033,
                        "stop_char": 207078
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 207202,
                        "stop_char": 207241
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 207391,
                        "stop_char": 207423
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 207541,
                        "stop_char": 207580
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 207759,
                        "stop_char": 207800
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 207967,
                        "stop_char": 207993
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 208166,
                        "stop_char": 208195
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 208372,
                        "stop_char": 208403
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 208550,
                        "stop_char": 208581
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 208734,
                        "stop_char": 208768
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 208925,
                        "stop_char": 208961
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 209602,
                        "stop_char": 209645
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 210285,
                        "stop_char": 210321
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 210962,
                        "stop_char": 210999
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 211249,
                        "stop_char": 211290
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 211381,
                        "stop_char": 211409
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 211556,
                        "stop_char": 211596
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 211709,
                        "stop_char": 211744
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Firework",
                "name_in_source": "Firework",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 211955,
                        "stop_char": 211982
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 212154,
                        "stop_char": 212181
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 212290,
                        "stop_char": 212326
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 212396,
                        "stop_char": 212432
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 212519,
                        "stop_char": 212549
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 212624,
                        "stop_char": 212662
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 212753,
                        "stop_char": 212785
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 212853,
                        "stop_char": 212883
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 212970,
                        "stop_char": 213001
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 213091,
                        "stop_char": 213129
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 213277,
                        "stop_char": 213307
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 213462,
                        "stop_char": 213494
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 213583,
                        "stop_char": 213616
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 213698,
                        "stop_char": 213726
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 213879,
                        "stop_char": 213914
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 214024,
                        "stop_char": 214059
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 214153,
                        "stop_char": 214191
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 214341,
                        "stop_char": 214388
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 214512,
                        "stop_char": 214553
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 214703,
                        "stop_char": 214737
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 214855,
                        "stop_char": 214896
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 215075,
                        "stop_char": 215118
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 215285,
                        "stop_char": 215313
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 215486,
                        "stop_char": 215517
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 215694,
                        "stop_char": 215727
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 215874,
                        "stop_char": 215907
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 216060,
                        "stop_char": 216096
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 216253,
                        "stop_char": 216291
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 216932,
                        "stop_char": 216977
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 217617,
                        "stop_char": 217655
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 218296,
                        "stop_char": 218335
                    },
                    {
                        "name": "activate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 218467,
                        "stop_char": 218498
                    },
                    {
                        "name": "setExplosionDelay",
                        "short_desc": "Set the delay before the launched Fireworks explodes",
                        "desc": "",
                        "params": [
                            {
                                "name": "delay",
                                "desc": "The delay before explosion in seconds (maximum 5s)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 218631,
                        "stop_char": 218676
                    },
                    {
                        "name": "getExplosionDelay",
                        "short_desc": "Returns the delay before the launched Fireworks explodes",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The delay before explosion in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 218795,
                        "stop_char": 218835
                    },
                    {
                        "name": "setLaunchSpeed",
                        "short_desc": "Set the speed at which the firework will be launched (impacts its altitude, depending on the local gravity).",
                        "desc": "",
                        "params": [
                            {
                                "name": "speed",
                                "desc": "The launch speed in m/s (maximum 200m/s)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 219014,
                        "stop_char": 219056
                    },
                    {
                        "name": "getLaunchSpeed",
                        "short_desc": "Returns the speed at which the firework will be launched",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The launch speed in m/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 219161,
                        "stop_char": 219198
                    },
                    {
                        "name": "setType",
                        "short_desc": "Set the type of launched firework (will affect which firework is picked in the attached Container)",
                        "desc": "",
                        "params": [
                            {
                                "name": "type",
                                "desc": "The type index of the firework (Ball = 1, Ring = 2, Palmtree = 3, Shower = 4)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 219404,
                        "stop_char": 219438
                    },
                    {
                        "name": "getType",
                        "short_desc": "Returns the type of launched firework",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The type index of the firework (Ball = 1, Ring = 2, Palmtree = 3, Shower = 4)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 219579,
                        "stop_char": 219609
                    },
                    {
                        "name": "setColor",
                        "short_desc": "Set the color of the launched firework (will affect which firework is picked in the attached Container)",
                        "desc": "",
                        "params": [
                            {
                                "name": "color",
                                "desc": "The color index of the firework (Blue = 1, Gold = 2, Green = 3, Purple = 4, Red = 5, Silver = 6)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 219840,
                        "stop_char": 219876
                    },
                    {
                        "name": "getColor",
                        "short_desc": "Returns the color of the launched firework",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The color index of the firework (Blue = 1, Gold = 2, Green = 3, Purple = 4, Red = 5, Silver = 6)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 220041,
                        "stop_char": 220072
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "ForceField",
                "name_in_source": "ForceField",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 220383,
                        "stop_char": 220412
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 220586,
                        "stop_char": 220615
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 220724,
                        "stop_char": 220762
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 220832,
                        "stop_char": 220870
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 220957,
                        "stop_char": 220989
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 221064,
                        "stop_char": 221104
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 221195,
                        "stop_char": 221229
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 221297,
                        "stop_char": 221329
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 221416,
                        "stop_char": 221449
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 221539,
                        "stop_char": 221579
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 221727,
                        "stop_char": 221759
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 221914,
                        "stop_char": 221948
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 222037,
                        "stop_char": 222072
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 222154,
                        "stop_char": 222184
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 222337,
                        "stop_char": 222374
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 222484,
                        "stop_char": 222521
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 222615,
                        "stop_char": 222655
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 222805,
                        "stop_char": 222854
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 222978,
                        "stop_char": 223021
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 223171,
                        "stop_char": 223207
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 223325,
                        "stop_char": 223368
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 223547,
                        "stop_char": 223592
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 223759,
                        "stop_char": 223789
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 223962,
                        "stop_char": 223995
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 224172,
                        "stop_char": 224207
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 224354,
                        "stop_char": 224389
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 224542,
                        "stop_char": 224580
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 224737,
                        "stop_char": 224777
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 225418,
                        "stop_char": 225465
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 226105,
                        "stop_char": 226145
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 226786,
                        "stop_char": 226827
                    },
                    {
                        "name": "activate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 226974,
                        "stop_char": 227007
                    },
                    {
                        "name": "deactivate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 227159,
                        "stop_char": 227194
                    },
                    {
                        "name": "isDeployed",
                        "short_desc": "Checks if the forcefield is deployed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the forcefield is deployed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 227288,
                        "stop_char": 227323
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 227414,
                        "stop_char": 227447
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "FueledEngine",
                "name_in_source": "FueledEngine",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 227729,
                        "stop_char": 227760
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 227936,
                        "stop_char": 227967
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 228076,
                        "stop_char": 228116
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 228186,
                        "stop_char": 228226
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 228313,
                        "stop_char": 228347
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 228422,
                        "stop_char": 228464
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 228555,
                        "stop_char": 228591
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 228659,
                        "stop_char": 228693
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 228780,
                        "stop_char": 228815
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 228905,
                        "stop_char": 228947
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 229095,
                        "stop_char": 229129
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 229284,
                        "stop_char": 229320
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 229409,
                        "stop_char": 229446
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 229528,
                        "stop_char": 229560
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 229713,
                        "stop_char": 229752
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 229862,
                        "stop_char": 229901
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 229995,
                        "stop_char": 230037
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 230187,
                        "stop_char": 230238
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 230362,
                        "stop_char": 230407
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 230557,
                        "stop_char": 230595
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 230713,
                        "stop_char": 230758
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 230937,
                        "stop_char": 230984
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 231151,
                        "stop_char": 231183
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 231356,
                        "stop_char": 231391
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 231568,
                        "stop_char": 231605
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 231752,
                        "stop_char": 231789
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 231942,
                        "stop_char": 231982
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 232139,
                        "stop_char": 232181
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 232822,
                        "stop_char": 232871
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 233511,
                        "stop_char": 233553
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 234194,
                        "stop_char": 234237
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 234487,
                        "stop_char": 234534
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 234625,
                        "stop_char": 234659
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 234806,
                        "stop_char": 234852
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 234965,
                        "stop_char": 235006
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the engine is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the engine is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 235344,
                        "stop_char": 235379
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 235464,
                        "stop_char": 235499
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The engine thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 235689,
                        "stop_char": 235731
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The thrust of the engine is currently delivering in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 235856,
                        "stop_char": 235892
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 236037,
                        "stop_char": 236076
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 236173,
                        "stop_char": 236216
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the engine can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current minimal engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 236640,
                        "stop_char": 236686
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 236786,
                        "stop_char": 236825
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the engine can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the engine",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current maximum engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 237177,
                        "stop_char": 237223
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be lower for certain engines",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 237378,
                        "stop_char": 237427
                    },
                    {
                        "name": "isTorqueEnabled",
                        "short_desc": "Checks if the torque generation is enabled on the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the torque is enabled on the engine",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 237550,
                        "stop_char": 237592
                    },
                    {
                        "name": "enableTorque",
                        "short_desc": "Sets the torque generation state on the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": "",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 237670,
                        "stop_char": 237714
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the engine thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 237870,
                        "stop_char": 237910
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the engine torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 238049,
                        "stop_char": 238089
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the engine exhaust thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 238233,
                        "stop_char": 238278
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 238375,
                        "stop_char": 238412
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the engine torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 238531,
                        "stop_char": 238576
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 238673,
                        "stop_char": 238710
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "Checks if the engine out of fuel",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when there is no fuel left, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 238810,
                        "stop_char": 238848
                    },
                    {
                        "name": "getFuelId",
                        "short_desc": "Returns the item ID of the fuel currently used by the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the fuel currently used",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 238973,
                        "stop_char": 239009
                    },
                    {
                        "name": "getFuelTankId",
                        "short_desc": "Returns the local ID of the fueltank linked to the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local ID of the fueltank",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 239121,
                        "stop_char": 239161
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "Checks if the engine linked to a functional Fuel Tank (not broken or colliding)?",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the linked tank is functional, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 239317,
                        "stop_char": 239365
                    },
                    {
                        "name": "hasBrokenFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 239472,
                        "stop_char": 239516
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "Returns the engine fuel consumption rate per newton of thrust delivered per second",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current rate of fuel consumption in m\u0412\u0456/(N.s)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 239673,
                        "stop_char": 239718
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "Returns the ratio between the current fuel rate and the theoretical nominal fuel rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be higher for certain engines at certain speeds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 239894,
                        "stop_char": 239942
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "Returns the current fuel consumption rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The rate of fuel consumption in m3/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 240045,
                        "stop_char": 240090
                    },
                    {
                        "name": "getWarmupTime",
                        "short_desc": "Returns the T50; the time needed for the engine to reach 50% of its maximal thrust (all engines",
                        "desc": "do not instantly reach the thrust that is set for them, but they can take time to \"warm up\" to\nthe final value)",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time to half thrust in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 240365,
                        "stop_char": 240405
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 240493,
                        "stop_char": 240526
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Gyro",
                "name_in_source": "Gyro",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 240725,
                        "stop_char": 240748
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 240916,
                        "stop_char": 240939
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 241048,
                        "stop_char": 241080
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 241150,
                        "stop_char": 241182
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 241269,
                        "stop_char": 241295
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 241370,
                        "stop_char": 241404
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 241495,
                        "stop_char": 241523
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 241591,
                        "stop_char": 241617
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 241704,
                        "stop_char": 241731
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 241821,
                        "stop_char": 241855
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 242003,
                        "stop_char": 242029
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 242184,
                        "stop_char": 242212
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 242301,
                        "stop_char": 242330
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 242412,
                        "stop_char": 242436
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 242589,
                        "stop_char": 242620
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 242730,
                        "stop_char": 242761
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 242855,
                        "stop_char": 242889
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 243039,
                        "stop_char": 243082
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 243206,
                        "stop_char": 243243
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 243393,
                        "stop_char": 243423
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 243541,
                        "stop_char": 243578
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 243757,
                        "stop_char": 243796
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 243963,
                        "stop_char": 243987
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 244160,
                        "stop_char": 244187
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 244364,
                        "stop_char": 244393
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 244540,
                        "stop_char": 244569
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 244722,
                        "stop_char": 244754
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 244911,
                        "stop_char": 244945
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 245586,
                        "stop_char": 245627
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 246267,
                        "stop_char": 246301
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 246942,
                        "stop_char": 246977
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Returns the activation state of the gyro",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the gyro is the active ship orientation unit, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 247400,
                        "stop_char": 247427
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 247504,
                        "stop_char": 247531
                    },
                    {
                        "name": "getPitch",
                        "short_desc": "The pitch value relative to the gyro orientation and the local gravity",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The pitch angle in degrees, relative to the gyro orientation and the local gravity",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 247709,
                        "stop_char": 247736
                    },
                    {
                        "name": "getRoll",
                        "short_desc": "The roll value relative to the gyro orientation and the local gravity",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The roll angle in degrees, relative to the gyro orientation and the local gravity",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 247912,
                        "stop_char": 247938
                    },
                    {
                        "name": "localUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 248011,
                        "stop_char": 248037
                    },
                    {
                        "name": "localForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 248120,
                        "stop_char": 248151
                    },
                    {
                        "name": "localRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 248230,
                        "stop_char": 248259
                    },
                    {
                        "name": "worldUp",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 248337,
                        "stop_char": 248363
                    },
                    {
                        "name": "worldForward",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 248451,
                        "stop_char": 248482
                    },
                    {
                        "name": "worldRight",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 248566,
                        "stop_char": 248595
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "HoverEngine",
                "name_in_source": "HoverEngine",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 248815,
                        "stop_char": 248845
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249020,
                        "stop_char": 249050
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249159,
                        "stop_char": 249198
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249268,
                        "stop_char": 249307
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249394,
                        "stop_char": 249427
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249502,
                        "stop_char": 249543
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249634,
                        "stop_char": 249669
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249737,
                        "stop_char": 249770
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249857,
                        "stop_char": 249891
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 249981,
                        "stop_char": 250022
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 250170,
                        "stop_char": 250203
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 250358,
                        "stop_char": 250393
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 250482,
                        "stop_char": 250518
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 250600,
                        "stop_char": 250631
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 250784,
                        "stop_char": 250822
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 250932,
                        "stop_char": 250970
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 251064,
                        "stop_char": 251105
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 251255,
                        "stop_char": 251305
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 251429,
                        "stop_char": 251473
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 251623,
                        "stop_char": 251660
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 251778,
                        "stop_char": 251822
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 252001,
                        "stop_char": 252047
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 252214,
                        "stop_char": 252245
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 252418,
                        "stop_char": 252452
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 252629,
                        "stop_char": 252665
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 252812,
                        "stop_char": 252848
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 253001,
                        "stop_char": 253040
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 253197,
                        "stop_char": 253238
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 253879,
                        "stop_char": 253927
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 254567,
                        "stop_char": 254608
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 255249,
                        "stop_char": 255291
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 255541,
                        "stop_char": 255587
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 255678,
                        "stop_char": 255711
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 255858,
                        "stop_char": 255903
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 256016,
                        "stop_char": 256056
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the engine is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the engine is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 256392,
                        "stop_char": 256426
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 256511,
                        "stop_char": 256545
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The engine thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 256734,
                        "stop_char": 256775
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The thrust of the engine is currently delivering in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 256900,
                        "stop_char": 256935
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 257080,
                        "stop_char": 257118
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 257215,
                        "stop_char": 257257
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the engine can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current minimal engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 257681,
                        "stop_char": 257726
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 257826,
                        "stop_char": 257864
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the engine can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the engine",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current maximum engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 258216,
                        "stop_char": 258261
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be lower for certain engines",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 258416,
                        "stop_char": 258464
                    },
                    {
                        "name": "isTorqueEnabled",
                        "short_desc": "Checks if the torque generation is enabled on the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the torque is enabled on the engine",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 258587,
                        "stop_char": 258628
                    },
                    {
                        "name": "enableTorque",
                        "short_desc": "Sets the torque generation state on the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": "",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 258706,
                        "stop_char": 258749
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the engine thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 258905,
                        "stop_char": 258944
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the engine torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 259083,
                        "stop_char": 259122
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the engine exhaust thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 259266,
                        "stop_char": 259310
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 259407,
                        "stop_char": 259443
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the engine torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 259562,
                        "stop_char": 259606
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 259703,
                        "stop_char": 259739
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "Checks if the engine out of fuel",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when there is no fuel left, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 259839,
                        "stop_char": 259876
                    },
                    {
                        "name": "getFuelId",
                        "short_desc": "Returns the item ID of the fuel currently used by the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the fuel currently used",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 260001,
                        "stop_char": 260036
                    },
                    {
                        "name": "getFuelTankId",
                        "short_desc": "Returns the local ID of the fueltank linked to the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local ID of the fueltank",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 260148,
                        "stop_char": 260187
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "Checks if the engine linked to a functional Fuel Tank (not broken or colliding)?",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the linked tank is functional, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 260343,
                        "stop_char": 260390
                    },
                    {
                        "name": "hasBrokenFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 260497,
                        "stop_char": 260540
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "Returns the engine fuel consumption rate per newton of thrust delivered per second",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current rate of fuel consumption in m\u0412\u0456/(N.s)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 260697,
                        "stop_char": 260741
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "Returns the ratio between the current fuel rate and the theoretical nominal fuel rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be higher for certain engines at certain speeds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 260917,
                        "stop_char": 260964
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "Returns the current fuel consumption rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The rate of fuel consumption in m3/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 261067,
                        "stop_char": 261111
                    },
                    {
                        "name": "getWarmupTime",
                        "short_desc": "Returns the T50; the time needed for the engine to reach 50% of its maximal thrust (all engines",
                        "desc": "do not instantly reach the thrust that is set for them, but they can take time to \"warm up\" to\nthe final value)",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time to half thrust in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 261386,
                        "stop_char": 261425
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 261513,
                        "stop_char": 261545
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "Returns the distance to the first object detected in the direction of the thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The distance to the first obstacle in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 261695,
                        "stop_char": 261732
                    },
                    {
                        "name": "getMaxDistance",
                        "short_desc": "Returns the maximum functional distance from the ground",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum functional distance in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 261854,
                        "stop_char": 261894
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Industry",
                "name_in_source": "Industry",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 262105,
                        "stop_char": 262132
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 262304,
                        "stop_char": 262331
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 262440,
                        "stop_char": 262476
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 262546,
                        "stop_char": 262582
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 262669,
                        "stop_char": 262699
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 262774,
                        "stop_char": 262812
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 262903,
                        "stop_char": 262935
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 263003,
                        "stop_char": 263033
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 263120,
                        "stop_char": 263151
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 263241,
                        "stop_char": 263279
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 263427,
                        "stop_char": 263457
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 263612,
                        "stop_char": 263644
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 263733,
                        "stop_char": 263766
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 263848,
                        "stop_char": 263876
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 264029,
                        "stop_char": 264064
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 264174,
                        "stop_char": 264209
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 264303,
                        "stop_char": 264341
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 264491,
                        "stop_char": 264538
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 264662,
                        "stop_char": 264703
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 264853,
                        "stop_char": 264887
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 265005,
                        "stop_char": 265046
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 265225,
                        "stop_char": 265268
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 265435,
                        "stop_char": 265463
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 265636,
                        "stop_char": 265667
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 265844,
                        "stop_char": 265877
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 266024,
                        "stop_char": 266057
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 266210,
                        "stop_char": 266246
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 266403,
                        "stop_char": 266441
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 267082,
                        "stop_char": 267127
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 267767,
                        "stop_char": 267805
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 268446,
                        "stop_char": 268485
                    },
                    {
                        "name": "start",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 268694,
                        "stop_char": 268722
                    },
                    {
                        "name": "startMaintain",
                        "short_desc": "Start maintaining the specified quantity. Resumes production when the quantity in the output Container is too low, and pauses production when it is equal or higher",
                        "desc": "",
                        "params": [
                            {
                                "name": "quantity",
                                "desc": "Quantity to maintain inside output containers",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 268965,
                        "stop_char": 269009
                    },
                    {
                        "name": "startAndMaintain",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 269123,
                        "stop_char": 269162
                    },
                    {
                        "name": "startFor",
                        "short_desc": "Start the production of numBatches and then stop",
                        "desc": "",
                        "params": [
                            {
                                "name": "numBatches",
                                "desc": "Number of batches to run before unit stops",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 269289,
                        "stop_char": 269330
                    },
                    {
                        "name": "batchStart",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 269435,
                        "stop_char": 269468
                    },
                    {
                        "name": "stop",
                        "short_desc": "Stop the production of the industry unit",
                        "desc": "",
                        "params": [
                            {
                                "name": "force",
                                "desc": "(optional by default false) True if you want to force the production to stop immediately",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "allowLoss",
                                "desc": "(optional by default false) True if you want to allow the industry unit to lose components when recovering in use components",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 269781,
                        "stop_char": 269824
                    },
                    {
                        "name": "hardStop",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 269928,
                        "stop_char": 269959
                    },
                    {
                        "name": "softStop",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 270051,
                        "stop_char": 270082
                    },
                    {
                        "name": "getState",
                        "short_desc": "Get the current running state of the industry",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "(Stopped = 1, Running = 2, Jammed missing ingredient = 3, Jammed output full = 4, Jammed no output container = 5, Pending = 6, Jammed missing schematics = 7)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 270311,
                        "stop_char": 270342
                    },
                    {
                        "name": "getInfo",
                        "short_desc": "Returns the complete information of the industry",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The complete state of the industry, a table with fields {[int] state, [bool] stopRequested, [int] schematicId (deprecated = 0), [int] schematicsRemaining, [int] unitsProduced, [int] remainingTime, [int] batchesRequested, [int] batchesRemaining, [float] maintainProductAmount, [int] currentProductAmount, [table] currentProducts:{{[int] id, [double] quantity},...}}",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 270815,
                        "stop_char": 270845
                    },
                    {
                        "name": "getCyclesCompleted",
                        "short_desc": "Get the count of completed cycles since the player started the unit",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The count of completed cycles since startup",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 270982,
                        "stop_char": 271023
                    },
                    {
                        "name": "getCycleCountSinceStartup",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 271135,
                        "stop_char": 271183
                    },
                    {
                        "name": "getEfficiency",
                        "short_desc": "Returns the efficiency of the industry",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The efficiency rate between 0 and 1",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 271282,
                        "stop_char": 271318
                    },
                    {
                        "name": "getUptime",
                        "short_desc": "Returns the time elapsed in seconds since the player started the unit for the latest time",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time elapsed in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 271460,
                        "stop_char": 271492
                    },
                    {
                        "name": "getInputs",
                        "short_desc": "Returns the list of items required to run the selected output product.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Returns the list of products",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 271615,
                        "stop_char": 271647
                    },
                    {
                        "name": "getOutputs",
                        "short_desc": "Returns the list of id of the items currently produced.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The first entry in the table is always the main product produced",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 271791,
                        "stop_char": 271824
                    },
                    {
                        "name": "getCurrentSchematic",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 271887,
                        "stop_char": 271929
                    },
                    {
                        "name": "setOutput",
                        "short_desc": "Set the item to produce from its id",
                        "desc": "",
                        "params": [
                            {
                                "name": "itemId",
                                "desc": "The item id of the item to produce",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The result of the operation 0 for a sucess, -1 if the industry is running",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 272124,
                        "stop_char": 272162
                    },
                    {
                        "name": "setCurrentSchematic",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 272267,
                        "stop_char": 272309
                    },
                    {
                        "name": "updateBank",
                        "short_desc": "Send a request to get an update of the content of the schematic bank, limited to one call allowed per 30 seconds",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "If the request is not yet possible, returns the remaining time to wait for",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 272521,
                        "stop_char": 272554
                    },
                    {
                        "name": "getBank",
                        "short_desc": "Returns a table describing the contents of the schematic bank, as a pair itemId and quantity per slot",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The content of the schematic bank as a table with fields {[int] id, [float] quantity} per slot",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 272774,
                        "stop_char": 272804
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "LandingGear",
                "name_in_source": "LandingGear",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 273982,
                        "stop_char": 274012
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 274187,
                        "stop_char": 274217
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 274326,
                        "stop_char": 274365
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 274435,
                        "stop_char": 274474
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 274561,
                        "stop_char": 274594
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 274669,
                        "stop_char": 274710
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 274801,
                        "stop_char": 274836
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 274904,
                        "stop_char": 274937
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 275024,
                        "stop_char": 275058
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 275148,
                        "stop_char": 275189
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 275337,
                        "stop_char": 275370
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 275525,
                        "stop_char": 275560
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 275649,
                        "stop_char": 275685
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 275767,
                        "stop_char": 275798
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 275951,
                        "stop_char": 275989
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 276099,
                        "stop_char": 276137
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 276231,
                        "stop_char": 276272
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 276422,
                        "stop_char": 276472
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 276596,
                        "stop_char": 276640
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 276790,
                        "stop_char": 276827
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 276945,
                        "stop_char": 276989
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 277168,
                        "stop_char": 277214
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 277381,
                        "stop_char": 277412
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 277585,
                        "stop_char": 277619
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 277796,
                        "stop_char": 277832
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 277979,
                        "stop_char": 278015
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 278168,
                        "stop_char": 278207
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 278364,
                        "stop_char": 278405
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 279046,
                        "stop_char": 279094
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 279734,
                        "stop_char": 279775
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 280416,
                        "stop_char": 280458
                    },
                    {
                        "name": "activate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 280610,
                        "stop_char": 280644
                    },
                    {
                        "name": "deactivate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 280801,
                        "stop_char": 280837
                    },
                    {
                        "name": "isDeployed",
                        "short_desc": "Checks if the landing gear is deployed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the landing gear is deployed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 280935,
                        "stop_char": 280971
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 281064,
                        "stop_char": 281098
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "LaserDetector",
                "name_in_source": "LaserDetector",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 281386,
                        "stop_char": 281418
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 281595,
                        "stop_char": 281627
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 281736,
                        "stop_char": 281777
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 281847,
                        "stop_char": 281888
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 281975,
                        "stop_char": 282010
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 282085,
                        "stop_char": 282128
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 282219,
                        "stop_char": 282256
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 282324,
                        "stop_char": 282359
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 282446,
                        "stop_char": 282482
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 282572,
                        "stop_char": 282615
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 282763,
                        "stop_char": 282798
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 282953,
                        "stop_char": 282990
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 283079,
                        "stop_char": 283117
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 283199,
                        "stop_char": 283232
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 283385,
                        "stop_char": 283425
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 283535,
                        "stop_char": 283575
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 283669,
                        "stop_char": 283712
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 283862,
                        "stop_char": 283914
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 284038,
                        "stop_char": 284084
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 284234,
                        "stop_char": 284273
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 284391,
                        "stop_char": 284437
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 284616,
                        "stop_char": 284664
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 284831,
                        "stop_char": 284864
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 285037,
                        "stop_char": 285073
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 285250,
                        "stop_char": 285288
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 285435,
                        "stop_char": 285473
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 285626,
                        "stop_char": 285667
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 285824,
                        "stop_char": 285867
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 286508,
                        "stop_char": 286558
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 287198,
                        "stop_char": 287241
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 287882,
                        "stop_char": 287926
                    },
                    {
                        "name": "isHit",
                        "short_desc": "Checks if any laser is hitting the detector",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if a laser is hitting the detector",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 288032,
                        "stop_char": 288065
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 288157,
                        "stop_char": 288193
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "LaserEmitter",
                "name_in_source": "LaserEmitter",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 288719,
                        "stop_char": 288750
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 288926,
                        "stop_char": 288957
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 289066,
                        "stop_char": 289106
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 289176,
                        "stop_char": 289216
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 289303,
                        "stop_char": 289337
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 289412,
                        "stop_char": 289454
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 289545,
                        "stop_char": 289581
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 289649,
                        "stop_char": 289683
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 289770,
                        "stop_char": 289805
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 289895,
                        "stop_char": 289937
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 290085,
                        "stop_char": 290119
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 290274,
                        "stop_char": 290310
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 290399,
                        "stop_char": 290436
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 290518,
                        "stop_char": 290550
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 290703,
                        "stop_char": 290742
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 290852,
                        "stop_char": 290891
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 290985,
                        "stop_char": 291027
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 291177,
                        "stop_char": 291228
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 291352,
                        "stop_char": 291397
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 291547,
                        "stop_char": 291585
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 291703,
                        "stop_char": 291748
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 291927,
                        "stop_char": 291974
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 292141,
                        "stop_char": 292173
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 292346,
                        "stop_char": 292381
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 292558,
                        "stop_char": 292595
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 292742,
                        "stop_char": 292779
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 292932,
                        "stop_char": 292972
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 293129,
                        "stop_char": 293171
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 293812,
                        "stop_char": 293861
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 294501,
                        "stop_char": 294543
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 295184,
                        "stop_char": 295227
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the laser emitter is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the laser emitter is active",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 295529,
                        "stop_char": 295564
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 295657,
                        "stop_char": 295692
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Library",
                "name_in_source": "Library",
                "methods": [
                    {
                        "name": "systemResolution3",
                        "short_desc": "Solve the 3D linear system M*x=c0 where M is defined by its column vectors c1,c2,c3",
                        "desc": "",
                        "params": [
                            {
                                "name": "c1",
                                "desc": "The first column of the matrix M",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "c2",
                                "desc": "The second column of the matrix M",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "c3",
                                "desc": "The third column of the matrix M",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "c0",
                                "desc": "The target column vector of the system",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The vec3 solution of the above system",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 296089,
                        "stop_char": 296142
                    },
                    {
                        "name": "systemResolution2",
                        "short_desc": "Solve the 2D linear system M*x=c0 where M is defined by its column vectors c1,c2",
                        "desc": "",
                        "params": [
                            {
                                "name": "c1",
                                "desc": "The first column of the matrix M",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "c2",
                                "desc": "The second column of the matrix M",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "c0",
                                "desc": "The target column vector of the system",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The vec2 solution of the above system",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 296447,
                        "stop_char": 296496
                    },
                    {
                        "name": "getPointOnScreen",
                        "short_desc": "Returns the position of the given point in world coordinates system, on the game screen",
                        "desc": "",
                        "params": [
                            {
                                "name": "worldPos",
                                "desc": ": The world position of the point",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The position in percentage (between 0 and 1) of the screen resolution as vec3 with {x, y, depth}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 296762,
                        "stop_char": 296808
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Light",
                "name_in_source": "Light",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297010,
                        "stop_char": 297034
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297203,
                        "stop_char": 297227
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297336,
                        "stop_char": 297369
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297439,
                        "stop_char": 297472
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297559,
                        "stop_char": 297586
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297661,
                        "stop_char": 297696
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297787,
                        "stop_char": 297816
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297884,
                        "stop_char": 297911
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 297998,
                        "stop_char": 298026
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 298116,
                        "stop_char": 298151
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 298299,
                        "stop_char": 298326
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 298481,
                        "stop_char": 298510
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 298599,
                        "stop_char": 298629
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 298711,
                        "stop_char": 298736
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 298889,
                        "stop_char": 298921
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 299031,
                        "stop_char": 299063
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 299157,
                        "stop_char": 299192
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 299342,
                        "stop_char": 299386
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 299510,
                        "stop_char": 299548
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 299698,
                        "stop_char": 299729
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 299847,
                        "stop_char": 299885
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 300064,
                        "stop_char": 300104
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 300271,
                        "stop_char": 300296
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 300469,
                        "stop_char": 300497
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 300674,
                        "stop_char": 300704
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 300851,
                        "stop_char": 300881
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 301034,
                        "stop_char": 301067
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 301224,
                        "stop_char": 301259
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 301900,
                        "stop_char": 301942
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 302582,
                        "stop_char": 302617
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 303258,
                        "stop_char": 303294
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the light is on",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the light is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 303481,
                        "stop_char": 303509
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 303588,
                        "stop_char": 303616
                    },
                    {
                        "name": "setColor",
                        "short_desc": "Set the light color in RGB. Lights can use HDR color values above 1.0 to glow.",
                        "desc": "",
                        "params": [
                            {
                                "name": "r",
                                "desc": "The red component, between 0.0 and 1.0, up to 5.0 for HDR colors.",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "g",
                                "desc": "The green component, between 0.0 and 1.0, up to 5.0 for HDR colors.",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "The blue component, between 0.0 and 1.0, up to 5.0 for HDR colors.",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 304021,
                        "stop_char": 304056
                    },
                    {
                        "name": "setRGBColor",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 304148,
                        "stop_char": 304179
                    },
                    {
                        "name": "getColor",
                        "short_desc": "Returns the light color in RGB",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "An array of number for the red, blue and green components of the light, with values between 0.0 and 1.0, up to 5.0.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 304350,
                        "stop_char": 304378
                    },
                    {
                        "name": "getRGBColor",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 304460,
                        "stop_char": 304491
                    },
                    {
                        "name": "setBlinkingState",
                        "short_desc": "Returns the blinking state of the light",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": "True to enable light blinking",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 304591,
                        "stop_char": 304632
                    },
                    {
                        "name": "isBlinking",
                        "short_desc": "Checks if the light blinking is enabled",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the light blinking is enabled",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 304732,
                        "stop_char": 304762
                    },
                    {
                        "name": "getOnBlinkingDuration",
                        "short_desc": "Returns the light 'on' blinking duration",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The duration of the 'on' blinking in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 304872,
                        "stop_char": 304913
                    },
                    {
                        "name": "setOnBlinkingDuration",
                        "short_desc": "Set the light 'on' blinking duration",
                        "desc": "",
                        "params": [
                            {
                                "name": "time",
                                "desc": "The duration of the 'on' blinking in seconds",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 305023,
                        "stop_char": 305068
                    },
                    {
                        "name": "getOffBlinkingDuration",
                        "short_desc": "Returns the light 'off' blinking duration",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The duration of the 'off' blinking in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 305180,
                        "stop_char": 305222
                    },
                    {
                        "name": "setOffBlinkingDuration",
                        "short_desc": "Set the light 'off' blinking duration",
                        "desc": "",
                        "params": [
                            {
                                "name": "time",
                                "desc": "The duration of the 'off' blinking in seconds",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 305334,
                        "stop_char": 305380
                    },
                    {
                        "name": "getBlinkingTimeShift",
                        "short_desc": "Returns the light blinking time shift",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time shift of the blinking in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 305484,
                        "stop_char": 305524
                    },
                    {
                        "name": "setBlinkingTimeShift",
                        "short_desc": "Set the light blinking time shift",
                        "desc": "",
                        "params": [
                            {
                                "name": "shift",
                                "desc": "The time shift of the blinking in seconds",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 305629,
                        "stop_char": 305674
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "ManualButton",
                "name_in_source": "ManualButton",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 305897,
                        "stop_char": 305928
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 306104,
                        "stop_char": 306135
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 306244,
                        "stop_char": 306284
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 306354,
                        "stop_char": 306394
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 306481,
                        "stop_char": 306515
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 306590,
                        "stop_char": 306632
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 306723,
                        "stop_char": 306759
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 306827,
                        "stop_char": 306861
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 306948,
                        "stop_char": 306983
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 307073,
                        "stop_char": 307115
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 307263,
                        "stop_char": 307297
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 307452,
                        "stop_char": 307488
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 307577,
                        "stop_char": 307614
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 307696,
                        "stop_char": 307728
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 307881,
                        "stop_char": 307920
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 308030,
                        "stop_char": 308069
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 308163,
                        "stop_char": 308205
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 308355,
                        "stop_char": 308406
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 308530,
                        "stop_char": 308575
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 308725,
                        "stop_char": 308763
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 308881,
                        "stop_char": 308926
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 309105,
                        "stop_char": 309152
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 309319,
                        "stop_char": 309351
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 309524,
                        "stop_char": 309559
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 309736,
                        "stop_char": 309773
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 309920,
                        "stop_char": 309957
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 310110,
                        "stop_char": 310150
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 310307,
                        "stop_char": 310349
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 310990,
                        "stop_char": 311039
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 311679,
                        "stop_char": 311721
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 312362,
                        "stop_char": 312405
                    },
                    {
                        "name": "isDown",
                        "short_desc": "Checks if the manual button is down",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the manual button is down",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 312497,
                        "stop_char": 312530
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 312621,
                        "stop_char": 312656
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "ManualSwitch",
                "name_in_source": "ManualSwitch",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 313164,
                        "stop_char": 313195
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 313371,
                        "stop_char": 313402
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 313511,
                        "stop_char": 313551
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 313621,
                        "stop_char": 313661
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 313748,
                        "stop_char": 313782
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 313857,
                        "stop_char": 313899
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 313990,
                        "stop_char": 314026
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 314094,
                        "stop_char": 314128
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 314215,
                        "stop_char": 314250
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 314340,
                        "stop_char": 314382
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 314530,
                        "stop_char": 314564
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 314719,
                        "stop_char": 314755
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 314844,
                        "stop_char": 314881
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 314963,
                        "stop_char": 314995
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 315148,
                        "stop_char": 315187
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 315297,
                        "stop_char": 315336
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 315430,
                        "stop_char": 315472
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 315622,
                        "stop_char": 315673
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 315797,
                        "stop_char": 315842
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 315992,
                        "stop_char": 316030
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 316148,
                        "stop_char": 316193
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 316372,
                        "stop_char": 316419
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 316586,
                        "stop_char": 316618
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 316791,
                        "stop_char": 316826
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 317003,
                        "stop_char": 317040
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 317187,
                        "stop_char": 317224
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 317377,
                        "stop_char": 317417
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 317574,
                        "stop_char": 317616
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 318257,
                        "stop_char": 318306
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 318946,
                        "stop_char": 318988
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 319629,
                        "stop_char": 319672
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the switch is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the switch is active",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 319942,
                        "stop_char": 319977
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 320070,
                        "stop_char": 320105
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "MiningUnit",
                "name_in_source": "MiningUnit",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 320607,
                        "stop_char": 320636
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 320810,
                        "stop_char": 320839
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 320948,
                        "stop_char": 320986
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 321056,
                        "stop_char": 321094
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 321181,
                        "stop_char": 321213
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 321288,
                        "stop_char": 321328
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 321419,
                        "stop_char": 321453
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 321521,
                        "stop_char": 321553
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 321640,
                        "stop_char": 321673
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 321763,
                        "stop_char": 321803
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 321951,
                        "stop_char": 321983
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 322138,
                        "stop_char": 322172
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 322261,
                        "stop_char": 322296
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 322378,
                        "stop_char": 322408
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 322561,
                        "stop_char": 322598
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 322708,
                        "stop_char": 322745
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 322839,
                        "stop_char": 322879
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 323029,
                        "stop_char": 323078
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 323202,
                        "stop_char": 323245
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 323395,
                        "stop_char": 323431
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 323549,
                        "stop_char": 323592
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 323771,
                        "stop_char": 323816
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 323983,
                        "stop_char": 324013
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 324186,
                        "stop_char": 324219
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 324396,
                        "stop_char": 324431
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 324578,
                        "stop_char": 324613
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 324766,
                        "stop_char": 324804
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 324961,
                        "stop_char": 325001
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 325642,
                        "stop_char": 325689
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 326329,
                        "stop_char": 326369
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 327010,
                        "stop_char": 327051
                    },
                    {
                        "name": "getState",
                        "short_desc": "Returns the current state of the mining unit",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The status of the mining unit can be (Stopped = 1, Running = 2, Jammed output full = 3, Jammed no output container = 4)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 327241,
                        "stop_char": 327274
                    },
                    {
                        "name": "getStatus",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 327364,
                        "stop_char": 327398
                    },
                    {
                        "name": "getRemainingTime",
                        "short_desc": "Returns the remaining time of the current batch extraction process.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The remaining time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 327520,
                        "stop_char": 327561
                    },
                    {
                        "name": "getActiveOre",
                        "short_desc": "Returns the item ID of the currently selected ore.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the selected ore",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 327669,
                        "stop_char": 327706
                    },
                    {
                        "name": "getOrePools",
                        "short_desc": "Returns the list of available ore pools",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "A list of tables composed with {[int] oreId, [float] available, [float] maximum}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 327850,
                        "stop_char": 327886
                    },
                    {
                        "name": "getBaseRate",
                        "short_desc": "Returns the base production rate of the mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The production rate in L/h",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 327990,
                        "stop_char": 328026
                    },
                    {
                        "name": "getEfficiency",
                        "short_desc": "Returns the efficiency rate of the mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The efficiency rate between 0 and 1",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 328134,
                        "stop_char": 328172
                    },
                    {
                        "name": "getCalibrationRate",
                        "short_desc": "Returns the calibration rate of the mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The calibration rate of the mining unit between 0 and 1",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 328301,
                        "stop_char": 328344
                    },
                    {
                        "name": "getOptimalRate",
                        "short_desc": "Returns the optimal calibration rate of the mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The optimal calibration rate of the mining unit between 0 and 1",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 328489,
                        "stop_char": 328528
                    },
                    {
                        "name": "getProductionRate",
                        "short_desc": "Returns the current production rate of the mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The production rate in L/h",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 328635,
                        "stop_char": 328677
                    },
                    {
                        "name": "getAdjacencyBonus",
                        "short_desc": "Returns the territory's adjacency bonus to the territory of the mining unit. Note: This value is updated only when a new batch is started.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The territory's adjacency bonus",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 328872,
                        "stop_char": 328914
                    },
                    {
                        "name": "getLastExtractionPosition",
                        "short_desc": "Returns the position of the last calibration excavation, in world coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The coordinates in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 329053,
                        "stop_char": 329103
                    },
                    {
                        "name": "getLastExtractingPlayerId",
                        "short_desc": "Returns the ID of the last player who calibrated the mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The ID of the player",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 329215,
                        "stop_char": 329265
                    },
                    {
                        "name": "getLastExtractionTime",
                        "short_desc": "Returns the time in seconds since the last calibration of the mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time in seconds with milliseconds precision",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 329412,
                        "stop_char": 329458
                    },
                    {
                        "name": "getLastExtractedOre",
                        "short_desc": "Returns the item ID of the ore extracted during the last calibration excavation.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the extracted ore",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 329597,
                        "stop_char": 329641
                    },
                    {
                        "name": "getLastExtractedVolume",
                        "short_desc": "Returns the volume of ore extracted during the last calibration excavation.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The volume of ore extracted in L",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 329774,
                        "stop_char": 329821
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "PlasmaExtractor",
                "name_in_source": "PlasmaExtractor",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 331345,
                        "stop_char": 331379
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 331558,
                        "stop_char": 331592
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 331701,
                        "stop_char": 331744
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 331814,
                        "stop_char": 331857
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 331944,
                        "stop_char": 331981
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 332056,
                        "stop_char": 332101
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 332192,
                        "stop_char": 332231
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 332299,
                        "stop_char": 332336
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 332423,
                        "stop_char": 332461
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 332551,
                        "stop_char": 332596
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 332744,
                        "stop_char": 332781
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 332936,
                        "stop_char": 332975
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 333064,
                        "stop_char": 333104
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 333186,
                        "stop_char": 333221
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 333374,
                        "stop_char": 333416
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 333526,
                        "stop_char": 333568
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 333662,
                        "stop_char": 333707
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 333857,
                        "stop_char": 333911
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 334035,
                        "stop_char": 334083
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 334233,
                        "stop_char": 334274
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 334392,
                        "stop_char": 334440
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 334619,
                        "stop_char": 334669
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 334836,
                        "stop_char": 334871
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 335044,
                        "stop_char": 335082
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 335259,
                        "stop_char": 335299
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 335446,
                        "stop_char": 335486
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 335639,
                        "stop_char": 335682
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 335839,
                        "stop_char": 335884
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 336525,
                        "stop_char": 336577
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 337217,
                        "stop_char": 337262
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 337903,
                        "stop_char": 337949
                    },
                    {
                        "name": "getStatus",
                        "short_desc": "Returns the current status of the plasma extractor",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The status of the plasma extractor can be (Stopped = 1, Running = 2, Jammed output full = 3, Jammed no output container = 4)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 338150,
                        "stop_char": 338189
                    },
                    {
                        "name": "getRemainingTime",
                        "short_desc": "Returns the remaining time of the current batch extraction process.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The remaining time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 338311,
                        "stop_char": 338357
                    },
                    {
                        "name": "getPlasmaPools",
                        "short_desc": "Returns the list of available plasma pools",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "A list of tables composed with {[int] oreId, [int] quantity};",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 338485,
                        "stop_char": 338529
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Player",
                "name_in_source": "Player",
                "methods": [
                    {
                        "name": "getName",
                        "short_desc": "Returns the player name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The player name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 339257,
                        "stop_char": 339285
                    },
                    {
                        "name": "getId",
                        "short_desc": "Return the ID of the player",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The ID of the player",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 339359,
                        "stop_char": 339385
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the player mass",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the player in kilograms",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 339469,
                        "stop_char": 339497
                    },
                    {
                        "name": "getNanopackMass",
                        "short_desc": "Returns the player's nanopack content mass",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The player's nanopack content mass in kilograms",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 339612,
                        "stop_char": 339648
                    },
                    {
                        "name": "getNanopackVolume",
                        "short_desc": "Returns the player's nanopack content volume",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The player's nanopack content volume in liters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 339764,
                        "stop_char": 339802
                    },
                    {
                        "name": "getNanopackMaxVolume",
                        "short_desc": "Returns the player's nanopack maximum volume",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The player's nanopack maximum volume in liters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 339918,
                        "stop_char": 339959
                    },
                    {
                        "name": "getOrgIds",
                        "short_desc": "Returns the list of organization IDs of the player",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The list of organization IDs",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 340062,
                        "stop_char": 340092
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the player, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 340226,
                        "stop_char": 340258
                    },
                    {
                        "name": "getWorldPosition",
                        "short_desc": "Returns the position of the player, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 340372,
                        "stop_char": 340409
                    },
                    {
                        "name": "getHeadPosition",
                        "short_desc": "Returns the position of the head of the player's character, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the head in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 340579,
                        "stop_char": 340615
                    },
                    {
                        "name": "getWorldHeadPosition",
                        "short_desc": "Returns the position of the head of the player's character, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the head in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 340765,
                        "stop_char": 340806
                    },
                    {
                        "name": "getVelocity",
                        "short_desc": "Returns the velocity vector of the player, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The velocity vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 340954,
                        "stop_char": 340986
                    },
                    {
                        "name": "getWorldVelocity",
                        "short_desc": "Returns the velocity vector of the player, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The velocity vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 341114,
                        "stop_char": 341151
                    },
                    {
                        "name": "getAbsoluteVelocity",
                        "short_desc": "Returns the absolute velocity vector of the player, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The velocity absolute vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 341297,
                        "stop_char": 341337
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the player, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The forward direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 341503,
                        "stop_char": 341534
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the player, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The right direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 341696,
                        "stop_char": 341725
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the player, in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The up direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 341881,
                        "stop_char": 341907
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the player, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The forward direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 342053,
                        "stop_char": 342089
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the player, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The right direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 342231,
                        "stop_char": 342265
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the player, in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The up direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 342401,
                        "stop_char": 342432
                    },
                    {
                        "name": "getPlanet",
                        "short_desc": "Returns the id of the planet the player is located on",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The id of the planet, 0 if none",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 342543,
                        "stop_char": 342573
                    },
                    {
                        "name": "getParent",
                        "short_desc": "Returns the identifier of the construct to which the player is parented",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The id of the construct, 0 if none",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 342705,
                        "stop_char": 342735
                    },
                    {
                        "name": "isSeated",
                        "short_desc": "Checks if the player is seated",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the player is seated",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 342817,
                        "stop_char": 342846
                    },
                    {
                        "name": "getSeatId",
                        "short_desc": "Returns the local id of the seat on which the player is sitting",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local id of the seat, or 0 is not seated",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 342980,
                        "stop_char": 343010
                    },
                    {
                        "name": "isParentedTo",
                        "short_desc": "Checks if the player is parented to the given construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The construct id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if the player is parented to the given construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 343180,
                        "stop_char": 343215
                    },
                    {
                        "name": "isSprinting",
                        "short_desc": "Checks if the player is currently sprinting",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the player is sprinting",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 343313,
                        "stop_char": 343345
                    },
                    {
                        "name": "isJetpackOn",
                        "short_desc": "Checks if the player's jetpack is on",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the player's jetpack is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 343439,
                        "stop_char": 343471
                    },
                    {
                        "name": "isHeadlightOn",
                        "short_desc": "Returns the state of the headlight of the player",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the player has his headlight on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 343580,
                        "stop_char": 343614
                    },
                    {
                        "name": "setHeadlightOn",
                        "short_desc": "Set the state of the headlight of the player",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": ": True to turn on headlight",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 343717,
                        "stop_char": 343757
                    },
                    {
                        "name": "freeze",
                        "short_desc": "Freezes the player movements, liberating the associated movement keys to be used by the script.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal)",
                        "params": [
                            {
                                "name": "state",
                                "desc": "1 freeze the character, 0 unfreeze the character",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 344079,
                        "stop_char": 344111
                    },
                    {
                        "name": "isFrozen",
                        "short_desc": "Checks if the player movements are frozen",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the player is frozen, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 344217,
                        "stop_char": 344246
                    },
                    {
                        "name": "hasDRMAutorization",
                        "short_desc": "Checks if the player has DRM autorization to the control unit",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the player has DRM autorization on the control unit",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 344390,
                        "stop_char": 344429
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "PressureTile",
                "name_in_source": "PressureTile",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 344855,
                        "stop_char": 344886
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 345062,
                        "stop_char": 345093
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 345202,
                        "stop_char": 345242
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 345312,
                        "stop_char": 345352
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 345439,
                        "stop_char": 345473
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 345548,
                        "stop_char": 345590
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 345681,
                        "stop_char": 345717
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 345785,
                        "stop_char": 345819
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 345906,
                        "stop_char": 345941
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 346031,
                        "stop_char": 346073
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 346221,
                        "stop_char": 346255
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 346410,
                        "stop_char": 346446
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 346535,
                        "stop_char": 346572
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 346654,
                        "stop_char": 346686
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 346839,
                        "stop_char": 346878
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 346988,
                        "stop_char": 347027
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 347121,
                        "stop_char": 347163
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 347313,
                        "stop_char": 347364
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 347488,
                        "stop_char": 347533
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 347683,
                        "stop_char": 347721
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 347839,
                        "stop_char": 347884
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 348063,
                        "stop_char": 348110
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 348277,
                        "stop_char": 348309
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 348482,
                        "stop_char": 348517
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 348694,
                        "stop_char": 348731
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 348878,
                        "stop_char": 348915
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 349068,
                        "stop_char": 349108
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 349265,
                        "stop_char": 349307
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 349948,
                        "stop_char": 349997
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 350637,
                        "stop_char": 350679
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 351320,
                        "stop_char": 351363
                    },
                    {
                        "name": "isDown",
                        "short_desc": "Checks if the pressure tile is down",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the tile is down, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 351461,
                        "stop_char": 351494
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 351585,
                        "stop_char": 351620
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Radar",
                "name_in_source": "Radar",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 352121,
                        "stop_char": 352145
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 352314,
                        "stop_char": 352338
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 352447,
                        "stop_char": 352480
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 352550,
                        "stop_char": 352583
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 352670,
                        "stop_char": 352697
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 352772,
                        "stop_char": 352807
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 352898,
                        "stop_char": 352927
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 352995,
                        "stop_char": 353022
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 353109,
                        "stop_char": 353137
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 353227,
                        "stop_char": 353262
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 353410,
                        "stop_char": 353437
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 353592,
                        "stop_char": 353621
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 353710,
                        "stop_char": 353740
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 353822,
                        "stop_char": 353847
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 354000,
                        "stop_char": 354032
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 354142,
                        "stop_char": 354174
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 354268,
                        "stop_char": 354303
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 354453,
                        "stop_char": 354497
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 354621,
                        "stop_char": 354659
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 354809,
                        "stop_char": 354840
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 354958,
                        "stop_char": 354996
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 355175,
                        "stop_char": 355215
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 355382,
                        "stop_char": 355407
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 355580,
                        "stop_char": 355608
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 355785,
                        "stop_char": 355815
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 355962,
                        "stop_char": 355992
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 356145,
                        "stop_char": 356178
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 356335,
                        "stop_char": 356370
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 357011,
                        "stop_char": 357053
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 357693,
                        "stop_char": 357728
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 358369,
                        "stop_char": 358405
                    },
                    {
                        "name": "getOperationalState",
                        "short_desc": "Returns 1 if the radar is not broken, works in the current environment and is not used by another control unit",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the radar is operational, otherwise: 0 = broken, -1 = bad environment, -2 = obstructed, -3 = already in use",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 358654,
                        "stop_char": 358693
                    },
                    {
                        "name": "isOperational",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 358788,
                        "stop_char": 358821
                    },
                    {
                        "name": "getRange",
                        "short_desc": "Returns the scan range of the radar",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The scan range",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 358896,
                        "stop_char": 358924
                    },
                    {
                        "name": "getIdentifyRanges",
                        "short_desc": "Returns ranges to identify a target based on its core size",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The list of float values for ranges in meters as { xsRange, sRange, mRange, lRange }",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 359091,
                        "stop_char": 359128
                    },
                    {
                        "name": "getConstructIds",
                        "short_desc": "Returns the list of construct IDs in the scan range",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The list of scanned construct IDs",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 359237,
                        "stop_char": 359272
                    },
                    {
                        "name": "getSortMethod",
                        "short_desc": "Returns the sort method for construct data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The sort method (Distance Ascending = 1, Distance Descending = 2, Size Ascending = 3, Size Descending = 4, Threat Ascending = 5, Threat Descending = 6)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 359492,
                        "stop_char": 359525
                    },
                    {
                        "name": "setSortMethod",
                        "short_desc": "Sets the sort method for construct data",
                        "desc": "",
                        "params": [
                            {
                                "name": "method",
                                "desc": "The sort method (Distance Ascending = 1, Distance Descending = 2, Size Ascending = 3, Size Descending = 4, Threat Ascending = 5, Threat Descending = 6)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if the sort method was set successfully, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 359822,
                        "stop_char": 359861
                    },
                    {
                        "name": "getIdentifiedConstructIds",
                        "short_desc": "Returns the list of identified construct IDs",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The list of identified construct IDs",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 359966,
                        "stop_char": 360011
                    },
                    {
                        "name": "getConstructs",
                        "short_desc": "Returns the list of constructs in a given range according to the current sort method",
                        "desc": "",
                        "params": [
                            {
                                "name": "offset",
                                "desc": "Offset from the first entry",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "size",
                                "desc": "Total entries to return following the offset, 0 to return all entries",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The list of constructs tables {[integer] constructId, [string] name, [string] size, [string] constructType, [number] mass, [int] isIdentified, [int] inIdentifyRange, [number] identificationDuration, [number] remainingIdentificationTime, [int] myThreatStateToTarget, [int] targetThreatState, [number] distance, [table] worldPosition, [number] speed, [number] radialSpeed, [number] angularSpeed, [table] info}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 360673,
                        "stop_char": 360718
                    },
                    {
                        "name": "getTargetId",
                        "short_desc": "Returns the ID of the target construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The ID of the target construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 360813,
                        "stop_char": 360844
                    },
                    {
                        "name": "getConstructDistance",
                        "short_desc": "Returns the distance to the given construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The distance between the current and target construct center",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 361018,
                        "stop_char": 361060
                    },
                    {
                        "name": "isConstructIdentified",
                        "short_desc": "Returns 1 if the given construct is identified",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if the construct is identified, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 361223,
                        "stop_char": 361266
                    },
                    {
                        "name": "isConstructAbandoned",
                        "short_desc": "Returns 1 if the given construct was abandoned",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if the construct has no owner, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 361428,
                        "stop_char": 361470
                    },
                    {
                        "name": "getConstructCoreSize",
                        "short_desc": "Returns the core size of the given construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The core size name; can be 'XS', 'S', 'M', 'L', 'XL'",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 361637,
                        "stop_char": 361679
                    },
                    {
                        "name": "getThreatRateTo",
                        "short_desc": "Returns the threat rate your construct is for the given construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The threat rate index (None = 1, Identified = 2, Threatened and identified = 3, Threatened = 4, Attacked = 5), can be -1 if the radar is not operational",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 361968,
                        "stop_char": 362005
                    },
                    {
                        "name": "getThreatTo",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 362098,
                        "stop_char": 362129
                    },
                    {
                        "name": "getThreatRateFrom",
                        "short_desc": "Returns the threat rate the given construct is for your construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The threat rate index (None = 1, Identified = 2, Threatened and identified = 3, Threatened = 4, Attacked = 5), can be -1 if the radar is not operational",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 362417,
                        "stop_char": 362456
                    },
                    {
                        "name": "getThreatFrom",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 362553,
                        "stop_char": 362586
                    },
                    {
                        "name": "hasMatchingTransponder",
                        "short_desc": "Returns whether the target has an active Transponder with matching tags",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 362729,
                        "stop_char": 362773
                    },
                    {
                        "name": "getConstructOwnerEntity",
                        "short_desc": "Returns a table with id of the owner entity (player or organization) of the given construct, if in range and if active transponder tags match for owned dynamic constructs.",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "A table with fields {[int] id, [bool] isOrganization} describing the owner. Use system.getPlayerName(id) and system.getOrganization(id) to retrieve info about it",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 363175,
                        "stop_char": 363220
                    },
                    {
                        "name": "getConstructOwner",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 363327,
                        "stop_char": 363364
                    },
                    {
                        "name": "getConstructSize",
                        "short_desc": "Return the size of the bounding box of the given construct, if in range",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The size of the construct in xyz-coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 363549,
                        "stop_char": 363587
                    },
                    {
                        "name": "getConstructKind",
                        "short_desc": "Return the kind of the given construct",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The kind index of the construct (Universe = 1, Planet = 2,Asteroid = 3,Static = 4,Dynamic = 5,Space = 6,Alien = 7)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 363811,
                        "stop_char": 363849
                    },
                    {
                        "name": "getConstructType",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 363948,
                        "stop_char": 363984
                    },
                    {
                        "name": "getConstructPos",
                        "short_desc": "Returns the position of the given construct in construct local coordinates, if active transponder tags match for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The position of the construct center in local construct coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 364258,
                        "stop_char": 364295
                    },
                    {
                        "name": "getConstructWorldPos",
                        "short_desc": "Returns the position of the given construct in world coordinates, if in range and if active transponder tags match for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The position of the construct center in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 364565,
                        "stop_char": 364607
                    },
                    {
                        "name": "getConstructVelocity",
                        "short_desc": "Returns the velocity vector of the given construct in construct local coordinates, if identified and if active transponder tags match for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The velocity of the construct in local construct coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 364899,
                        "stop_char": 364941
                    },
                    {
                        "name": "getConstructWorldVelocity",
                        "short_desc": "Returns the velocity vector of the given construct in world coordinates, if identified and if active transponder tags match for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The velocity of the construct in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 365213,
                        "stop_char": 365260
                    },
                    {
                        "name": "getConstructMass",
                        "short_desc": "Returns the mass of the given construct, if identified for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The mass of the construct in kilograms",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 365452,
                        "stop_char": 365490
                    },
                    {
                        "name": "getConstructName",
                        "short_desc": "Return the name of the given construct, if defined",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The name of the construct",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 365636,
                        "stop_char": 365674
                    },
                    {
                        "name": "getConstructInfos",
                        "short_desc": "Returns a table of working elements on the given construction, if identified for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "A table with fields : {[float] weapons, [float] radars, [float] antiGravity, [float] atmoEngines, [float] spaceEngines, [float] rocketEngines} with values between 0.0 and 1.0. Exceptionally antiGravity and rocketEngines are always 1.0 if present, even if broken",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 366110,
                        "stop_char": 366149
                    },
                    {
                        "name": "getConstructSpeed",
                        "short_desc": "Returns the speed of the given construct, if identified for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The speed of the construct relative to the universe in meters per second",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 366376,
                        "stop_char": 366415
                    },
                    {
                        "name": "getConstructAngularSpeed",
                        "short_desc": "Returns the angular speed of the given construct to your construct, if identified for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The angular speed of the construct relative to our construct in radians per second",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 366678,
                        "stop_char": 366724
                    },
                    {
                        "name": "getConstructRadialSpeed",
                        "short_desc": "Returns the radial speed of the given construct to your construct, if identified for owned dynamic constructs",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the construct",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The radial speed of the construct relative to our construct in meters per second",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 366984,
                        "stop_char": 367029
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Receiver",
                "name_in_source": "Receiver",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 367757,
                        "stop_char": 367784
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 367956,
                        "stop_char": 367983
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 368092,
                        "stop_char": 368128
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 368198,
                        "stop_char": 368234
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 368321,
                        "stop_char": 368351
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 368426,
                        "stop_char": 368464
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 368555,
                        "stop_char": 368587
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 368655,
                        "stop_char": 368685
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 368772,
                        "stop_char": 368803
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 368893,
                        "stop_char": 368931
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 369079,
                        "stop_char": 369109
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 369264,
                        "stop_char": 369296
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 369385,
                        "stop_char": 369418
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 369500,
                        "stop_char": 369528
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 369681,
                        "stop_char": 369716
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 369826,
                        "stop_char": 369861
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 369955,
                        "stop_char": 369993
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 370143,
                        "stop_char": 370190
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 370314,
                        "stop_char": 370355
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 370505,
                        "stop_char": 370539
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 370657,
                        "stop_char": 370698
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 370877,
                        "stop_char": 370920
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 371087,
                        "stop_char": 371115
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 371288,
                        "stop_char": 371319
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 371496,
                        "stop_char": 371529
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 371676,
                        "stop_char": 371709
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 371862,
                        "stop_char": 371898
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 372055,
                        "stop_char": 372093
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 372734,
                        "stop_char": 372779
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 373419,
                        "stop_char": 373457
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 374098,
                        "stop_char": 374137
                    },
                    {
                        "name": "getRange",
                        "short_desc": "Returns the receiver range",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The range in metres",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 374208,
                        "stop_char": 374239
                    },
                    {
                        "name": "hasChannel",
                        "short_desc": "Checks if the given channel exists in the receiver channels list",
                        "desc": "",
                        "params": [
                            {
                                "name": "channel",
                                "desc": "The channels list as Lua table",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if the channels list contains the given channel",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 374435,
                        "stop_char": 374475
                    },
                    {
                        "name": "setChannelList",
                        "short_desc": "Set the channels list",
                        "desc": "",
                        "params": [
                            {
                                "name": "channels",
                                "desc": "The channels list as Lua table",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if the channels list has been successfully set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 374627,
                        "stop_char": 374672
                    },
                    {
                        "name": "setChannels",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 374782,
                        "stop_char": 374816
                    },
                    {
                        "name": "getChannelList",
                        "short_desc": "Returns the channels list",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The channels list as Lua table",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 374896,
                        "stop_char": 374933
                    },
                    {
                        "name": "getChannels",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 375027,
                        "stop_char": 375061
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "RenderScript",
                "name_in_source": "RenderScript",
                "methods": [
                    {
                        "name": "addBezier",
                        "short_desc": "Add a quadratic bezier curve to the given layer.",
                        "desc": "Supported properties: shadow, strokeColor, strokeWidth",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x1",
                                "desc": "X coordinate of the first point of the curve (the starting point)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y1",
                                "desc": "Y coordinate of the first point of the curve (the starting point)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x2",
                                "desc": "X coordinate of the second point of the curve (the control point)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y2",
                                "desc": "Y coordinate of the second point of the curve (the control point)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x3",
                                "desc": "X coordinate of the third point of the curve (the ending point)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y3",
                                "desc": "Y coordinate of the third point of the curve (the ending point)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 376074,
                        "stop_char": 376139
                    },
                    {
                        "name": "addBox",
                        "short_desc": "Add a box to the given layer.",
                        "desc": "Supported properties: fillColor, rotation, shadow, strokeColor, strokeWidth",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "X coordinate of the box's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Y coordinate of the box's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sx",
                                "desc": "Width of the box",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sy",
                                "desc": "Height of the box",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 376512,
                        "stop_char": 376564
                    },
                    {
                        "name": "addBoxRounded",
                        "short_desc": "Add a rounded box to the given layer.",
                        "desc": "Supported properties: fillColor, rotation, shadow, strokeColor, strokeWidth",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "X coordinate of the box's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Y coordinate of the box's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sx",
                                "desc": "Width of the box",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sy",
                                "desc": "Height of the box",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "r",
                                "desc": "Rounding radius of the box",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 376991,
                        "stop_char": 377053
                    },
                    {
                        "name": "addCircle",
                        "short_desc": "Add a circle to the given layer.",
                        "desc": "Supported properties: fillColor, shadow, strokeColor, strokeWidth",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "X coordinate of the circle's center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Y coordinate of the circle's center",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "r",
                                "desc": "Radius of the circle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 377372,
                        "stop_char": 377422
                    },
                    {
                        "name": "addImage",
                        "short_desc": "Add an image to the given layer.",
                        "desc": "Supported properties: fillColor, rotation",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "image",
                                "desc": "The id of the image to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "X coordinate of the image's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Y coordinate of the image's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sx",
                                "desc": "Width of the image",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sy",
                                "desc": "Height of the image",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 377823,
                        "stop_char": 377884
                    },
                    {
                        "name": "addImageSub",
                        "short_desc": "Add a sub-region of an image to the given layer.",
                        "desc": "Supported properties: fillColor, rotation",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "image",
                                "desc": "The id of the image to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "X coordinate of the image's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Y coordinate of the image's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sx",
                                "desc": "Width of the image",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sy",
                                "desc": "Height of the image",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "subX",
                                "desc": "X coordinate of the top-left corner of the sub-region to draw",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "subY",
                                "desc": "Y coordinate of the top-left corner of the sub-region to draw",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "subSx",
                                "desc": "Width of the sub-region within the image to draw",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "subSy",
                                "desc": "Height of the sub-region within the image to draw",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 378614,
                        "stop_char": 378704
                    },
                    {
                        "name": "addLine",
                        "short_desc": "Add a line to the given layer.",
                        "desc": "Supported properties: rotation, shadow, strokeColor, strokeWidth",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x1",
                                "desc": "X coordinate of the start of the line",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y1",
                                "desc": "Y coordinate of the start of the line",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x2",
                                "desc": "X coordinate of the end of the line",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y2",
                                "desc": "Y coordinate of the end of the line",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 379098,
                        "stop_char": 379153
                    },
                    {
                        "name": "addQuad",
                        "short_desc": "Add a quadrilateral to the given layer.",
                        "desc": "Supported properties: fillColor, rotation, shadow, strokeColor, strokeWidth",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x1",
                                "desc": "X coordinate of the first point of the quad",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y1",
                                "desc": "Y coordinate of the first point of the quad",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x2",
                                "desc": "X coordinate of the second point of the quad",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y2",
                                "desc": "Y coordinate of the second point of the quad",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x3",
                                "desc": "X coordinate of the third point of the quad",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y3",
                                "desc": "Y coordinate of the third point of the quad",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x4",
                                "desc": "X coordinate of the fourth point of the quad",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y4",
                                "desc": "Y coordinate of the fourth point of the quad",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 379855,
                        "stop_char": 379926
                    },
                    {
                        "name": "addText",
                        "short_desc": "Add a string of text to the given layer.",
                        "desc": "See setNextTextAlign for information on controlling text anchoring.\nSupported properties: fillColor, shadow, strokeColor, strokeWidth",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "font",
                                "desc": "The id of the font to use",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "text",
                                "desc": "The string of text to be added",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "X coordinate of the text anchor",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Y coordinate of the text anchor",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 380379,
                        "stop_char": 380436
                    },
                    {
                        "name": "addTriangle",
                        "short_desc": "Add a triangle to the given layer.",
                        "desc": "Supported properties: fillColor, rotation, shadow, strokeColor, strokeWidth",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The id of the layer to which to add",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x1",
                                "desc": "X coordinate of the first point of the triangle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y1",
                                "desc": "Y coordinate of the first point of the triangle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x2",
                                "desc": "X coordinate of the second point of the triangle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y2",
                                "desc": "Y coordinate of the second point of the triangle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x3",
                                "desc": "X coordinate of the third point of the triangle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y3",
                                "desc": "Y coordinate of the third point of the triangle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 381027,
                        "stop_char": 381094
                    },
                    {
                        "name": "createLayer",
                        "short_desc": "Create a new layer that will be rendered on top of all previously-created layers",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The id that can be used to uniquely identify the layer for use with other API functions",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 381288,
                        "stop_char": 381326
                    },
                    {
                        "name": "getAvailableFontCount",
                        "short_desc": "Return the number of fonts available to be used by render script",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The total number of fonts available",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 381452,
                        "stop_char": 381500
                    },
                    {
                        "name": "getAvailableFontName",
                        "short_desc": "Return the name of the nth available font",
                        "desc": "",
                        "params": [
                            {
                                "name": "index",
                                "desc": "A number between 1 and the return value of getAvailableFontCount",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The name of the font, which can be used with the loadFont function",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 381722,
                        "stop_char": 381774
                    },
                    {
                        "name": "getCursor",
                        "short_desc": "Return the screen location that is currently raycasted by the player",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "number y A tuple containing the (x, y) coordinates of the cursor, or (-1, -1) if the screen is not currently raycasted",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 381986,
                        "stop_char": 382022
                    },
                    {
                        "name": "getCursorDown",
                        "short_desc": "Return the status of the mouse button",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "True if the mouse cursor is currently pressed down on the screen, false otherwise",
                                "type": {
                                    "id": "boolean"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 382167,
                        "stop_char": 382207
                    },
                    {
                        "name": "getCursorPressed",
                        "short_desc": "Return the status of the mouse button",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "True if the mouse cursor has been pressed down on the screen at any time since the last script execution, false otherwise",
                                "type": {
                                    "id": "boolean"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 382392,
                        "stop_char": 382435
                    },
                    {
                        "name": "getCursorReleased",
                        "short_desc": "Return the status of the mouse button",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "True if the mouse cursor has been released on the screen at any time since the last script execution, false otherwise",
                                "type": {
                                    "id": "boolean"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 382616,
                        "stop_char": 382660
                    },
                    {
                        "name": "getDeltaTime",
                        "short_desc": "Return the time, in seconds, since the screen was last updated.",
                        "desc": "Useful for creating timing-based animations. Since screens are not guaranteed to be updated at any specific\ntime interval it is more reliable to update animations based on this timer than based on a frame counter.",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Time, in seconds, since the last screen update",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 383017,
                        "stop_char": 383056
                    },
                    {
                        "name": "getFontMetrics",
                        "short_desc": "Return informational metrics of a font",
                        "desc": "Can be used for advanced text layout, although setNextTextAlign is all that is needed in most use cases.",
                        "params": [
                            {
                                "name": "font",
                                "desc": "The font to query",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "number descender A tuple containing the maximal ascender and descender, respectively, of the given font",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 383373,
                        "stop_char": 383418
                    },
                    {
                        "name": "getFontSize",
                        "short_desc": "Return the currently-set size for the given font",
                        "desc": "",
                        "params": [
                            {
                                "name": "font",
                                "desc": "The font to query",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The font size in vertical pixels",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 383565,
                        "stop_char": 383607
                    },
                    {
                        "name": "getImageSize",
                        "short_desc": "Return the width and height of an image.",
                        "desc": "",
                        "params": [
                            {
                                "name": "image",
                                "desc": "The image to query",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "number height A tuple containing the width and height, respectively, of the image, or (0, 0) if the image is not yet loaded",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 383839,
                        "stop_char": 383883
                    },
                    {
                        "name": "getInput",
                        "short_desc": "Return the screen's current input string",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The input string, as set by the screen unit API function setScriptInput, or an empty string if there is no current input",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 384069,
                        "stop_char": 384104
                    },
                    {
                        "name": "getLocale",
                        "short_desc": "Return the locale in which the game is currently running",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The locale, currently one of \"en-US\", \"fr-FR\", or \"de-DE\"",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 384243,
                        "stop_char": 384279
                    },
                    {
                        "name": "getRenderCost",
                        "short_desc": "Return the current render cost of the script",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The cost of all rendering operations performed by the render script so far (at the time of the call to this function)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 384466,
                        "stop_char": 384506
                    },
                    {
                        "name": "getRenderCostMax",
                        "short_desc": "Return the current render cost limit",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The render cost limit. A script that exceeds this limit (in one execution) will not render correctly and will instead throw an error. Note that this value may change between version releases",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 384758,
                        "stop_char": 384801
                    },
                    {
                        "name": "getResolution",
                        "short_desc": "Return the screen's current resolution.",
                        "desc": "Ideally, your render scripts should be written to adapt to the resolution, as it may change in the future",
                        "params": [],
                        "returns": [
                            {
                                "desc": "integer height A tuple containing the (width, height) of the screen's render surface, in pixels",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 385072,
                        "stop_char": 385112
                    },
                    {
                        "name": "getTextBounds",
                        "short_desc": "Compute and return the bounding box of a text string rendered with a specific font",
                        "desc": "",
                        "params": [
                            {
                                "name": "font",
                                "desc": "The font with which to render",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "text",
                                "desc": "The text string to render",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "number height A tuple containing the width and height, respectively, of the bounding box",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 385409,
                        "stop_char": 385459
                    },
                    {
                        "name": "getTime",
                        "short_desc": "Return the time, in seconds, relative to the first execution",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Time, in seconds, since the render script started running",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 385602,
                        "stop_char": 385636
                    },
                    {
                        "name": "isImageLoaded",
                        "short_desc": "Return the load status of an image.",
                        "desc": "Note that render scripts will still render even when not all images are loaded (the call to addImage will\nsilently fail). You can use this function to do something else instead, such as draw a placeholder or\nloading bar while images load",
                        "params": [
                            {
                                "name": "image",
                                "desc": "The image to query",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "True if the image is fully loaded and ready to use, false otherwise",
                                "type": {
                                    "id": "boolean"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 386058,
                        "stop_char": 386103
                    },
                    {
                        "name": "loadImage",
                        "short_desc": "Load an image to be used with addImage from the given URL",
                        "desc": "",
                        "params": [
                            {
                                "name": "url",
                                "desc": "The URL of the image to be loaded; Novaquark CDN restrictions apply as usual",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The id that can be used to uniquely identify the image for use with other API functions",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 386372,
                        "stop_char": 386411
                    },
                    {
                        "name": "loadFont",
                        "short_desc": "Load a font to be used with addText",
                        "desc": "",
                        "params": [
                            {
                                "name": "name",
                                "desc": "The name of the font to load; see the font list section for available font names",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "size",
                                "desc": "The size, in vertical pixels, at which the font will render. Note that this size can be changed during script execution with the setFontSize function",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The id that can be used to uniquely identify the font for use with other API functions",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 386835,
                        "stop_char": 386880
                    },
                    {
                        "name": "logMessage",
                        "short_desc": "Log a message for debugging purposes. If the \"enable output in Lua channel\" box is",
                        "desc": "checked on the editor panel for the given screen, the message will be displayed in the Lua channel,\notherwise, this function does nothing. The checkbox is off by default, so you must explicitly enable this on\na screen to see debug output",
                        "params": [
                            {
                                "name": "message",
                                "desc": "The message to log, as a string",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 387276,
                        "stop_char": 387320
                    },
                    {
                        "name": "requestAnimationFrame",
                        "short_desc": "Request that this screen should be redrawn in a certain number of frames.",
                        "desc": "A screen that requires highly-fluid animations should call requestAnimationFrame(1) before it returns.\nUsage of this function has a significant performance impact on the screen unit system, so scripts should\ntry to request updates as infrequently as possible.\nA screen with unchanging (static) contents should not call this function at all.",
                        "params": [
                            {
                                "name": "frames",
                                "desc": "The (approximate) number of frames after which the render script will run again and the screen will be redrawn",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 387893,
                        "stop_char": 387947
                    },
                    {
                        "name": "setBackgroundColor",
                        "short_desc": "Set the background color of the screen",
                        "desc": "",
                        "params": [
                            {
                                "name": "r",
                                "desc": "Red component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "g",
                                "desc": "Green component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "Blue component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 388145,
                        "stop_char": 388197
                    },
                    {
                        "name": "setDefaultFillColor",
                        "short_desc": "Set the default fill color for all subsequent shapes of the given type added to the given layer",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the default will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "shapeType",
                                "desc": "The type of shape to which the default will apply",
                                "type": {
                                    "id": "custom",
                                    "name": "ShapeType"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "r",
                                "desc": "Red component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "g",
                                "desc": "Green component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "Blue component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "a",
                                "desc": "Alpha component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 388652,
                        "stop_char": 388726
                    },
                    {
                        "name": "setDefaultRotation",
                        "short_desc": "Set the default rotation for all subsequent shapes of the given type added to the given layer",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the default will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "shapeType",
                                "desc": "The type of shape to which the default will apply",
                                "type": {
                                    "id": "custom",
                                    "name": "ShapeType"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "rotation",
                                "desc": "Rotation, in radians; positive is counter-clockwise, negative is clockwise",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 389075,
                        "stop_char": 389146
                    },
                    {
                        "name": "setDefaultShadow",
                        "short_desc": "Set the default shadow for all subsequent shapes of the given type added to the given layer",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the default will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "shapeType",
                                "desc": "The type of shape to which the default will apply",
                                "type": {
                                    "id": "custom",
                                    "name": "ShapeType"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "radius",
                                "desc": "The distance that the shadow extends from the shape's border",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "r",
                                "desc": "Red component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "g",
                                "desc": "Green component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "Blue component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "a",
                                "desc": "Alpha component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 389682,
                        "stop_char": 389761
                    },
                    {
                        "name": "setDefaultStrokeColor",
                        "short_desc": "Set the default stroke color for all subsequent shapes of the given type added to the given layer",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the default will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "shapeType",
                                "desc": "The type of shape to which the default will apply",
                                "type": {
                                    "id": "custom",
                                    "name": "ShapeType"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "r",
                                "desc": "Red component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "g",
                                "desc": "Green component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "Blue component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "a",
                                "desc": "Alpha component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 390218,
                        "stop_char": 390294
                    },
                    {
                        "name": "setDefaultStrokeWidth",
                        "short_desc": "Set the default stroke width for all subsequent shapes of the given type added to the given layer",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the default will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "shapeType",
                                "desc": "The type of shape to which the default will apply",
                                "type": {
                                    "id": "custom",
                                    "name": "ShapeType"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "strokeWidth",
                                "desc": "Stroke width, in pixels",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 390599,
                        "stop_char": 390676
                    },
                    {
                        "name": "setDefaultTextAlign",
                        "short_desc": "Set the default text alignment of all subsequent text strings on the given layer",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the default will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "alignH",
                                "desc": "Specifies the horizontal anchoring of a text string relative to the draw coordinates; must be one of the following built-in constants: AlignH_Left, AlignH_Center, AlignH_Right",
                                "type": {
                                    "id": "custom",
                                    "name": "AlignH"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "alignV",
                                "desc": "Specifies the vertical anchoring of a text string relative to the draw coordinates; must be one of the following built-in constants: AlignV_Ascender, AlignV_Top, AlignV_Middle, AlignV_Baseline, AlignV_Bottom, AlignV_Descender",
                                "type": {
                                    "id": "custom",
                                    "name": "AlignV"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 391281,
                        "stop_char": 391348
                    },
                    {
                        "name": "setFontSize",
                        "short_desc": "Set the size at which a font will render.",
                        "desc": "Impacts all subsequent font-related calls, including addText, getFontMetrics, and getTextBounds.",
                        "params": [
                            {
                                "name": "font",
                                "desc": "The font for which the size will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "size",
                                "desc": "The new size, in vertical pixels, at which the font will render",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 391647,
                        "stop_char": 391695
                    },
                    {
                        "name": "setLayerClipRect",
                        "short_desc": "Set a clipping rectangle applied to the layer as a whole.",
                        "desc": "Layer contents that fall outside the clipping rectangle will not be rendered, and those that are\npartially within the rectangle will be 'clipped' against it. The clipping rectangle is applied\nbefore layer transformations. Note that clipped contents still count toward the render cost.",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the clipping rectangle will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "X coordinate of the clipping rectangle's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Y coordinate of the clipping rectangle's top-left corner",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sx",
                                "desc": "Width of the clipping rectangle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sy",
                                "desc": "Height of the clipping rectangle",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 392392,
                        "stop_char": 392454
                    },
                    {
                        "name": "setLayerOrigin",
                        "short_desc": "Set the transform origin of a layer; layer scaling and rotation are applied relative to this origin",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the origin will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "X coordinate of the layer's transform origin",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Y coordinate of the layer's transform origin",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 392755,
                        "stop_char": 392807
                    },
                    {
                        "name": "setLayerRotation",
                        "short_desc": "Set a rotation applied to the layer as a whole, relative to the layer's transform origin",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the rotation will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "rotation",
                                "desc": "Rotation, in radians; positive is counter-clockwise, negative is clockwise",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 393072,
                        "stop_char": 393130
                    },
                    {
                        "name": "setLayerScale",
                        "short_desc": "Set a scale factor applied to the layer as a whole, relative to the layer's transform origin.",
                        "desc": "Scale factors are multiplicative, so that a scale >1 enlarges the size of the layer, 1.0 does nothing, and\n<1 reduces the size of the layer.",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the scale factor will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sx",
                                "desc": "Scale factor along the X axis",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "sy",
                                "desc": "Scale factor along the Y axis",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 393552,
                        "stop_char": 393605
                    },
                    {
                        "name": "setLayerTranslation",
                        "short_desc": "Set a translation applied to the layer as a whole",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer for which the translation will be set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "tx",
                                "desc": "Translation along the X axis",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ty",
                                "desc": "Translation along the Y axis",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 393831,
                        "stop_char": 393890
                    },
                    {
                        "name": "setNextFillColor",
                        "short_desc": "Set the fill color of the next rendered shape on the given layer; has no effect on shapes that do not support a fill color",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer to which this property applies",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "r",
                                "desc": "Red component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "g",
                                "desc": "Green component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "Blue component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "a",
                                "desc": "Alpha component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 394289,
                        "stop_char": 394349
                    },
                    {
                        "name": "setNextRotation",
                        "short_desc": "Set the rotation of the next rendered shape on the given layer; has no effect on shapes that do not support rotation",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer to which this property applies",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "rotation",
                                "desc": "Rotation, in radians; positive is counter-clockwise, negative is clockwise",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 394638,
                        "stop_char": 394695
                    },
                    {
                        "name": "setNextRotationDegrees",
                        "short_desc": "Set the rotation of the next rendered shape on the given layer; has no effect on shapes that do not support rotation",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer to which this property applies",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "rotation",
                                "desc": "Rotation, in degrees; positive is counter-clockwise, negative is clockwise",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 394984,
                        "stop_char": 395048
                    },
                    {
                        "name": "setNextShadow",
                        "short_desc": "Set the shadow of the next rendered shape on the given layer; has no effect on shapes that do not support a shadow",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer to which this property applies",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "radius",
                                "desc": "The distance that the shadow extends from the shape's border",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "r",
                                "desc": "Red component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "g",
                                "desc": "Green component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "Blue component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "a",
                                "desc": "Alpha component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 395524,
                        "stop_char": 395589
                    },
                    {
                        "name": "setNextStrokeColor",
                        "short_desc": "Set the stroke color of the next rendered shape on the given layer; has no effect on shapes that do not support a stroke color",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer to which this property applies",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "r",
                                "desc": "Red component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "g",
                                "desc": "Green component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "b",
                                "desc": "Blue component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "a",
                                "desc": "Alpha component, between 0 and 1",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 395992,
                        "stop_char": 396054
                    },
                    {
                        "name": "setNextStrokeWidth",
                        "short_desc": "Set the stroke width of the next rendered shape on the given layer; has no effect on shapes that do not support a stroke width",
                        "desc": "",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer to which this property applies",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "strokeWidth",
                                "desc": "Stroke width, in pixels",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 396305,
                        "stop_char": 396368
                    },
                    {
                        "name": "setNextTextAlign",
                        "short_desc": "Set the text alignment of the next rendered text string on the given layer.",
                        "desc": "By default, text is anchored horizontally on the left, and vertically on the baseline",
                        "params": [
                            {
                                "name": "layer",
                                "desc": "The layer to which this property applies",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "alignH",
                                "desc": "Specifies the horizontal anchoring of a text string relative to the draw coordinates; must be one of the following built-in constants: AlignH_Left, AlignH_Center, AlignH_Right",
                                "type": {
                                    "id": "custom",
                                    "name": "AlignH"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "alignV",
                                "desc": "Specifies the vertical anchoring of a text string relative to the draw coordinates; must be one of the following built-in constants: AlignV_Ascender, AlignV_Top, AlignV_Middle, AlignV_Baseline, AlignV_Bottom, AlignV_Descender",
                                "type": {
                                    "id": "custom",
                                    "name": "AlignV"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 397055,
                        "stop_char": 397119
                    },
                    {
                        "name": "setOutput",
                        "short_desc": "Set the script's output string, which can be retrieved via a programming board with the screen unit API function getScriptOutput",
                        "desc": "",
                        "params": [
                            {
                                "name": "output",
                                "desc": "The output string",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 397296,
                        "stop_char": 397338
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "RocketEngine",
                "name_in_source": "RocketEngine",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 397561,
                        "stop_char": 397592
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 397768,
                        "stop_char": 397799
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 397908,
                        "stop_char": 397948
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 398018,
                        "stop_char": 398058
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 398145,
                        "stop_char": 398179
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 398254,
                        "stop_char": 398296
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 398387,
                        "stop_char": 398423
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 398491,
                        "stop_char": 398525
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 398612,
                        "stop_char": 398647
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 398737,
                        "stop_char": 398779
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 398927,
                        "stop_char": 398961
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 399116,
                        "stop_char": 399152
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 399241,
                        "stop_char": 399278
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 399360,
                        "stop_char": 399392
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 399545,
                        "stop_char": 399584
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 399694,
                        "stop_char": 399733
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 399827,
                        "stop_char": 399869
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 400019,
                        "stop_char": 400070
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 400194,
                        "stop_char": 400239
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 400389,
                        "stop_char": 400427
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 400545,
                        "stop_char": 400590
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 400769,
                        "stop_char": 400816
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 400983,
                        "stop_char": 401015
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 401188,
                        "stop_char": 401223
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 401400,
                        "stop_char": 401437
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 401584,
                        "stop_char": 401621
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 401774,
                        "stop_char": 401814
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 401971,
                        "stop_char": 402013
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 402654,
                        "stop_char": 402703
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 403343,
                        "stop_char": 403385
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 404026,
                        "stop_char": 404069
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 404319,
                        "stop_char": 404366
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 404457,
                        "stop_char": 404491
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 404638,
                        "stop_char": 404684
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 404797,
                        "stop_char": 404838
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the engine is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the engine is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 405176,
                        "stop_char": 405211
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 405296,
                        "stop_char": 405331
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The engine thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 405521,
                        "stop_char": 405563
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The thrust of the engine is currently delivering in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 405688,
                        "stop_char": 405724
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 405869,
                        "stop_char": 405908
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 406005,
                        "stop_char": 406048
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the engine can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current minimal engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 406472,
                        "stop_char": 406518
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 406618,
                        "stop_char": 406657
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the engine can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the engine",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current maximum engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 407009,
                        "stop_char": 407055
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be lower for certain engines",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 407210,
                        "stop_char": 407259
                    },
                    {
                        "name": "isTorqueEnabled",
                        "short_desc": "Checks if the torque generation is enabled on the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the torque is enabled on the engine",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 407382,
                        "stop_char": 407424
                    },
                    {
                        "name": "enableTorque",
                        "short_desc": "Sets the torque generation state on the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": "",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 407502,
                        "stop_char": 407546
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the engine thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 407702,
                        "stop_char": 407742
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the engine torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 407881,
                        "stop_char": 407921
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the engine exhaust thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 408065,
                        "stop_char": 408110
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 408207,
                        "stop_char": 408244
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the engine torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 408363,
                        "stop_char": 408408
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 408505,
                        "stop_char": 408542
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "Checks if the engine out of fuel",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when there is no fuel left, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 408642,
                        "stop_char": 408680
                    },
                    {
                        "name": "getFuelId",
                        "short_desc": "Returns the item ID of the fuel currently used by the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the fuel currently used",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 408805,
                        "stop_char": 408841
                    },
                    {
                        "name": "getFuelTankId",
                        "short_desc": "Returns the local ID of the fueltank linked to the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local ID of the fueltank",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 408953,
                        "stop_char": 408993
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "Checks if the engine linked to a functional Fuel Tank (not broken or colliding)?",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the linked tank is functional, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 409149,
                        "stop_char": 409197
                    },
                    {
                        "name": "hasBrokenFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 409304,
                        "stop_char": 409348
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "Returns the engine fuel consumption rate per newton of thrust delivered per second",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current rate of fuel consumption in m\u0412\u0456/(N.s)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 409505,
                        "stop_char": 409550
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "Returns the ratio between the current fuel rate and the theoretical nominal fuel rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be higher for certain engines at certain speeds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 409726,
                        "stop_char": 409774
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "Returns the current fuel consumption rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The rate of fuel consumption in m3/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 409877,
                        "stop_char": 409922
                    },
                    {
                        "name": "getWarmupTime",
                        "short_desc": "Returns the T50; the time needed for the engine to reach 50% of its maximal thrust (all engines",
                        "desc": "do not instantly reach the thrust that is set for them, but they can take time to \"warm up\" to\nthe final value)",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time to half thrust in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 410197,
                        "stop_char": 410237
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 410325,
                        "stop_char": 410358
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 410417,
                        "stop_char": 410455
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Screen",
                "name_in_source": "Screen",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 410660,
                        "stop_char": 410685
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 410855,
                        "stop_char": 410880
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 410989,
                        "stop_char": 411023
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 411093,
                        "stop_char": 411127
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 411214,
                        "stop_char": 411242
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 411317,
                        "stop_char": 411353
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 411444,
                        "stop_char": 411474
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 411542,
                        "stop_char": 411570
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 411657,
                        "stop_char": 411686
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 411776,
                        "stop_char": 411812
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 411960,
                        "stop_char": 411988
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 412143,
                        "stop_char": 412173
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 412262,
                        "stop_char": 412293
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 412375,
                        "stop_char": 412401
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 412554,
                        "stop_char": 412587
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 412697,
                        "stop_char": 412730
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 412824,
                        "stop_char": 412860
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 413010,
                        "stop_char": 413055
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 413179,
                        "stop_char": 413218
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 413368,
                        "stop_char": 413400
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 413518,
                        "stop_char": 413557
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 413736,
                        "stop_char": 413777
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 413944,
                        "stop_char": 413970
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 414143,
                        "stop_char": 414172
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 414349,
                        "stop_char": 414380
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 414527,
                        "stop_char": 414558
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 414711,
                        "stop_char": 414745
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 414902,
                        "stop_char": 414938
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 415579,
                        "stop_char": 415622
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 416262,
                        "stop_char": 416298
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 416939,
                        "stop_char": 416976
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the screen is on",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the screen is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 417163,
                        "stop_char": 417192
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 417273,
                        "stop_char": 417302
                    },
                    {
                        "name": "addText",
                        "short_desc": "Displays the given text at the given coordinates in the screen, and returns an ID to move it later",
                        "desc": "",
                        "params": [
                            {
                                "name": "x",
                                "desc": "Horizontal position, as a percentage (between 0 and 100) of the screen width",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Vertical position, as a percentage (between 0 and 100) of the screen height",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "fontSize",
                                "desc": "Text font size, as a percentage of the screen width",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "text",
                                "desc": "The text to display",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "An integer ID that can be used later to update/remove the added Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 417874,
                        "stop_char": 417922
                    },
                    {
                        "name": "setCenteredText",
                        "short_desc": "Displays the given text centered in the screen with a font to maximize its visibility",
                        "desc": "",
                        "params": [
                            {
                                "name": "text",
                                "desc": "The text to display",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 418056,
                        "stop_char": 418096
                    },
                    {
                        "name": "setHTML",
                        "short_desc": "Set the whole screen HTML content (overrides anything already set)",
                        "desc": "",
                        "params": [
                            {
                                "name": "html",
                                "desc": "The HTML content to display",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 418219,
                        "stop_char": 418251
                    },
                    {
                        "name": "setRenderScript",
                        "short_desc": "Set the screen render script, switching the screen to native rendering mode",
                        "desc": "",
                        "params": [
                            {
                                "name": "script",
                                "desc": "The Lua render script",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 418379,
                        "stop_char": 418421
                    },
                    {
                        "name": "setScriptInput",
                        "short_desc": "Defines the input of the screen rendering script, which will be automatically defined during the execution of Lua",
                        "desc": "",
                        "params": [
                            {
                                "name": "input",
                                "desc": "A string that can be retrieved by calling getInput in a render script",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 418634,
                        "stop_char": 418674
                    },
                    {
                        "name": "getScriptOutput",
                        "short_desc": "Get the screen render script output",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The contents of the last render script setOutput call, or an empty string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 418908,
                        "stop_char": 418944
                    },
                    {
                        "name": "addContent",
                        "short_desc": "Displays the given HTML content at the given coordinates in the screen, and returns an ID to move it later",
                        "desc": "",
                        "params": [
                            {
                                "name": "x",
                                "desc": "Horizontal position, as a percentage (between 0 and 100) of the screen width",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Vertical position, as a percentage (between 0 and 100) of the screen height",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "html",
                                "desc": "The HTML content to display, which can contain SVG html elements to make drawings",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "An integer ID that can be used later to update/remove the added Element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 419443,
                        "stop_char": 419484
                    },
                    {
                        "name": "setSVG",
                        "short_desc": "Displays SVG code (anything that fits within a <svg> section), which overrides any preexisting content",
                        "desc": "",
                        "params": [
                            {
                                "name": "svg",
                                "desc": "The SVG content to display, which fits inside a 1920x1080 canvas",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 419679,
                        "stop_char": 419709
                    },
                    {
                        "name": "resetContent",
                        "short_desc": "Update the html element with the given ID (returned by addContent) with a new HTML content",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "An integer ID that is used to identify the html element in the screen. Methods such as addContent return the ID that you can store to use later here",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "html",
                                "desc": "The HTML content to display, which can contain SVG html elements to make drawings",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 420080,
                        "stop_char": 420121
                    },
                    {
                        "name": "deleteContent",
                        "short_desc": "Delete the html element with the given ID (returned by addContent)",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "An integer ID that is used to identify the html element in the screen. Methods such as addContent return the id that you can store to use later here",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 420364,
                        "stop_char": 420400
                    },
                    {
                        "name": "showContent",
                        "short_desc": "Update the visibility of the html element with the given ID (returned by addContent)",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "An integer ID that is used to identify the html element in the screen. Methods such as addContent return the ID that you can store to use later here",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "true to show the content, false to hide",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 420725,
                        "stop_char": 420766
                    },
                    {
                        "name": "moveContent",
                        "short_desc": "Move the html element with the given id (returned by addContent) to a new position in the screen",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "An integer id that is used to identify the html element in the screen. Methods such as addContent return the ID that you can store to use later here",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "x",
                                "desc": "Horizontal position, as a percentage (between 0 and 100) of the screen width",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "y",
                                "desc": "Vertical position, as a percentage (between 0 and 100) of the screen height",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 421230,
                        "stop_char": 421270
                    },
                    {
                        "name": "getMouseX",
                        "short_desc": "Returns the x-coordinate of the position point at in the screen",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The x-position as a percentage (between 0 and 1) of screen width; -1 if nothing is point at",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 421450,
                        "stop_char": 421480
                    },
                    {
                        "name": "getMouseY",
                        "short_desc": "Returns the y-coordinate of the position point at in the screen",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The y-position as a percentage (between 0 and 1) of screen height; -1 if nothing is point at",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 421661,
                        "stop_char": 421691
                    },
                    {
                        "name": "getMouseState",
                        "short_desc": "Returns the state of the mouse click",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the mouse is pressed, otherwise 0",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 421790,
                        "stop_char": 421824
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "ShieldGenerator",
                "name_in_source": "ShieldGenerator",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 422950,
                        "stop_char": 422984
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 423163,
                        "stop_char": 423197
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 423306,
                        "stop_char": 423349
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 423419,
                        "stop_char": 423462
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 423549,
                        "stop_char": 423586
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 423661,
                        "stop_char": 423706
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 423797,
                        "stop_char": 423836
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 423904,
                        "stop_char": 423941
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 424028,
                        "stop_char": 424066
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 424156,
                        "stop_char": 424201
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 424349,
                        "stop_char": 424386
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 424541,
                        "stop_char": 424580
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 424669,
                        "stop_char": 424709
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 424791,
                        "stop_char": 424826
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 424979,
                        "stop_char": 425021
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 425131,
                        "stop_char": 425173
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 425267,
                        "stop_char": 425312
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 425462,
                        "stop_char": 425516
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 425640,
                        "stop_char": 425688
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 425838,
                        "stop_char": 425879
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 425997,
                        "stop_char": 426045
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 426224,
                        "stop_char": 426274
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 426441,
                        "stop_char": 426476
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 426649,
                        "stop_char": 426687
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 426864,
                        "stop_char": 426904
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 427051,
                        "stop_char": 427091
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 427244,
                        "stop_char": 427287
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 427444,
                        "stop_char": 427489
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 428130,
                        "stop_char": 428182
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 428822,
                        "stop_char": 428867
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 429508,
                        "stop_char": 429554
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Returns the activation state of the shield",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the shield is active, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 429868,
                        "stop_char": 429906
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 430005,
                        "stop_char": 430043
                    },
                    {
                        "name": "getShieldHitpoints",
                        "short_desc": "Returns the current hitpoints of the shield",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current hitpoints of the shield",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 430147,
                        "stop_char": 430195
                    },
                    {
                        "name": "getMaxShieldHitpoints",
                        "short_desc": "Returns the maximal hitpoints of the shield",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximal hitpoints of the shield",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 430299,
                        "stop_char": 430350
                    },
                    {
                        "name": "startVenting",
                        "short_desc": "Activate shield venting to restore hit points",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if venting started, 0 if an error occurred",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 430466,
                        "stop_char": 430508
                    },
                    {
                        "name": "stopVenting",
                        "short_desc": "Stop shield venting",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if venting stopped, 0 if an error occurred",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 430598,
                        "stop_char": 430639
                    },
                    {
                        "name": "isVenting",
                        "short_desc": "Check whether venting is in progress",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if venting is ongoing, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 430738,
                        "stop_char": 430777
                    },
                    {
                        "name": "getVentingCooldown",
                        "short_desc": "Returns time after which venting is possible again",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Remaining seconds of the venting cooldown",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 430894,
                        "stop_char": 430942
                    },
                    {
                        "name": "getVentingMaxCooldown",
                        "short_desc": "Returns maximal cooldown between venting",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Maximal seconds of the venting cooldown",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 431047,
                        "stop_char": 431098
                    },
                    {
                        "name": "getResistances",
                        "short_desc": "Returns distribution of resistance pool over resistance types",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Resistance to damage type {antimatter, electromagnetic, kinetic, thermic}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 431257,
                        "stop_char": 431301
                    },
                    {
                        "name": "setResistances",
                        "short_desc": "Distribute the resistance pool according to damage type",
                        "desc": "",
                        "params": [
                            {
                                "name": "antimatter",
                                "desc": "Antimatter damage resistance",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "electromagnetic",
                                "desc": "Electromagnetic damage resistance",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "kinetic",
                                "desc": "Kinetic damage resistance",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "thermic",
                                "desc": "Thermic damage resistance",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if resistance was distributed, 0 if an error occurred",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 431664,
                        "stop_char": 431753
                    },
                    {
                        "name": "getResistancesCooldown",
                        "short_desc": "Returns time after which adjusting resistances is possible again",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Remaining time of the resistance cooldown in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 431895,
                        "stop_char": 431947
                    },
                    {
                        "name": "getResistancesMaxCooldown",
                        "short_desc": "Returns maximal cooldown between adjusting resistances",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum time of the resistance cooldown in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 432081,
                        "stop_char": 432136
                    },
                    {
                        "name": "getResistancesPool",
                        "short_desc": "Returns total resistance pool that may be distributed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Total pool of resistances",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 432240,
                        "stop_char": 432288
                    },
                    {
                        "name": "getResistancesRemaining",
                        "short_desc": "Returns the remaining amount of the resistance pool that can be distributed",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Remaining resistance pool",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 432414,
                        "stop_char": 432467
                    },
                    {
                        "name": "getStressRatio",
                        "short_desc": "Returns ratio per damage type of recent weapon impacts after applying resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Stress ratio due to damage type {antimatter, electromagnetic, kinetic, thermic}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 432651,
                        "stop_char": 432695
                    },
                    {
                        "name": "getStressRatioRaw",
                        "short_desc": "Returns ratio per damage type of recent weapon impacts without resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Stress ratio due to damage type {antimatter, electromagnetic, kinetic, thermic}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 432872,
                        "stop_char": 432919
                    },
                    {
                        "name": "getStressHitpoints",
                        "short_desc": "Returns stress, that is the total hitpoints of recent weapon impacts after applying resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Total stress hitpoints due to recent weapon impacts",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 433090,
                        "stop_char": 433138
                    },
                    {
                        "name": "getStressHitpointsRaw",
                        "short_desc": "Returns stress, that is the total hitpoints of recent weapon impacts without resistance",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Total stress hitpoints due to recent weapon impacts",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 433302,
                        "stop_char": 433353
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "SpaceBrake",
                "name_in_source": "SpaceBrake",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 434763,
                        "stop_char": 434792
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 434966,
                        "stop_char": 434995
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 435104,
                        "stop_char": 435142
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 435212,
                        "stop_char": 435250
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 435337,
                        "stop_char": 435369
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 435444,
                        "stop_char": 435484
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 435575,
                        "stop_char": 435609
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 435677,
                        "stop_char": 435709
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 435796,
                        "stop_char": 435829
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 435919,
                        "stop_char": 435959
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 436107,
                        "stop_char": 436139
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 436294,
                        "stop_char": 436328
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 436417,
                        "stop_char": 436452
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 436534,
                        "stop_char": 436564
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 436717,
                        "stop_char": 436754
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 436864,
                        "stop_char": 436901
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 436995,
                        "stop_char": 437035
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 437185,
                        "stop_char": 437234
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 437358,
                        "stop_char": 437401
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 437551,
                        "stop_char": 437587
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 437705,
                        "stop_char": 437748
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 437927,
                        "stop_char": 437972
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 438139,
                        "stop_char": 438169
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 438342,
                        "stop_char": 438375
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 438552,
                        "stop_char": 438587
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 438734,
                        "stop_char": 438769
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 438922,
                        "stop_char": 438960
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 439117,
                        "stop_char": 439157
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 439798,
                        "stop_char": 439845
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 440485,
                        "stop_char": 440525
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 441166,
                        "stop_char": 441207
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 441457,
                        "stop_char": 441502
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 441593,
                        "stop_char": 441625
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 441772,
                        "stop_char": 441816
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 441929,
                        "stop_char": 441968
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the brake is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 442276,
                        "stop_char": 442309
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 442392,
                        "stop_char": 442425
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the brake. Note that brakes can generate a force only in the movement opposite direction",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The brake thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 442689,
                        "stop_char": 442729
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the brake",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 442794,
                        "stop_char": 442828
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 442971,
                        "stop_char": 443008
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 443103,
                        "stop_char": 443144
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the brake can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 443523,
                        "stop_char": 443567
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 443665,
                        "stop_char": 443702
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the brake can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the brake",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444008,
                        "stop_char": 444052
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444161,
                        "stop_char": 444208
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the brake thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444298,
                        "stop_char": 444336
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the brake thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444416,
                        "stop_char": 444459
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444554,
                        "stop_char": 444589
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444647,
                        "stop_char": 444683
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444751,
                        "stop_char": 444797
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444862,
                        "stop_char": 444905
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 444973,
                        "stop_char": 445019
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 445084,
                        "stop_char": 445127
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 445185,
                        "stop_char": 445221
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 445274,
                        "stop_char": 445305
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 445362,
                        "stop_char": 445397
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "SpaceEngine",
                "name_in_source": "SpaceEngine",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 445617,
                        "stop_char": 445647
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 445822,
                        "stop_char": 445852
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 445961,
                        "stop_char": 446000
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 446070,
                        "stop_char": 446109
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 446196,
                        "stop_char": 446229
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 446304,
                        "stop_char": 446345
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 446436,
                        "stop_char": 446471
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 446539,
                        "stop_char": 446572
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 446659,
                        "stop_char": 446693
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 446783,
                        "stop_char": 446824
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 446972,
                        "stop_char": 447005
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 447160,
                        "stop_char": 447195
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 447284,
                        "stop_char": 447320
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 447402,
                        "stop_char": 447433
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 447586,
                        "stop_char": 447624
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 447734,
                        "stop_char": 447772
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 447866,
                        "stop_char": 447907
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 448057,
                        "stop_char": 448107
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 448231,
                        "stop_char": 448275
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 448425,
                        "stop_char": 448462
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 448580,
                        "stop_char": 448624
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 448803,
                        "stop_char": 448849
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 449016,
                        "stop_char": 449047
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 449220,
                        "stop_char": 449254
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 449431,
                        "stop_char": 449467
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 449614,
                        "stop_char": 449650
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 449803,
                        "stop_char": 449842
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 449999,
                        "stop_char": 450040
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 450681,
                        "stop_char": 450729
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 451369,
                        "stop_char": 451410
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 452051,
                        "stop_char": 452093
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 452343,
                        "stop_char": 452389
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 452480,
                        "stop_char": 452513
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 452660,
                        "stop_char": 452705
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 452818,
                        "stop_char": 452858
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the engine is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the engine is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 453194,
                        "stop_char": 453228
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 453313,
                        "stop_char": 453347
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The engine thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 453536,
                        "stop_char": 453577
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The thrust of the engine is currently delivering in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 453702,
                        "stop_char": 453737
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 453882,
                        "stop_char": 453920
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 454017,
                        "stop_char": 454059
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the engine can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current minimal engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 454483,
                        "stop_char": 454528
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 454628,
                        "stop_char": 454666
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the engine can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the engine",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current maximum engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 455018,
                        "stop_char": 455063
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be lower for certain engines",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 455218,
                        "stop_char": 455266
                    },
                    {
                        "name": "isTorqueEnabled",
                        "short_desc": "Checks if the torque generation is enabled on the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the torque is enabled on the engine",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 455389,
                        "stop_char": 455430
                    },
                    {
                        "name": "enableTorque",
                        "short_desc": "Sets the torque generation state on the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": "",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 455508,
                        "stop_char": 455551
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the engine thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 455707,
                        "stop_char": 455746
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the engine torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 455885,
                        "stop_char": 455924
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the engine exhaust thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 456068,
                        "stop_char": 456112
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 456209,
                        "stop_char": 456245
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the engine torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 456364,
                        "stop_char": 456408
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 456505,
                        "stop_char": 456541
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "Checks if the engine out of fuel",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when there is no fuel left, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 456641,
                        "stop_char": 456678
                    },
                    {
                        "name": "getFuelId",
                        "short_desc": "Returns the item ID of the fuel currently used by the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the fuel currently used",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 456803,
                        "stop_char": 456838
                    },
                    {
                        "name": "getFuelTankId",
                        "short_desc": "Returns the local ID of the fueltank linked to the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local ID of the fueltank",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 456950,
                        "stop_char": 456989
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "Checks if the engine linked to a functional Fuel Tank (not broken or colliding)?",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the linked tank is functional, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 457145,
                        "stop_char": 457192
                    },
                    {
                        "name": "hasBrokenFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 457299,
                        "stop_char": 457342
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "Returns the engine fuel consumption rate per newton of thrust delivered per second",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current rate of fuel consumption in m\u0412\u0456/(N.s)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 457499,
                        "stop_char": 457543
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "Returns the ratio between the current fuel rate and the theoretical nominal fuel rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be higher for certain engines at certain speeds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 457719,
                        "stop_char": 457766
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "Returns the current fuel consumption rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The rate of fuel consumption in m3/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 457869,
                        "stop_char": 457913
                    },
                    {
                        "name": "getWarmupTime",
                        "short_desc": "Returns the T50; the time needed for the engine to reach 50% of its maximal thrust (all engines",
                        "desc": "do not instantly reach the thrust that is set for them, but they can take time to \"warm up\" to\nthe final value)",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time to half thrust in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 458188,
                        "stop_char": 458227
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 458315,
                        "stop_char": 458347
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 458405,
                        "stop_char": 458442
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "SpaceMiningUnit",
                "name_in_source": "SpaceMiningUnit",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 458674,
                        "stop_char": 458708
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 458887,
                        "stop_char": 458921
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 459030,
                        "stop_char": 459073
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 459143,
                        "stop_char": 459186
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 459273,
                        "stop_char": 459310
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 459385,
                        "stop_char": 459430
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 459521,
                        "stop_char": 459560
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 459628,
                        "stop_char": 459665
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 459752,
                        "stop_char": 459790
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 459880,
                        "stop_char": 459925
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 460073,
                        "stop_char": 460110
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 460265,
                        "stop_char": 460304
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 460393,
                        "stop_char": 460433
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 460515,
                        "stop_char": 460550
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 460703,
                        "stop_char": 460745
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 460855,
                        "stop_char": 460897
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 460991,
                        "stop_char": 461036
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 461186,
                        "stop_char": 461240
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 461364,
                        "stop_char": 461412
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 461562,
                        "stop_char": 461603
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 461721,
                        "stop_char": 461769
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 461948,
                        "stop_char": 461998
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 462165,
                        "stop_char": 462200
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 462373,
                        "stop_char": 462411
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 462588,
                        "stop_char": 462628
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 462775,
                        "stop_char": 462815
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 462968,
                        "stop_char": 463011
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 463168,
                        "stop_char": 463213
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 463854,
                        "stop_char": 463906
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 464546,
                        "stop_char": 464591
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 465232,
                        "stop_char": 465278
                    },
                    {
                        "name": "getState",
                        "short_desc": "Returns the current state of the space mining unit",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The status of the space mining unit can be (Stopped = 1, Running = 2, Jammed output full = 3, Jammed no output container = 4)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 465480,
                        "stop_char": 465518
                    },
                    {
                        "name": "getStatus",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 465608,
                        "stop_char": 465647
                    },
                    {
                        "name": "getRemainingTime",
                        "short_desc": "Returns the remaining time of the current batch extraction process.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The remaining time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 465769,
                        "stop_char": 465815
                    },
                    {
                        "name": "getActiveOre",
                        "short_desc": "Returns the item ID of the currently selected ore.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the selected ore",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 465923,
                        "stop_char": 465965
                    },
                    {
                        "name": "getOrePools",
                        "short_desc": "Returns the list of available ore pools",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "A list of tables composed with {[int] oreId, [float] available, [float] maximum}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 466109,
                        "stop_char": 466150
                    },
                    {
                        "name": "getBaseRate",
                        "short_desc": "Returns the base production rate of the space mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The production rate in L/h",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 466260,
                        "stop_char": 466301
                    },
                    {
                        "name": "getEfficiency",
                        "short_desc": "Returns the efficiency rate of the space mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The efficiency rate between 0 and 1",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 466415,
                        "stop_char": 466458
                    },
                    {
                        "name": "getCalibrationRate",
                        "short_desc": "Returns the calibration rate of the space mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The calibration rate of the space mining unit between 0 and 1",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 466599,
                        "stop_char": 466647
                    },
                    {
                        "name": "getOptimalRate",
                        "short_desc": "Returns the optimal calibration rate of the space mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The optimal calibration rate of the space mining unit between 0 and 1",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 466804,
                        "stop_char": 466848
                    },
                    {
                        "name": "getProductionRate",
                        "short_desc": "Returns the current production rate of the space mining unit.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The production rate in L/h",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 466961,
                        "stop_char": 467008
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "SurfaceEngine",
                "name_in_source": "SurfaceEngine",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 468111,
                        "stop_char": 468143
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 468320,
                        "stop_char": 468352
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 468461,
                        "stop_char": 468502
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 468572,
                        "stop_char": 468613
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 468700,
                        "stop_char": 468735
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 468810,
                        "stop_char": 468853
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 468944,
                        "stop_char": 468981
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 469049,
                        "stop_char": 469084
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 469171,
                        "stop_char": 469207
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 469297,
                        "stop_char": 469340
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 469488,
                        "stop_char": 469523
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 469678,
                        "stop_char": 469715
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 469804,
                        "stop_char": 469842
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 469924,
                        "stop_char": 469957
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 470110,
                        "stop_char": 470150
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 470260,
                        "stop_char": 470300
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 470394,
                        "stop_char": 470437
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 470587,
                        "stop_char": 470639
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 470763,
                        "stop_char": 470809
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 470959,
                        "stop_char": 470998
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 471116,
                        "stop_char": 471162
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 471341,
                        "stop_char": 471389
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 471556,
                        "stop_char": 471589
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 471762,
                        "stop_char": 471798
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 471975,
                        "stop_char": 472013
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 472160,
                        "stop_char": 472198
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 472351,
                        "stop_char": 472392
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 472549,
                        "stop_char": 472592
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 473233,
                        "stop_char": 473283
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 473923,
                        "stop_char": 473966
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 474607,
                        "stop_char": 474651
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 474901,
                        "stop_char": 474949
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 475040,
                        "stop_char": 475075
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 475222,
                        "stop_char": 475269
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 475382,
                        "stop_char": 475424
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the engine is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the engine is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 475764,
                        "stop_char": 475800
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 475885,
                        "stop_char": 475921
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The engine thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 476112,
                        "stop_char": 476155
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The thrust of the engine is currently delivering in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 476280,
                        "stop_char": 476317
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 476462,
                        "stop_char": 476502
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 476599,
                        "stop_char": 476643
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the engine can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current minimal engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 477067,
                        "stop_char": 477114
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 477214,
                        "stop_char": 477254
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the engine can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the engine",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current maximum engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 477606,
                        "stop_char": 477653
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be lower for certain engines",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 477808,
                        "stop_char": 477858
                    },
                    {
                        "name": "isTorqueEnabled",
                        "short_desc": "Checks if the torque generation is enabled on the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the torque is enabled on the engine",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 477981,
                        "stop_char": 478024
                    },
                    {
                        "name": "enableTorque",
                        "short_desc": "Sets the torque generation state on the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": "",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 478102,
                        "stop_char": 478147
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the engine thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 478303,
                        "stop_char": 478344
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the engine torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 478483,
                        "stop_char": 478524
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the engine exhaust thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 478668,
                        "stop_char": 478714
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 478811,
                        "stop_char": 478849
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the engine torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 478968,
                        "stop_char": 479014
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 479111,
                        "stop_char": 479149
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "Checks if the engine out of fuel",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when there is no fuel left, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 479249,
                        "stop_char": 479288
                    },
                    {
                        "name": "getFuelId",
                        "short_desc": "Returns the item ID of the fuel currently used by the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the fuel currently used",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 479413,
                        "stop_char": 479450
                    },
                    {
                        "name": "getFuelTankId",
                        "short_desc": "Returns the local ID of the fueltank linked to the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local ID of the fueltank",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 479562,
                        "stop_char": 479603
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "Checks if the engine linked to a functional Fuel Tank (not broken or colliding)?",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the linked tank is functional, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 479759,
                        "stop_char": 479808
                    },
                    {
                        "name": "hasBrokenFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 479915,
                        "stop_char": 479960
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "Returns the engine fuel consumption rate per newton of thrust delivered per second",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current rate of fuel consumption in m\u0412\u0456/(N.s)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 480117,
                        "stop_char": 480163
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "Returns the ratio between the current fuel rate and the theoretical nominal fuel rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be higher for certain engines at certain speeds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 480339,
                        "stop_char": 480388
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "Returns the current fuel consumption rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The rate of fuel consumption in m3/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 480491,
                        "stop_char": 480537
                    },
                    {
                        "name": "getWarmupTime",
                        "short_desc": "Returns the T50; the time needed for the engine to reach 50% of its maximal thrust (all engines",
                        "desc": "do not instantly reach the thrust that is set for them, but they can take time to \"warm up\" to\nthe final value)",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time to half thrust in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 480812,
                        "stop_char": 480853
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 480941,
                        "stop_char": 480975
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "Returns the distance to the first object detected in the direction of the thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The distance to the first obstacle in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 481125,
                        "stop_char": 481164
                    },
                    {
                        "name": "getMaxDistance",
                        "short_desc": "Returns the maximum functional distance from the ground",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum functional distance in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 481286,
                        "stop_char": 481328
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "System",
                "name_in_source": "System",
                "methods": [
                    {
                        "name": "getActionKeyName",
                        "short_desc": "Return the currently key bound to the given action. Useful to display tips.",
                        "desc": "",
                        "params": [
                            {
                                "name": "actionName",
                                "desc": "The action name, represented as a string taken among the set of predefined Lua-available actions (you can check the drop down list to see what is available)",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The key associated to the given action name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 481692,
                        "stop_char": 481739
                    },
                    {
                        "name": "showScreen",
                        "short_desc": "Control the display of the Control Unit custom screen, where you can define customized display information in HTML.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "bool",
                                "desc": "True to show the screen, false to hide the screen",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 482082,
                        "stop_char": 482117
                    },
                    {
                        "name": "setScreen",
                        "short_desc": "Set the content of the Control Unit custom screen with some HTML code.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "content",
                                "desc": "The HTML content you want to display on the screen widget. You can also use SVG here to make drawings.",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 482470,
                        "stop_char": 482507
                    },
                    {
                        "name": "createWidgetPanel",
                        "short_desc": "Create an empty panel.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "label",
                                "desc": "The title of the panel",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The panel ID, or \"\" on failure",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 482779,
                        "stop_char": 482822
                    },
                    {
                        "name": "destroyWidgetPanel",
                        "short_desc": "Destroy the panel.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "panelId",
                                "desc": "The panel ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 on success, 0 on failure.",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 483080,
                        "stop_char": 483126
                    },
                    {
                        "name": "createWidget",
                        "short_desc": "Create an empty widget and add it to a panel.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "panelId",
                                "desc": "The panel ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "type",
                                "desc": "Widget type, determining how it will display data attached to ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The widget ID, or \"\" on failure.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 483502,
                        "stop_char": 483548
                    },
                    {
                        "name": "destroyWidget",
                        "short_desc": "Destroy the widget.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "widgetId",
                                "desc": "The widget ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 on success, 0 on failure.",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 483809,
                        "stop_char": 483851
                    },
                    {
                        "name": "createData",
                        "short_desc": "Create data.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "dataJson",
                                "desc": "The data fields as JSON",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The data ID, or \"\" on failure.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 484117,
                        "stop_char": 484156
                    },
                    {
                        "name": "destroyData",
                        "short_desc": "Destroy the data.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "dataId",
                                "desc": "The data ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 on success, 0 on failure.",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 484411,
                        "stop_char": 484449
                    },
                    {
                        "name": "updateData",
                        "short_desc": "Update JSON associated to data.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "dataId",
                                "desc": "The data ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "dataJson",
                                "desc": "The data fields as JSON",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 on success, 0 on failure.",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 484768,
                        "stop_char": 484815
                    },
                    {
                        "name": "addDataToWidget",
                        "short_desc": "Add data to widget.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "dataId",
                                "desc": "The data ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "widgetId",
                                "desc": "The widget ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 on success, 0 on failure.",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 485112,
                        "stop_char": 485164
                    },
                    {
                        "name": "removeDataFromWidget",
                        "short_desc": "Remove data from widget.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "dataId",
                                "desc": "The data ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "widgetId",
                                "desc": "The widget ID",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 on success, 0 on failure.",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 485466,
                        "stop_char": 485523
                    },
                    {
                        "name": "getMouseWheel",
                        "short_desc": "Return the current value of the mouse wheel",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the mouse wheel",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 485628,
                        "stop_char": 485662
                    },
                    {
                        "name": "getMouseDeltaX",
                        "short_desc": "Return the current value of the mouse delta X",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the mouse delta X",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 485771,
                        "stop_char": 485806
                    },
                    {
                        "name": "getMouseDeltaY",
                        "short_desc": "Return the current value of the mouse delta Y",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the mouse delta Y",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 485915,
                        "stop_char": 485950
                    },
                    {
                        "name": "getMousePosX",
                        "short_desc": "Return the current value of the mouse pos X",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the mouse pos X",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 486055,
                        "stop_char": 486088
                    },
                    {
                        "name": "getMousePosY",
                        "short_desc": "Return the current value of the mouse pos Y",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the mouse pos Y",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 486193,
                        "stop_char": 486226
                    },
                    {
                        "name": "getMouseSensitivity",
                        "short_desc": "Return the value of mouse sensitivity game setting",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Sensitivity setting value",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 486327,
                        "stop_char": 486367
                    },
                    {
                        "name": "getScreenHeight",
                        "short_desc": "Return the current value of the screen height",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the screen height",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 486477,
                        "stop_char": 486513
                    },
                    {
                        "name": "getScreenWidth",
                        "short_desc": "Return the current value of the screen width",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the screen width",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 486621,
                        "stop_char": 486656
                    },
                    {
                        "name": "getCameraHorizontalFov",
                        "short_desc": "Return the current value of the player's horizontal field of view",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the player's horizontal field of view",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 486805,
                        "stop_char": 486848
                    },
                    {
                        "name": "getFov",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 486933,
                        "stop_char": 486960
                    },
                    {
                        "name": "getCameraVerticalFov",
                        "short_desc": "Return the current value of the player's vertical field of view",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the player's vertical field of view",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 487105,
                        "stop_char": 487146
                    },
                    {
                        "name": "getCameraMode",
                        "short_desc": "Returns the active camera mode.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1: First Person View, 2: Look Around Construct View, 3: Follow Construct View",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 487281,
                        "stop_char": 487315
                    },
                    {
                        "name": "isFirstPerson",
                        "short_desc": "Checks if the active camera is in first person view.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the camera is in first person view.",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 487434,
                        "stop_char": 487468
                    },
                    {
                        "name": "getCameraPos",
                        "short_desc": "Returns the position of the camera, in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Camera position in construct local coordinates.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 487607,
                        "stop_char": 487640
                    },
                    {
                        "name": "getCameraWorldPos",
                        "short_desc": "Returns the position of the camera, in world coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Camera position in world coordinates.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 487759,
                        "stop_char": 487797
                    },
                    {
                        "name": "getCameraWorldForward",
                        "short_desc": "Returns the forward direction vector of the active camera, in world coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Camera forward direction vector in world coordinates.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 487955,
                        "stop_char": 487997
                    },
                    {
                        "name": "getCameraWorldRight",
                        "short_desc": "Returns the right direction vector of the active camera, in world coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Camera right direction vector in world coordinates.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 488151,
                        "stop_char": 488191
                    },
                    {
                        "name": "getCameraWorldUp",
                        "short_desc": "Returns the up direction vector of the active camera, in world coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Camera up direction vector in world coordinates.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 488339,
                        "stop_char": 488376
                    },
                    {
                        "name": "getCameraForward",
                        "short_desc": "Returns the forward direction vector of the active camera, in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Camera forward direction vector in construct local coordinates.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 488554,
                        "stop_char": 488591
                    },
                    {
                        "name": "getCameraRight",
                        "short_desc": "Returns the right direction vector of the active camera, in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Camera right direction vector in construct local coordinates.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 488765,
                        "stop_char": 488800
                    },
                    {
                        "name": "getCameraUp",
                        "short_desc": "Returns the up direction vector of the active camera, in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Camera up direction vector in construct local coordinates.",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 488968,
                        "stop_char": 489000
                    },
                    {
                        "name": "getThrottleInputFromMouseWheel",
                        "short_desc": "Return the current value of the mouse wheel (for the throttle speedUp/speedDown action)",
                        "desc": "This value will go through the control scheme, devices and sensitivity",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current input",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 489205,
                        "stop_char": 489256
                    },
                    {
                        "name": "getControlDeviceForwardInput",
                        "short_desc": "Return the mouse input for the ship control action (forward/backward)",
                        "desc": "This value will go through the control scheme to know on which input the mouse is mapped and its current sensitivity",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current input",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 489489,
                        "stop_char": 489538
                    },
                    {
                        "name": "getControlDeviceYawInput",
                        "short_desc": "Return the mouse input for the ship control action  (yaw right/left)",
                        "desc": "This value will go through the control scheme to know on which input the mouse is mapped and its current sensitivity",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current input",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 489770,
                        "stop_char": 489815
                    },
                    {
                        "name": "getControlDeviceLeftRightInput",
                        "short_desc": "Return the mouse input for the ship control action  (right/left)",
                        "desc": "This value will go through the control scheme to know on which input the mouse is mapped and its current sensitivity",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current value of the mouse delta Y",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 490064,
                        "stop_char": 490115
                    },
                    {
                        "name": "lockView",
                        "short_desc": "Lock or unlock the mouse free look.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "state",
                                "desc": "true to lock and false to unlock",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 490362,
                        "stop_char": 490396
                    },
                    {
                        "name": "isViewLocked",
                        "short_desc": "Return the lock state of the mouse free look",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when locked and 0 when unlocked",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 490500,
                        "stop_char": 490533
                    },
                    {
                        "name": "freeze",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 490602,
                        "stop_char": 490629
                    },
                    {
                        "name": "isFrozen",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 490702,
                        "stop_char": 490731
                    },
                    {
                        "name": "getArkTime",
                        "short_desc": "Return the current time since the arrival of the Arkship on September 30th, 2017",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 490852,
                        "stop_char": 490883
                    },
                    {
                        "name": "getTime",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 490957,
                        "stop_char": 490985
                    },
                    {
                        "name": "getUtcTime",
                        "short_desc": "Return the current time since January 1st, 1970.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 491074,
                        "stop_char": 491105
                    },
                    {
                        "name": "getUtcOffset",
                        "short_desc": "Return the time offset between local timezone and UTC",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 491199,
                        "stop_char": 491232
                    },
                    {
                        "name": "getLocale",
                        "short_desc": "Return the locale in which the game is currently running",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The locale, currently one of \"en-US\", \"fr-FR\", or \"de-DE\"",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 491371,
                        "stop_char": 491401
                    },
                    {
                        "name": "getActionUpdateDeltaTime",
                        "short_desc": "Return delta time of action updates (to use in ActionLoop)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The delta time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 491510,
                        "stop_char": 491555
                    },
                    {
                        "name": "getPlayerName",
                        "short_desc": "Return the name of the given player, if in range of visibility or broadcasted by a transponder",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the player",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The name of the player",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 491739,
                        "stop_char": 491775
                    },
                    {
                        "name": "getPlayerWorldPos",
                        "short_desc": "Return the world position of the given player, if in range of visibility",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the player",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The coordinates of the player in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 491964,
                        "stop_char": 492004
                    },
                    {
                        "name": "getItem",
                        "short_desc": "Return the item table corresponding to the given item ID.",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the item",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "An item table with fields: {[int] id, [string] name, [string] displayName, [string] locDisplayName, [string] displayNameWithSize, [string] locDisplayNameWithSize, [string] description, [string] locDescription, [string] type, [number] unitMass, [number] unitVolume, [integer] tier, [string] scale, [string] iconPath, [table] schematics, [table] products}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 492479,
                        "stop_char": 492509
                    },
                    {
                        "name": "getRecipes",
                        "short_desc": "Returns a list of recipes producing the given item from its id.",
                        "desc": "",
                        "params": [
                            {
                                "name": "itemId",
                                "desc": "The ID of the item",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "A list of recipe table with field: {[int] id, [int] tier,[double] time, [bool] nanocraftable, [table] products:{{[int] id, [double] quantity},...}, [table] ingredients:{{[int] id, [double] quantity},...}}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 492845,
                        "stop_char": 492882
                    },
                    {
                        "name": "getSchematic",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 492973,
                        "stop_char": 493006
                    },
                    {
                        "name": "getOrganization",
                        "short_desc": "Returns the corresping organization to the given organization id, if known, e.g. broadcasted by a transponder",
                        "desc": "",
                        "params": [
                            {
                                "name": "id",
                                "desc": "The ID of the organization",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "A table containing information about the given organization {[string] name, [string] tag}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 493277,
                        "stop_char": 493315
                    },
                    {
                        "name": "getOrganizationName",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 493414,
                        "stop_char": 493454
                    },
                    {
                        "name": "getOrganizationTag",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 493551,
                        "stop_char": 493590
                    },
                    {
                        "name": "getWaypointFromPlayerPos",
                        "short_desc": "Return the player's world position as a waypoint string, starting with '::pos' (only in explicit runs)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The waypoint as a string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 493742,
                        "stop_char": 493787
                    },
                    {
                        "name": "setWaypoint",
                        "short_desc": "Set a waypoint at the destination described by the waypoint string, of the form '::pos{...}' (only in explicit runs)",
                        "desc": "",
                        "params": [
                            {
                                "name": "waypointStr",
                                "desc": "The waypoint as a string",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "notify",
                                "desc": "(Optional) True to display a notification on waypoint change",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 494050,
                        "stop_char": 494101
                    },
                    {
                        "name": "clearWaypoint",
                        "short_desc": "Clear the active destination waypoint. (only in explicit runs)'",
                        "desc": "",
                        "params": [
                            {
                                "name": "notify",
                                "desc": "(Optional) True to display a notification about the waypoint's clearing",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 494268,
                        "stop_char": 494308
                    },
                    {
                        "name": "showHelper",
                        "short_desc": "Set the visibility of the helper top menu.",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "show",
                                "desc": "True to show the top helper menu, false to hide the top helper menu",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 494596,
                        "stop_char": 494631
                    },
                    {
                        "name": "playSound",
                        "short_desc": "Play a sound file from your audio folder (located in \"My documents/NQ/DualUniverse/audio\"). Only one sound can be played at a time.",
                        "desc": "",
                        "params": [
                            {
                                "name": "filePath",
                                "desc": "Relative path to audio folder (.mp3, .wav)",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 494838,
                        "stop_char": 494876
                    },
                    {
                        "name": "isPlayingSound",
                        "short_desc": "Checks if a sound is playing",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if a sound is playing",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 494954,
                        "stop_char": 494989
                    },
                    {
                        "name": "print",
                        "short_desc": "Print the given string in the Lua chat channel",
                        "desc": "Note that this function is disabled if the player is not running the script explicitly (pressing F on the Control Unit, vs. via a plug signal).",
                        "params": [
                            {
                                "name": "msg",
                                "desc": "The message to print",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 495299,
                        "stop_char": 495328
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Telemeter",
                "name_in_source": "Telemeter",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 497585,
                        "stop_char": 497613
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 497786,
                        "stop_char": 497814
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 497923,
                        "stop_char": 497960
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 498030,
                        "stop_char": 498067
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 498154,
                        "stop_char": 498185
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 498260,
                        "stop_char": 498299
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 498390,
                        "stop_char": 498423
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 498491,
                        "stop_char": 498522
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 498609,
                        "stop_char": 498641
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 498731,
                        "stop_char": 498770
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 498918,
                        "stop_char": 498949
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 499104,
                        "stop_char": 499137
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 499226,
                        "stop_char": 499260
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 499342,
                        "stop_char": 499371
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 499524,
                        "stop_char": 499560
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 499670,
                        "stop_char": 499706
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 499800,
                        "stop_char": 499839
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 499989,
                        "stop_char": 500037
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 500161,
                        "stop_char": 500203
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 500353,
                        "stop_char": 500388
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 500506,
                        "stop_char": 500548
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 500727,
                        "stop_char": 500771
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 500938,
                        "stop_char": 500967
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 501140,
                        "stop_char": 501172
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 501349,
                        "stop_char": 501383
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 501530,
                        "stop_char": 501564
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 501717,
                        "stop_char": 501754
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 501911,
                        "stop_char": 501950
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 502591,
                        "stop_char": 502637
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 503277,
                        "stop_char": 503316
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 503957,
                        "stop_char": 503997
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 504095,
                        "stop_char": 504130
                    },
                    {
                        "name": "raycast",
                        "short_desc": "Emits a raycast from the telemeter, returns a raycastHit object",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "A table with fields : {[bool] hit, [float] distance, [vec3] point}",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 504284,
                        "stop_char": 504315
                    },
                    {
                        "name": "getRayOrigin",
                        "short_desc": "Returns telemeter raycast origin in local construct coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The telemeter raycast origin in local construct coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 504462,
                        "stop_char": 504498
                    },
                    {
                        "name": "getRayWorldOrigin",
                        "short_desc": "Returns telemeter raycast origin in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The telemeter raycast origin in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 504625,
                        "stop_char": 504666
                    },
                    {
                        "name": "getRayAxis",
                        "short_desc": "Returns telemeter raycast axis in local construct coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The telemeter raycast axis in local construct coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 504809,
                        "stop_char": 504843
                    },
                    {
                        "name": "getRayWorldAxis",
                        "short_desc": "Returns telemeter raycast axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The telemeter raycast axis in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 504966,
                        "stop_char": 505005
                    },
                    {
                        "name": "getMaxDistance",
                        "short_desc": "Returns the max distance from which an obstacle can be detected (default is 100m)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max distance to detectable obstacles in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 505162,
                        "stop_char": 505200
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Transponder",
                "name_in_source": "Transponder",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 505420,
                        "stop_char": 505450
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 505625,
                        "stop_char": 505655
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 505764,
                        "stop_char": 505803
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 505873,
                        "stop_char": 505912
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 505999,
                        "stop_char": 506032
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 506107,
                        "stop_char": 506148
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 506239,
                        "stop_char": 506274
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 506342,
                        "stop_char": 506375
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 506462,
                        "stop_char": 506496
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 506586,
                        "stop_char": 506627
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 506775,
                        "stop_char": 506808
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 506963,
                        "stop_char": 506998
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 507087,
                        "stop_char": 507123
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 507205,
                        "stop_char": 507236
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 507389,
                        "stop_char": 507427
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 507537,
                        "stop_char": 507575
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 507669,
                        "stop_char": 507710
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 507860,
                        "stop_char": 507910
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 508034,
                        "stop_char": 508078
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 508228,
                        "stop_char": 508265
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 508383,
                        "stop_char": 508427
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 508606,
                        "stop_char": 508652
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 508819,
                        "stop_char": 508850
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 509023,
                        "stop_char": 509057
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 509234,
                        "stop_char": 509270
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 509417,
                        "stop_char": 509453
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 509606,
                        "stop_char": 509645
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 509802,
                        "stop_char": 509843
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 510484,
                        "stop_char": 510532
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 511172,
                        "stop_char": 511213
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 511854,
                        "stop_char": 511896
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the transponder is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the transponder is active, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 512211,
                        "stop_char": 512245
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 512328,
                        "stop_char": 512362
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags list with up to 8 entries. Returns 1 if the application was successful, 0 if the tag",
                        "desc": "format is invalid.",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "List of up to 8 transponder tag strings",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "1 if transponder tags were set, 0 if an error occurred",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 512624,
                        "stop_char": 512661
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tag list",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "List of up to 8 transponder tag strings",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 512745,
                        "stop_char": 512778
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "VerticalBooster",
                "name_in_source": "VerticalBooster",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 513234,
                        "stop_char": 513268
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 513447,
                        "stop_char": 513481
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 513590,
                        "stop_char": 513633
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 513703,
                        "stop_char": 513746
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 513833,
                        "stop_char": 513870
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 513945,
                        "stop_char": 513990
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 514081,
                        "stop_char": 514120
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 514188,
                        "stop_char": 514225
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 514312,
                        "stop_char": 514350
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 514440,
                        "stop_char": 514485
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 514633,
                        "stop_char": 514670
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 514825,
                        "stop_char": 514864
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 514953,
                        "stop_char": 514993
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 515075,
                        "stop_char": 515110
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 515263,
                        "stop_char": 515305
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 515415,
                        "stop_char": 515457
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 515551,
                        "stop_char": 515596
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 515746,
                        "stop_char": 515800
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 515924,
                        "stop_char": 515972
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 516122,
                        "stop_char": 516163
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 516281,
                        "stop_char": 516329
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 516508,
                        "stop_char": 516558
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 516725,
                        "stop_char": 516760
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 516933,
                        "stop_char": 516971
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 517148,
                        "stop_char": 517188
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 517335,
                        "stop_char": 517375
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 517528,
                        "stop_char": 517571
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 517728,
                        "stop_char": 517773
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 518414,
                        "stop_char": 518466
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 519106,
                        "stop_char": 519151
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 519792,
                        "stop_char": 519838
                    },
                    {
                        "name": "getObstructionFactor",
                        "short_desc": "Returns the obstruction ratio of the engine exhaust by Elements and Voxels.",
                        "desc": "The more obstructed the engine is, the less properly it will work. Try to fix your design if this is the case",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The obstruction ratio of the engine",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 520088,
                        "stop_char": 520138
                    },
                    {
                        "name": "getTags",
                        "short_desc": "Returns the tags of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Tags of the engine, in a CSV string",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 520229,
                        "stop_char": 520266
                    },
                    {
                        "name": "setTags",
                        "short_desc": "Set the tags of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "tags",
                                "desc": "The CSV string of the tags",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "ignore",
                                "desc": ": True to ignore the default engine tags",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 520413,
                        "stop_char": 520462
                    },
                    {
                        "name": "isIgnoringTags",
                        "short_desc": "Checks if the engine is ignoring default tags",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "if the engine ignores default engine tags",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 520575,
                        "stop_char": 520619
                    },
                    {
                        "name": "isActive",
                        "short_desc": "Checks if the engine is active",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the engine is on",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 520963,
                        "stop_char": 521001
                    },
                    {
                        "name": "getState",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 521086,
                        "stop_char": 521124
                    },
                    {
                        "name": "setThrust",
                        "short_desc": "Set the thrust of the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "thrust",
                                "desc": "The engine thrust in newtons (limited by the maximum thrust)",
                                "type": {
                                    "id": "number"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 521317,
                        "stop_char": 521362
                    },
                    {
                        "name": "getThrust",
                        "short_desc": "Returns the current thrust of the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The thrust of the engine is currently delivering in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 521487,
                        "stop_char": 521526
                    },
                    {
                        "name": "getMaxThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 521671,
                        "stop_char": 521713
                    },
                    {
                        "name": "getMaxThrustBase",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 521810,
                        "stop_char": 521856
                    },
                    {
                        "name": "getCurrentMinThrust",
                        "short_desc": "Returns the minimal thrust the engine can deliver at the moment (can be more than zero),",
                        "desc": "which will depend on various conditions like atmospheric density, obstruction, orientation, etc\nMost of the time, this will be 0 but it can be greater than 0, particularly for Ailerons, in which case\nthe actual thrust will be at least equal to minThrust",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current minimal engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 522280,
                        "stop_char": 522329
                    },
                    {
                        "name": "getMinThrust",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 522429,
                        "stop_char": 522471
                    },
                    {
                        "name": "getCurrentMaxThrust",
                        "short_desc": "Returns the maximal thrust the engine can deliver at the moment, which might depend on",
                        "desc": "various conditions like atmospheric density, obstruction, orientation, etc. The actual thrust will be\nanything below this maxThrust, which defines the current max capability of the engine",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current maximum engine thrust in newtons",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 522823,
                        "stop_char": 522872
                    },
                    {
                        "name": "getMaxThrustEfficiency",
                        "short_desc": "Returns the ratio between the current maximum thrust and the optimal maximum thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be lower for certain engines",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 523027,
                        "stop_char": 523079
                    },
                    {
                        "name": "isTorqueEnabled",
                        "short_desc": "Checks if the torque generation is enabled on the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the torque is enabled on the engine",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 523202,
                        "stop_char": 523247
                    },
                    {
                        "name": "enableTorque",
                        "short_desc": "Sets the torque generation state on the engine",
                        "desc": "",
                        "params": [
                            {
                                "name": "state",
                                "desc": "",
                                "type": {
                                    "id": "boolean"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 523325,
                        "stop_char": 523372
                    },
                    {
                        "name": "getThrustAxis",
                        "short_desc": "Returns the engine thrust direction in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 523528,
                        "stop_char": 523571
                    },
                    {
                        "name": "getTorqueAxis",
                        "short_desc": "Returns the engine torque axis in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 523710,
                        "stop_char": 523753
                    },
                    {
                        "name": "getWorldThrustAxis",
                        "short_desc": "Returns the engine exhaust thrust direction in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The engine thrust direction vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 523897,
                        "stop_char": 523945
                    },
                    {
                        "name": "thrustAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 524042,
                        "stop_char": 524082
                    },
                    {
                        "name": "getWorldTorqueAxis",
                        "short_desc": "Returns the engine torque axis in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The torque axis vector in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 524201,
                        "stop_char": 524249
                    },
                    {
                        "name": "torqueAxis",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 524346,
                        "stop_char": 524386
                    },
                    {
                        "name": "isOutOfFuel",
                        "short_desc": "Checks if the engine out of fuel",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when there is no fuel left, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 524486,
                        "stop_char": 524527
                    },
                    {
                        "name": "getFuelId",
                        "short_desc": "Returns the item ID of the fuel currently used by the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item ID of the fuel currently used",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 524652,
                        "stop_char": 524691
                    },
                    {
                        "name": "getFuelTankId",
                        "short_desc": "Returns the local ID of the fueltank linked to the engine",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local ID of the fueltank",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 524803,
                        "stop_char": 524846
                    },
                    {
                        "name": "hasFunctionalFuelTank",
                        "short_desc": "Checks if the engine linked to a functional Fuel Tank (not broken or colliding)?",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 when the linked tank is functional, 0 otherwise",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 525002,
                        "stop_char": 525053
                    },
                    {
                        "name": "hasBrokenFuelTank",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 525160,
                        "stop_char": 525207
                    },
                    {
                        "name": "getCurrentFuelRate",
                        "short_desc": "Returns the engine fuel consumption rate per newton of thrust delivered per second",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current rate of fuel consumption in m\u0412\u0456/(N.s)",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 525364,
                        "stop_char": 525412
                    },
                    {
                        "name": "getFuelRateEfficiency",
                        "short_desc": "Returns the ratio between the current fuel rate and the theoretical nominal fuel rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Usually 1 but can be higher for certain engines at certain speeds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 525588,
                        "stop_char": 525639
                    },
                    {
                        "name": "getFuelConsumption",
                        "short_desc": "Returns the current fuel consumption rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The rate of fuel consumption in m3/s",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 525742,
                        "stop_char": 525790
                    },
                    {
                        "name": "getWarmupTime",
                        "short_desc": "Returns the T50; the time needed for the engine to reach 50% of its maximal thrust (all engines",
                        "desc": "do not instantly reach the thrust that is set for them, but they can take time to \"warm up\" to\nthe final value)",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The time to half thrust in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 526065,
                        "stop_char": 526108
                    },
                    {
                        "name": "getT50",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 526196,
                        "stop_char": 526232
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "Returns the distance to the first object detected in the direction of the thrust",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The distance to the first obstacle in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 526382,
                        "stop_char": 526423
                    },
                    {
                        "name": "getMaxDistance",
                        "short_desc": "Returns the maximum functional distance from the ground",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum functional distance in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 526545,
                        "stop_char": 526589
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "WarpDrive",
                "name_in_source": "WarpDrive",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 526803,
                        "stop_char": 526831
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527004,
                        "stop_char": 527032
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527141,
                        "stop_char": 527178
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527248,
                        "stop_char": 527285
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527372,
                        "stop_char": 527403
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527478,
                        "stop_char": 527517
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527608,
                        "stop_char": 527641
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527709,
                        "stop_char": 527740
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527827,
                        "stop_char": 527859
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 527949,
                        "stop_char": 527988
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 528136,
                        "stop_char": 528167
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 528322,
                        "stop_char": 528355
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 528444,
                        "stop_char": 528478
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 528560,
                        "stop_char": 528589
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 528742,
                        "stop_char": 528778
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 528888,
                        "stop_char": 528924
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 529018,
                        "stop_char": 529057
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 529207,
                        "stop_char": 529255
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 529379,
                        "stop_char": 529421
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 529571,
                        "stop_char": 529606
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 529724,
                        "stop_char": 529766
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 529945,
                        "stop_char": 529989
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 530156,
                        "stop_char": 530185
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 530358,
                        "stop_char": 530390
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 530567,
                        "stop_char": 530601
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 530748,
                        "stop_char": 530782
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 530935,
                        "stop_char": 530972
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 531129,
                        "stop_char": 531168
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 531809,
                        "stop_char": 531855
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 532495,
                        "stop_char": 532534
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 533175,
                        "stop_char": 533215
                    },
                    {
                        "name": "getStatus",
                        "short_desc": "Returns the current status of the warp drive",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current status of the warp drive (NoWarpDrive = 1, Broken = 2, Warping = 3, ParentWarping = 4, NotAnchored = 5, WarpCooldown = 6, PvPCooldown = 7, MovingChild = 8, NoContainer = 9, PlanetTooClose = 10, DestinationNotSet = 11, DestinationTooClose = 12, DestinationTooFar = 13, NotEnoughWarpCells = 14, Ready = 15)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 533671,
                        "stop_char": 533704
                    },
                    {
                        "name": "getDistance",
                        "short_desc": "Returns the distance to the current warp destination",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The distance to the current warp destination",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 533826,
                        "stop_char": 533861
                    },
                    {
                        "name": "getDestination",
                        "short_desc": "Returns the construct ID of the current warp destination",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The construct id of the warp destination",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 533984,
                        "stop_char": 534022
                    },
                    {
                        "name": "getDestinationName",
                        "short_desc": "Returns the name of the current warp destination construct",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The warp destination name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 534131,
                        "stop_char": 534173
                    },
                    {
                        "name": "getContainerId",
                        "short_desc": "Returns the local id of the container linked to the warp drive",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local id of the container",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 534291,
                        "stop_char": 534329
                    },
                    {
                        "name": "getAvailableWarpCells",
                        "short_desc": "Returns the quantity of warp cells available in the linked container",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The quantity of available warp cells",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 534460,
                        "stop_char": 534505
                    },
                    {
                        "name": "getRequiredWarpCells",
                        "short_desc": "Returns the quantity of warp cells required to warp to the warp destination set",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The quantity of required warp cells for the jump set",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 534663,
                        "stop_char": 534707
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            },
            {
                "name": "Weapon",
                "name_in_source": "Weapon",
                "methods": [
                    {
                        "name": "show",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 534912,
                        "stop_char": 534937
                    },
                    {
                        "name": "hide",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 535107,
                        "stop_char": 535132
                    },
                    {
                        "name": "getWidgetType",
                        "short_desc": "Returns the widget type compatible with the element data",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Widget type. \"\" if invalid.",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 535241,
                        "stop_char": 535275
                    },
                    {
                        "name": "getWidgetData",
                        "short_desc": "Returns the element data as JSON",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data as JSON",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 535345,
                        "stop_char": 535379
                    },
                    {
                        "name": "getData",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 535466,
                        "stop_char": 535494
                    },
                    {
                        "name": "getWidgetDataId",
                        "short_desc": "Returns the element data ID",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Data ID. \"\" if invalid",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 535569,
                        "stop_char": 535605
                    },
                    {
                        "name": "getDataId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 535696,
                        "stop_char": 535726
                    },
                    {
                        "name": "getName",
                        "short_desc": "Returns the element name",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element's name",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 535794,
                        "stop_char": 535822
                    },
                    {
                        "name": "getClass",
                        "short_desc": "Returns the class of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The class name of the Element",
                                "type": {
                                    "id": "string"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 535909,
                        "stop_char": 535938
                    },
                    {
                        "name": "getElementClass",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 536028,
                        "stop_char": 536064
                    },
                    {
                        "name": "getMass",
                        "short_desc": "Returns the mass of the element (includes the included items' mass when the Element is a Container)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The mass of the element",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 536212,
                        "stop_char": 536240
                    },
                    {
                        "name": "getItemId",
                        "short_desc": "Returns the element item ID (to be used with system.getItem() function to get information about the element).",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element item ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 536395,
                        "stop_char": 536425
                    },
                    {
                        "name": "getLocalId",
                        "short_desc": "Returns the unique local ID of the element",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The element local ID",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 536514,
                        "stop_char": 536545
                    },
                    {
                        "name": "getId",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 536627,
                        "stop_char": 536653
                    },
                    {
                        "name": "getIntegrity",
                        "short_desc": "Returns the element integrity between 0 and 100",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The integrity value; 0 = Element fully destroyed, 100 = Element fully functional",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 536806,
                        "stop_char": 536839
                    },
                    {
                        "name": "getHitPoints",
                        "short_desc": "Returns the element's current hitpoints (0 = destroyed)",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 536949,
                        "stop_char": 536982
                    },
                    {
                        "name": "getMaxHitPoints",
                        "short_desc": "Returns the element's maximal hitpoints",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum element hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 537076,
                        "stop_char": 537112
                    },
                    {
                        "name": "getRemainingRestorations",
                        "short_desc": "Returns the element's remaining number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The number of restorations before the element is ultimately destroyed",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 537262,
                        "stop_char": 537307
                    },
                    {
                        "name": "getMaxRestorations",
                        "short_desc": "Returns the element's maximal number of restorations",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The max number of restorations of the element",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 537431,
                        "stop_char": 537470
                    },
                    {
                        "name": "getPosition",
                        "short_desc": "Returns the position of the element in construct local coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The position of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 537620,
                        "stop_char": 537652
                    },
                    {
                        "name": "getBoundingBoxSize",
                        "short_desc": "Returns the bounding box dimensions of the element.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions of the element bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 537770,
                        "stop_char": 537809
                    },
                    {
                        "name": "getBoundingBoxCenter",
                        "short_desc": "Returns the position of the center of bounding box of the element in local construct coordinates.",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The dimensions the position of the center of bounding box",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 537988,
                        "stop_char": 538029
                    },
                    {
                        "name": "getUp",
                        "short_desc": "Returns the up direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 538196,
                        "stop_char": 538222
                    },
                    {
                        "name": "getRight",
                        "short_desc": "Returns the right direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 538395,
                        "stop_char": 538424
                    },
                    {
                        "name": "getForward",
                        "short_desc": "Returns the forward direction vector of the element in construct local coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the element in construct local coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 538601,
                        "stop_char": 538632
                    },
                    {
                        "name": "getWorldUp",
                        "short_desc": "Returns the up direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Up direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 538779,
                        "stop_char": 538810
                    },
                    {
                        "name": "getWorldRight",
                        "short_desc": "Returns the right direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Right direction vector of the element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 538963,
                        "stop_char": 538997
                    },
                    {
                        "name": "getWorldForward",
                        "short_desc": "Returns the forward direction vector of the element in world coordinates",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "Forward direction vector of the Element in world coordinates",
                                "type": {
                                    "id": "custom",
                                    "name": "table"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 539154,
                        "stop_char": 539190
                    },
                    {
                        "name": "setSignalIn",
                        "short_desc": "Set the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            },
                            {
                                "name": "state",
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 539831,
                        "stop_char": 539874
                    },
                    {
                        "name": "getSignalIn",
                        "short_desc": "Returns the value of a signal in the specified IN plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 540514,
                        "stop_char": 540550
                    },
                    {
                        "name": "getSignalOut",
                        "short_desc": "Returns the value of a signal in the specified OUT plug of the Element.",
                        "desc": "Standard plug names are built with the following syntax: direction-type-index. 'Direction' can be IN or OUT.\n'type' is one of the following: ITEM, FUEL, ELECTRICITY, SIGNAL, HEAT, FLUID, CONTROL, and 'index' is a number between 0 and\nthe total number of plugs of the given type in the given direction. Some plugs have special names like 'on' or 'off' for the\nManual Switch Unit. Just check in-game for the plug names if you have a doubt.",
                        "params": [
                            {
                                "name": "plug",
                                "desc": "The plug name, in the form of IN-SIGNAL-index",
                                "type": {
                                    "id": "string"
                                },
                                "is_opt": false,
                                "default_value": ""
                            }
                        ],
                        "returns": [
                            {
                                "desc": "The plug signal state",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 541191,
                        "stop_char": 541228
                    },
                    {
                        "name": "getAmmo",
                        "short_desc": "Returns the item id of the currently equipped ammo",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The item id of the ammunition in the weapon",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 541348,
                        "stop_char": 541376
                    },
                    {
                        "name": "getAmmoCount",
                        "short_desc": "Returns the current amount of remaining ammunition",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The remaining ammunition count (0 when reloading)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 541502,
                        "stop_char": 541535
                    },
                    {
                        "name": "getMaxAmmo",
                        "short_desc": "Returns the maximum amount of ammunition the weapon can carry",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The maximum amount of ammunition",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 541655,
                        "stop_char": 541686
                    },
                    {
                        "name": "isOutOfAmmo",
                        "short_desc": "Checks if the weapon is out of ammo",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 the weapon is out of ammo",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 541775,
                        "stop_char": 541807
                    },
                    {
                        "name": "getOperationalState",
                        "short_desc": "Returns 1 if the weapon is not broken and compatible with the construct size",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "1 if the weapon is operational, otherwise 0 = broken, -1 = incompatible size",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 541986,
                        "stop_char": 542026
                    },
                    {
                        "name": "isOperational",
                        "short_desc": "",
                        "desc": "",
                        "params": [],
                        "returns": [],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": true,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 542123,
                        "stop_char": 542157
                    },
                    {
                        "name": "getStatus",
                        "short_desc": "Returns the current weapon status",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The current status of the weapon (Idle = 1, Firing = 2, Reloading = 3, Unloading = 4)",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 542302,
                        "stop_char": 542332
                    },
                    {
                        "name": "getContainerId",
                        "short_desc": "Returns the local id of the container linked to the weapon",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The local id of the container",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 542446,
                        "stop_char": 542481
                    },
                    {
                        "name": "getHitProbability",
                        "short_desc": "Returns the current hit probability of the weapon for the current target",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The hit probability of the weapon",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 542612,
                        "stop_char": 542650
                    },
                    {
                        "name": "getBaseDamage",
                        "short_desc": "Returns the base weapon damage",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The base weapon damage in hitpoints",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 542741,
                        "stop_char": 542775
                    },
                    {
                        "name": "getOptimalAimingCone",
                        "short_desc": "Returns the optimal aim cone",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The optimal aim cone in degrees",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 542860,
                        "stop_char": 542901
                    },
                    {
                        "name": "getOptimalDistance",
                        "short_desc": "Returns the optimal distance to target",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The optimal distance in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 542995,
                        "stop_char": 543034
                    },
                    {
                        "name": "getMaxDistance",
                        "short_desc": "Returns the maximum distance to target",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The optimal distance in meters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 543128,
                        "stop_char": 543163
                    },
                    {
                        "name": "getOptimalTracking",
                        "short_desc": "Returns the optimal tracking rate",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The optimal tracking rate in degrees per second",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 543269,
                        "stop_char": 543308
                    },
                    {
                        "name": "getMagazineVolume",
                        "short_desc": "Returns the magazine volume",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The magazine volume in liters",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 543390,
                        "stop_char": 543428
                    },
                    {
                        "name": "getCycleTime",
                        "short_desc": "Returns the weapon cycle time",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The weapon cycle time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 543515,
                        "stop_char": 543548
                    },
                    {
                        "name": "getReloadTime",
                        "short_desc": "Returns the weapon reload time",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The weapon reload time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 543637,
                        "stop_char": 543671
                    },
                    {
                        "name": "getUnloadTime",
                        "short_desc": "Returns the weapon unload time",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The weapon unload time in seconds",
                                "type": {
                                    "id": "number"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 543760,
                        "stop_char": 543794
                    },
                    {
                        "name": "getTargetId",
                        "short_desc": "Returns the id of the current target construct of the weapon",
                        "desc": "",
                        "params": [],
                        "returns": [
                            {
                                "desc": "The target construct id",
                                "type": {
                                    "id": "custom",
                                    "name": "integer"
                                }
                            }
                        ],
                        "usage": "",
                        "is_virtual": false,
                        "is_abstract": false,
                        "is_deprecated": false,
                        "is_static": true,
                        "visibility": "public",
                        "start_char": 543904,
                        "stop_char": 543936
                    }
                ],
                "short_desc": "",
                "desc": "",
                "usage": "",
                "inherits_from": [],
                "fields": []
            }
        ],
        "functions": [],
        "data": [],
        "name": "unknown",
        "is_class_mod": false,
        "short_desc": "",
        "desc": "",
        "usage": ""
    }
]
